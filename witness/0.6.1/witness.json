{
  "description": {
    "spec-version": {
      "Left": [
        2,
        2
      ]
    },
    "package": {
      "name": "witness",
      "version": [
        0,
        6,
        1
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "BSD_2_Clause"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "(c) 2017-2022 Ashley Yakeley",
    "maintainer": "<ashley@semantic.org>",
    "author": "Ashley Yakeley",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/AshleyYakeley/witness",
    "pkg-url": "",
    "bug-reports": "https://github.com/AshleyYakeley/witness/issues",
    "source-repos": [],
    "synopsis": "values that witness types",
    "description": "A /witness/ is a value that witnesses some sort of constraint on some list of type variables. This library provides support for a wide variety of witness types. It also provides classes for /representatives/, which are values that represent types.",
    "category": "Data",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "changelog.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Type",
          "Witness",
          "Apply"
        ],
        [
          "Data",
          "PeanoNat"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "General",
          "TestHetEquality"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "General",
          "HetConstraint"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "Some"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "All"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "General",
          "AllConstraint"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "General",
          "WitnessConstraint"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "General",
          "WitnessValue"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "General",
          "ListElement"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "Symbol"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "General",
          "Finite"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "Single"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "Pair"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "Empty"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "Either"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "FiniteAllFor"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "WitnessMap",
          "Of"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "WitnessMap",
          "For"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "OrderedWitnessMap",
          "Of"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "OrderedWitnessMap",
          "For"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "PeanoNat"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "Natural"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "FixedList"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "List",
          "Element"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "List",
          "List"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "Concat"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "ApplyStack"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "List",
          "Product"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "Specific",
          "List",
          "Sum"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "General",
          "Representative"
        ],
        [
          "Data",
          "Type",
          "Witness",
          "General",
          "Order"
        ],
        [
          "Data",
          "Type",
          "Witness"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Import"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "AllowAmbiguousTypes"
          },
          {
            "enable-extension": "Arrows"
          },
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "EmptyCase"
          },
          {
            "enable-extension": "EmptyDataDecls"
          },
          {
            "enable-extension": "ExistentialQuantification"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "ForeignFunctionInterface"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "ImplicitParams"
          },
          {
            "disable-extension": "ImplicitPrelude"
          },
          {
            "enable-extension": "InstanceSigs"
          },
          {
            "enable-extension": "KindSignatures"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "OverloadedLabels"
          },
          {
            "enable-extension": "OverloadedStrings"
          },
          {
            "enable-extension": "PartialTypeSignatures"
          },
          {
            "enable-extension": "PatternGuards"
          },
          {
            "enable-extension": "PatternSynonyms"
          },
          {
            "enable-extension": "PolyKinds"
          },
          {
            "enable-extension": "QuantifiedConstraints"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "RecordWildCards"
          },
          {
            "enable-extension": "RecursiveDo"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "StandaloneKindSignatures"
          },
          {
            "disable-extension": "StarIsType"
          },
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "TypeApplications"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeFamilyDependencies"
          },
          {
            "enable-extension": "TypeInType"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "TypeSynonymInstances"
          },
          {
            "enable-extension": "UndecidableInstances"
          },
          {
            "enable-extension": "UndecidableSuperClasses"
          },
          {
            "enable-extension": "ViewPatterns"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-Wincomplete-uni-patterns",
            "-Wincomplete-record-updates",
            "-Wcompat",
            "-Wnoncanonical-monad-instances"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.15 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "constraints",
            "version-range": ">=0.13",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "countable",
            "version-range": ">=1.2",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.15 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "constraints",
        "version-range": ">=0.13",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "countable",
        "version-range": ">=1.2",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
