name:                category-printf
version:             0.1.0.1
synopsis:            Highbrow approach to type-safe printf format specifications.
description:         We use the co-Kleisli category for the comonad of
                     functions out of a fixed monoid to implement a generic
                     combinator library for type-safe format specifications.
                     Works with pretty much anything that's a monoid, with
                     specific support for String, Text (strict/lazy), and
                     ByteString (strict/lazy). Credit to Daniel Patterson
                     for introducing me to something that looked just enough
                     like it ought to be the composition for a category, and
                     Ryan Trinkle for the IsString instance. :)
license:             BSD3
license-file:        LICENSE
author:              Cale Gibbard
maintainer:          cgibbard@gmail.com
category:            Text
build-type:          Simple

-- Constraint on the version of Cabal needed to build this package.
cabal-version:       >=1.10

library
  exposed-modules:     Control.Category.Printf,
                       Control.Category.Printf.String,
                       Control.Category.Printf.Text.Strict,
                       Control.Category.Printf.Text.Lazy,
                       Control.Category.Printf.ByteString.Strict,
                       Control.Category.Printf.ByteString.Lazy
  
  other-extensions:    OverloadedStrings, FlexibleInstances, TypeFamilies
  build-depends:       base ==4.*, comonad >=5 && <5.1, text >=1.1 && <1.3, bytestring >=0.10 && <0.11
  hs-source-dirs:      src
  default-language:    Haskell2010
