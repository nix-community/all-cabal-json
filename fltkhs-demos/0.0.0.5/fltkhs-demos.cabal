name: fltkhs-demos
version: 0.0.0.5
synopsis: FLTKHS demos. Please scroll to the bottom for more information.
description:
  FLTKHS demos moved to a separate package to keep the core package free of additional dependencies.
license: MIT
license-file: LICENSE
author: Aditya Siram
maintainer: aditya.siram@gmail.com
homepage: http://github.com/deech/fltkhs-demos
-- bug-reports:
-- copyright:
category: UI,Graphics
build-type: Custom
cabal-version: >=1.20
source-repository head
  type: git
  location: http://github.com/deech/fltkhs-demos

Flag FastCompile
   Description: Turn off optimizations for faster compilation
   Manual: True
   Default: True

Executable fltkhs-threads
  Main-Is: threads.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
     base == 4.*,
     fltkhs >= 0.4.0.3,
     stm
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-pack
  Main-Is: pack.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    directory >= 1.2.1.0,
    fltkhs >= 0.4.0.3
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-tile
  Main-Is: tile.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    directory,
    fltkhs >= 0.4.0.3
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-nativefilechooser-simple-app
  Main-Is: nativefilechooser-simple-app.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    directory,
    fltkhs >= 0.4.0.3
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-table-as-container
  Main-Is: table-as-container.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs >= 0.4.0.3
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-texteditor-simple
  Main-Is: texteditor-simple.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs >= 0.4.0.3
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-textdisplay-with-colors
  Main-Is: textdisplay-with-colors.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs >= 0.4.0.3
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-doublebuffer
  Main-Is: doublebuffer.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs >= 0.4.0.3
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-make-tree
  Main-Is: make-tree.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs >= 0.4.0.3
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-tree-simple
  Main-Is: tree-simple.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs >= 0.4.0.3
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-table-spreadsheet-with-keyboard-nav
  Main-Is: table-spreadsheet-with-keyboard-nav.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs >= 0.4.0.3
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-table-simple
  Main-Is: table-simple.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs >= 0.4.0.3
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-table-sort
  Main-Is: table-sort.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs >= 0.4.0.3,
    process
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-arc
  Main-Is: arc.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs >= 0.4.0.3
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-bitmap
  Main-Is: bitmap.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
     base == 4.*,
     fltkhs >= 0.4.0.3,bytestring
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-boxtype
  Main-Is: boxtype.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
     base == 4.*,
     fltkhs >= 0.4.0.3,bytestring
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-browser
  Main-Is: browser.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
     base == 4.*,
     fltkhs >= 0.4.0.3,
     bytestring
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-clock
  Main-Is: clock.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
     base == 4.*,
     fltkhs >= 0.4.0.3,
     bytestring
  default-language: Haskell2010
  ghc-Options: -Wall -threaded
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if os(windows)
   ghc-Options: -optl-mwindows
  if os(darwin)
   ghc-Options: -pgml g++ "-optl-Wl,-lfltkc"
  if !os(darwin) && !os(windows)
   ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"
