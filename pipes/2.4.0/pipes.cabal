Name: pipes
Version: 2.4.0
x-revision: 1
Cabal-Version: >=1.10
Build-Type: Simple
License: BSD3
License-File: LICENSE
Copyright: 2012 Gabriel Gonzalez
Author: Gabriel Gonzalez
Maintainer: Gabriel439@gmail.com
Stability: Experimental
Bug-Reports: https://github.com/Gabriel439/Haskell-Pipes-Library/issues
Synopsis: Compositional pipelines
Description:
  \"Iteratees done right\".  This library implements
  iteratees\/enumerators\/enumeratees simply and elegantly, using different
  naming conventions.
  .
  Advantages over traditional iteratee implementations:
  .
  * /Concise API/: This library uses a few simple abstractions with a very high
    power-to-weight ratio to reduce adoption time.
  .
  * /Clear semantics/: All abstractions are grounded in category theory, which
    leads to intuitive behavior (and fewer bugs, if any!).
  .
  * /Bidirectionality/: The library provides a bidirectional type, called a
    'Proxy'.
  .
  * /Extension Framework/: You can elegantly mix and match extensions to the
    base type and easily create your own!
  .
  * /Extensive Documentation/: Second to none!
  .
  I recommend you begin by reading "Control.Pipe.Tutorial" which introduces the
  basic concepts using the simpler 'Pipe' API.  Then move on to
  "Control.Proxy.Tutorial", which introduces the 'Proxy' type which forms the
  core abstraction of this library.  To use extensions or define your own, check
  out "Control.Proxy.Trans.Tutorial".
  .
  I will soon replace "Control.Frame" with a superior resource-management
  solution, so new users of the library should avoid using it.
Category: Control, Pipe, Proxies
Tested-With: GHC ==7.4.1
Source-Repository head
    Type: git
    Location: https://github.com/Gabriel439/Haskell-Pipes-Library

Library
    Build-Depends:
        base >= 4 && < 5,
        free >= 3.2,
        index-core,
        transformers
    Exposed-Modules:
        Control.Frame,
        Control.Frame.Tutorial,
        Control.IMonad.Trans.Free,
        Control.MFunctor,
        Control.Proxy,
        Control.Proxy.Core,
        Control.Proxy.Class,
        Control.Proxy.Pipe,
        Control.Proxy.Trans,
        Control.Proxy.Trans.Either,
        Control.Proxy.Trans.Identity,
        Control.Proxy.Trans.Maybe,
        Control.Proxy.Trans.Reader,
        Control.Proxy.Trans.State,
        Control.Proxy.Trans.Tutorial,
        Control.Proxy.Trans.Writer,
        Control.Proxy.Tutorial,
        Control.Proxy.Prelude,
        Control.Proxy.Prelude.Base,
        Control.Proxy.Prelude.IO,
        Control.Proxy.Prelude.Kleisli,
        Control.Pipe,
        Control.Pipe.Core,
        Control.Pipe.Tutorial,
        Data.Closed
    GHC-Options: -O2
    Default-Language: Haskell2010
