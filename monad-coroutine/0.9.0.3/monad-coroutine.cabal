Name:                monad-coroutine
Version:             0.9.0.3
Cabal-Version:       >= 1.10
Build-Type:          Simple
Synopsis:            Coroutine monad transformer for suspending and resuming monadic computations
Category:            Concurrency, Control, Monads
Tested-with:         GHC
Description:
  This package defines a monad transformer, applicable to any monad, that allows the monadic computation to suspend and
  to be later resumed. The transformer is parameterized by an arbitrary functor, used to store the suspended
  computation's resumption.
  
License:             GPL
License-file:        LICENSE.txt
Copyright:           (c) 2010-2016 Mario Blazevic
Author:              Mario Blazevic
Maintainer:          blamario@yahoo.com
Homepage:            http://trac.haskell.org/SCC/wiki/monad-coroutine
Extra-source-files:  Test/BenchmarkCoroutine.hs
Source-repository head
  type:              darcs
  location:          http://code.haskell.org/SCC/

Library
  Exposed-Modules:   Control.Monad.Coroutine, Control.Monad.Coroutine.SuspensionFunctors, Control.Monad.Coroutine.Nested
  Build-Depends:     base < 5, transformers >= 0.2 && < 0.6, transformers-compat >= 0.3 && < 0.6, monad-parallel < 1.0
  if impl(ghc >= 7.0.0)
     default-language: Haskell2010
