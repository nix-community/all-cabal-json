{
  "description": {
    "spec-version": {
      "Right": ">=1.6"
    },
    "package": {
      "name": "usb-safe",
      "version": [
        0,
        14
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "2009â€“2010 Bas van Dijk",
    "maintainer": "Bas van Dijk <v.dijk.bas@gmail.com>",
    "author": "Bas van Dijk <v.dijk.bas@gmail.com>",
    "stability": "experimental",
    "tested-with": [],
    "homepage": "https://github.com/basvandijk/usb-safe/",
    "pkg-url": "",
    "bug-reports": "https://github.com/basvandijk/usb-safe/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/basvandijk/usb-safe.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Type-safe communication with USB devices.",
    "description": "The @usb@ package provides a standard Haskell abstraction layer over\n@bindings-libusb@ providing: abstract types instead of @Ptr@s, automatic\nmarshalling and unmarshalling, automatic garbage collection,\nexceptions instead of integer return codes, etc..\n\nWhile all that is very nice there are still some things that you can\ndo wrong. For example doing I/O with a closed device or reading from\nor writing to an endpoint which doesn't belong to the claimed\ninterface. Or reading from an Out endpoint or writing to an In\nendpoint.\n\n@usb-safe@ provides the following guarantees:\n\n* You can't reference handles to devices that are closed. In other words: no\nI/O with closed handles is possible.\n\n* The programmer specifies the /region/ in which devices should remain open. On\nexit from the region the opened devices will be closed automatically.\n\n* You can't reference handles to configurations that have not been set.\n\n* You can't reference handles to interfaces that have not been claimed.\n\n* Just like with devices, the programmer can specify the region in\nwhich interfaces should remain claimed. On exit from the region\nthe claimed interfaces will be released automatically.\n\n* You can't reference handles to alternates that have not been set.\n\n* You can't reference endpoints that don't belong to a setted alternate.\n\n* You can't read from an endpoint with an Out transfer direction.\n\n* You can't write to an endpoint with an In transfer direction.\n\nThe primary technique used in usb-safe is called \\\"Lightweight monadic\nregions\\\" which was invented by Oleg Kiselyov and Chung-chieh Shan.\nSee:\n\n<http://okmij.org/ftp/Haskell/regions.html#light-weight>\n\nThis technique is implemented in the @regions@ package which is\nre-exported from @usb-safe@.\n\nSee the @usb-safe-examples@ package for examples how to use this library:\n\n@git clone <https://github.com/basvandijk/usb-safe-examples>@",
    "category": "System, Monadic Regions",
    "custom-fields": [],
    "build-type-raw": "Custom",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README.markdown",
      "NEWS"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "System",
          "USB",
          "Safe"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [
          [
            "System",
            "USB",
            "Safe",
            "Iteratee"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-fno-warn-orphans"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4 && <4.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base-unicode-symbols",
            "version-range": ">=0.1.1 && <0.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "usb",
            "version-range": ">=1.0 && <1.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bindings-libusb",
            "version-range": ">=1.3 && <1.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "iteratee",
            "version-range": ">=0.4 && <0.9",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": ">=0.9 && <0.10",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=0.5 && <0.12",
            "library": [
              {}
            ]
          },
          {
            "package-name": "regions",
            "version-range": ">=0.11 && <0.12",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.2 && <0.3",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4 && <4.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base-unicode-symbols",
        "version-range": ">=0.1.1 && <0.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "usb",
        "version-range": ">=1.0 && <1.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bindings-libusb",
        "version-range": ">=1.3 && <1.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "iteratee",
        "version-range": ">=0.4 && <0.9",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": ">=0.9 && <0.10",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=0.5 && <0.12",
        "library": [
          {}
        ]
      },
      {
        "package-name": "regions",
        "version-range": ">=0.11 && <0.12",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.2 && <0.3",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "cond_and_1": {
            "variable": {
              "compiler": "GHC",
              "version": ">7"
            }
          },
          "cond_and_2": {
            "cond_not": {
              "variable": {
                "os": "Windows"
              }
            }
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [
                "-DHAS_EVENT_MANAGER"
              ],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      }
    ]
  }
}
