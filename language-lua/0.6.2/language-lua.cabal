Name:                language-lua

Description:
    Lua 5.2 lexer, parser and pretty-printer.
    .
    Changelog:
    .
    \0.6.2:
    .
    - `base` dependency is relaxed for GHC 7.10. Note that alex version
      >3.1.4 is required to compile with GHC 7.10.
    .
    \0.6.1:
    .
    - `Generic` and `NFData` instances are implemented for syntax trees.
    .
    \0.6.0:
    .
    - Fixed a long string literal parsing bug which was causing long strings to
      terminate at wrong points.
    .
    - \\z escape characters in strings are now scanned and interpreted correctly.
    .
    - This is first version that parses all of Lua 5.2.2 test suite.
    .
    \0.5.0:
    .
    - 2-years-old operator parsing bug fixed. Chained/nested operator
      expressions are now properly parsed.
    .
    \0.4.6:
    .
    - Language.Lua.Annotated.Lexer module exposed.
    .
    \0.4.5:
    .
    - Fixed a bug that made lexer accept invalid escape sequences in strings.
    .
    - Strings are now interpreted \-\- string "\\n" is now parsed to Haskell
      string "\\n", instead of "\\\\n".
    .
    - Fixed character code parsing.
    .
    \0.4.4:
    .
    - Printer now takes operator precedences into account while printing
      `Binop` and `Unop` expressions and prints parenthesis as necessary.
    .
    - Printer now does not put line break in `Binop` expressions.
    .
    \0.4.3:
    .
    - `Data` and `Typeable` instances are implemented for syntax tree.
    .
    \0.4.2:
    .
    - More tweaks in pretty printer.
    .
    - Started using 2 spaces for indentation(instead of 4 as before).
    .
    \0.4.1:
    .
    - Some tweaks in pretty-printer.
    .
    \0.4.0:
    .
    - `Table` and `FunDef` nodes are removed from simplified syntax.
    .
    \0.3.1:
    .
    - Fixed incorrectly exported name `exp` in `Language.Lua.Parser` module.
    .
    \0.3.0:
    .
    - Added non-annotated syntax to make code-generation easier.
    .
    \0.2.3:
    .
    - Minor internal changes.
    .
    \0.2.2:
    .
    - Some tweaks in pretty-printer.
    .
    \0.2.0:
    .
    - Syntax tree is annotated. All parsers(`parseText`, `parseFile`) annotate
      resulting tree with source positions.

Version:             0.6.2
Synopsis:            Lua parser and pretty-printer
Homepage:            http://github.com/osa1/language-lua
Bug-reports:         http://github.com/osa1/language-lua/issues
License:             BSD3
License-file:        LICENSE
Author:              Ömer Sinan Ağacan
Maintainer:          omeragacan@gmail.com
Category:            Language
Build-type:          Simple
Stability:           Experimental
Cabal-version:       >= 1.9.2

Extra-source-files:  src/Text/PrettyPrint/LICENSE

Source-repository head
  Type:              git
  Location:          git://github.com/osa1/language-lua.git

Library
  Hs-source-dirs:    src

  Exposed-modules:   Language.Lua
                     Language.Lua.Token
                     Language.Lua.Syntax
                     Language.Lua.Parser
                     Language.Lua.PrettyPrinter
                     Language.Lua.Annotated
                     Language.Lua.Annotated.Syntax
                     Language.Lua.Annotated.Parser
                     Language.Lua.Annotated.Lexer
                     Language.Lua.Annotated.Simplify
                     Text.Parsec.LTok

  Other-modules:     Text.PrettyPrint.Leijen

  Build-depends:     base >= 4.5 && < 4.9,
                     deepseq,
                     array >= 0.4 && < 0.6,
                     mtl >= 2.0 && < 2.3,
                     parsec >= 3.1.3 && < 3.2,
                     safe >= 0.3 && < 0.4

  ghc-options:       -Wall

Test-Suite tests
  Type:              exitcode-stdio-1.0
  Hs-source-dirs:    tests
  Main-is:           Main.hs
  Build-depends:     base >= 4.5 && < 4.9,
                     deepseq,
                     directory,
                     filepath,
                     language-lua,
                     parsec >= 3.1.3 && < 3.2,
                     QuickCheck,
                     tasty,
                     tasty-hunit,
                     tasty-quickcheck

  ghc-options:       -Wall

Benchmark bench
  type:              exitcode-stdio-1.0
  default-language:  Haskell2010
  main-is:           Main.hs
  hs-source-dirs:    bench
  ghc-options:       -Wall

  build-depends:     base,
                     criterion,
                     directory,
                     filepath,
                     language-lua
