{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "lens-sop",
      "version": [
        0,
        2,
        0,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "andres@well-typed.com",
    "author": "Edsko de Vries <edsko@well-typed.com>, Andres LÃ¶h <andres@well-typed.com>",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.6.3"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.8.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.10.2"
      }
    ],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/well-typed/lens-sop",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Computing lenses generically using generics-sop",
    "description": "This library contains a definition of generalized lenses that are built\non top of the @<https://hackage.haskell.org/package/fclabels fclabels>@ package.\n\nIt also contains SOP-style generic functions (based on the\n@<https://hackage.haskell.org/package/generics-sop generics-sop>@ package) that\ncompute lenses for a given record type. Generalized lenses for the\nSOP representation types are also provided.\n\nFurthermore, a generic function is provided that computes a lens from\na given (string-based) path specification.\n",
    "category": "Generics",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Generics",
          "SOP",
          "Lens"
        ],
        [
          "Generics",
          "SOP",
          "Lens",
          "Named"
        ],
        [
          "Generics",
          "SOP",
          "Lens",
          "Computed"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "TypeSynonymInstances"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "DeriveFoldable"
          },
          {
            "enable-extension": "DeriveTraversable"
          },
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "KindSignatures"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "FunctionalDependencies"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.6 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "generics-sop",
            "version-range": ">=0.2 && <0.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "fclabels",
            "version-range": ">=2.0 && <2.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.3 && <0.5",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.6 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "generics-sop",
        "version-range": ">=0.2 && <0.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "fclabels",
        "version-range": ">=2.0 && <2.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.3 && <0.5",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "variable": {
            "compiler": "GHC",
            "version": ">=7.8"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [
                {
                  "enable-extension": "AutoDeriveTypeable"
                }
              ],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      }
    ]
  }
}
