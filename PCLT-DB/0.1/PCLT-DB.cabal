Name: PCLT-DB
Synopsis: 
        An addon to PCLT package: enchance PCLT catalog with PostgreSQL powers.
Description:
        \"PCLT\" is an abbreviation for \"Parametric Composable Localizable 
        Templates\" - in fact it should also hold Detalizable. 
        Term \"Detailizable content (message)\" in this package 
        has a following meaning: some content, representing which 
        it is possible to regulate, in how much details it is represented.
        .
        Conceptually, this package is a powerful extension to the well known 
        Show class, that (extension) is thought to be embeded in any 
        Haskell program, which requires multilanguage support, and/or where 
        messages should be detailizable. 
        .
        For more information about PCLT, read in it's description in it's own 
        Cabal file.
        .
        _________
        .
        By the base package (PCLT) the templates are provided to be stored 
        statically in module declarations using 
        'Text.PCLT.HasStaticRawPCLTs.HasStaticRawPCLTs' class instaniations. 
        .
        The PCST-DB package adds a possibility to store templates in DB 
        (under PostgreSQL v8.4. (not less)). 
        .
        The following units are storable in DB:
        .
        * localizable templates 
        .
        * localized templates
        .
        * languages
        .
        * collections of localizable templates 
        .
        * collections (of localizable templates) compositions
        .
        * catalogs
        .
        * configurations of PCLT catalogs
        .
        * localizable templates detalization policies 
        .
        For each catalog in DB there is stored a special flag \"catalog data
        or config changed\". The flag gets raised by an army of triggers, 
        that watches every table, and is thought to get dropped by a program, 
        which uses DB catalog. Drop the flag right before catalog update 
        from DB.
        .
        Unfortunately, the current implementation of this flagging system 
        constraints the number of agents that update their catalogs from DB 
        by only one (because, when agent updates it's catalog, it drops 
        the flag, and other agents don't know that flag was risen, so they 
        can't know if version of catalog in their operative memory is older 
        then in DB or not).
        .
        But this limitation removal is planned as a first ToDo in the next 
        version of PCLT-DB.
Version: 0.1
Copyright: Copyright (c) 2009 Andrejs Sisojevs
License: LGPL
License-File: COPYRIGHT
Author: Andrejs Sisojevs <andrejs.sisojevs@nextmail.ru>
Maintainer: Andrejs Sisojevs <andrejs.sisojevs@nextmail.ru>
Stability: alpha
Homepage: http://github.com/Andrey-Sisoyev/PCLT-DB
Category: Database
Tested-With: GHC == 6.10.4
Cabal-Version: >= 1.6
Build-Type: Simple

Extra-Source-Files:
    COPYRIGHT
    COPYING
    doinst.sh
    db/db_inst.sh
    db/data.sql
    db/pclt.sql
    db/pclt_meta.sql
    db/view.sql
    db/local_test/tests.sql
    initial_data/PCLT-DB.PCLTCatalog.ods
    models/PCLT-DB.ERD.v0.1.odg
    models/PCLT-DB.ERD.v0.1.odg.png      
    examples/HelloWorld/HelloWorld.hs
    examples/HelloWorld/HelloWorld__.hs
    examples/HelloWorld/HelloWorld_Data.hs
    examples/HelloWorld/HelloWorld.PCLTCatalog.ods
    examples/HelloWorld/HelloWorld.sql

Library
    Build-Depends:
        base >= 4 && < 5, bytestring, containers, convertible, mtl, HDBC, HDBC-postgresql, PCLT
    Exposed-Modules:
        Database.ReadableFromDB
        Database.ReadableFromDB__
        Database.PCLT
        Database.PCLT.InterfaceWithDB
        Database.PCLT.InterfaceWithDB__
        Database.PCLT.UpdatableCatalog
    Other-Modules:
        Data.MyHelpers
        Data.MyHelpers_