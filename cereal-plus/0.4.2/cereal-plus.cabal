name:
  cereal-plus
version:
  0.4.2
synopsis:
  An extended serialization library on top of "cereal"
description:
  Provides non-orphan instances for an extended range of types, 
  transformer types and support for mutable data,
  while reapproaching the naming conventions of \"cereal\" library.

  For a streaming frontend over this library see 
  <http://hackage.haskell.org/package/pipes-cereal-plus "pipes-cereal-plus">
license:
  MIT
license-file:
  LICENSE
homepage:
  https://github.com/nikita-volkov/cereal-plus 
bug-reports:
  https://github.com/nikita-volkov/cereal-plus/issues 
author:
  Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:
  Nikita Volkov <nikita.y.volkov@mail.ru>
copyright:
  (c) 2013, Nikita Volkov
category:
  Serialization
build-type:
  Simple
cabal-version:
  >=1.10


source-repository head
  type:
    git
  location:
    git://github.com/nikita-volkov/cereal-plus.git


library
  hs-source-dirs:
    library
  exposed-modules:
    CerealPlus.Serializable
    CerealPlus.Deserialize
    CerealPlus.Serialize
  other-modules:
    CerealPlus.Prelude
  build-depends:
    -- Serialization:
    cereal >= 0.4 && < 0.7,
    -- Concurrency:
    stm < 3,
    -- Data:
    time < 1.7,
    hashable < 2,
    hashtables < 2,
    unordered-containers < 0.3,
    vector < 0.12,
    array < 0.6,
    containers < 0.6,
    text < 2,
    bytestring < 1.3,
    -- Control:
    mmorph == 1.*,
    errors >= 1.4 && < 3,
    mtl >= 2 && < 3,
    base >= 4.5 && < 5
  ghc-options:
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFunctor, DeriveGeneric, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010


test-suite cereal-plus-htf-test-suite
  type:             
    exitcode-stdio-1.0
  hs-source-dirs:   
    htf-test-suite
  main-is:          
    HTFTestSuite.hs
  build-depends:
    cereal-plus,
    -- testing:
    quickcheck-instances,
    QuickCheck,
    HUnit,
    HTF == 0.13.*,
    -- Serialization:
    cereal,
    -- Concurrency:
    stm,
    -- Data:
    time,
    hashable,
    hashtables,
    unordered-containers,
    vector,
    array,
    containers,
    text,
    bytestring,
    -- Control:
    mmorph,
    errors,
    mtl,
    base
  ghc-options:
    -funbox-strict-fields
    -threaded
    "-with-rtsopts=-N"
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFunctor, DeriveGeneric, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
