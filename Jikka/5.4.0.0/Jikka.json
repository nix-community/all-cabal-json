{
  "description": {
    "spec-version": {
      "Left": [
        1,
        12
      ]
    },
    "package": {
      "name": "Jikka",
      "version": [
        5,
        4,
        0,
        0
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "2021 Kimiyuki Onaka",
    "maintainer": "kimiyuk95@gmail.com",
    "author": "Kimiyuki Onaka",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/kmyk/Jikka#readme",
    "pkg-url": "",
    "bug-reports": "https://github.com/kmyk/Jikka/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/kmyk/Jikka",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "A transpiler from Python to C++ for competitive programming",
    "description": "Please see the README on GitHub at <https://github.com/kmyk/Jikka>",
    "category": "Compilers/Interpreters",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [
      "runtime/include/jikka/convex_hull_trick.hpp",
      "runtime/include/jikka/divmod.hpp",
      "runtime/include/jikka/error.hpp",
      "runtime/include/jikka/matrix.hpp",
      "runtime/include/jikka/modulo.hpp",
      "runtime/include/jikka/modulo_matrix.hpp",
      "runtime/include/jikka/not_modulo.hpp",
      "runtime/include/jikka/range.hpp",
      "runtime/include/jikka/segment_tree.hpp",
      "runtime/include/jikka/slope_trick.hpp"
    ],
    "data-dir": ".",
    "extra-source-files": [
      "README.md",
      "CHANGELOG.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "package-flags": [
    {
      "name": "embed-runtime",
      "description": "Embed files under runtime/include/ to the compiled binary.",
      "default": false,
      "manual": true
    }
  ],
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Jikka",
          "Common",
          "Alpha"
        ],
        [
          "Jikka",
          "Common",
          "Combinatorics"
        ],
        [
          "Jikka",
          "Common",
          "Error"
        ],
        [
          "Jikka",
          "Common",
          "FileEmbed"
        ],
        [
          "Jikka",
          "Common",
          "Format",
          "AutoIndent"
        ],
        [
          "Jikka",
          "Common",
          "Format",
          "Color"
        ],
        [
          "Jikka",
          "Common",
          "Format",
          "Error"
        ],
        [
          "Jikka",
          "Common",
          "Format",
          "Location"
        ],
        [
          "Jikka",
          "Common",
          "Format",
          "Show"
        ],
        [
          "Jikka",
          "Common",
          "Graph"
        ],
        [
          "Jikka",
          "Common",
          "IO"
        ],
        [
          "Jikka",
          "Common",
          "IOFormat"
        ],
        [
          "Jikka",
          "Common",
          "Location"
        ],
        [
          "Jikka",
          "Common",
          "Matrix"
        ],
        [
          "Jikka",
          "Common",
          "ModInt"
        ],
        [
          "Jikka",
          "Common",
          "Parse",
          "JoinLines"
        ],
        [
          "Jikka",
          "Common",
          "Parse",
          "OffsideRule"
        ],
        [
          "Jikka",
          "Common",
          "Parse",
          "Read"
        ],
        [
          "Jikka",
          "Common",
          "Parse",
          "ShuntingYard"
        ],
        [
          "Jikka",
          "Core",
          "Convert"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "Alpha"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "ANormal"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "ArithmeticExpr"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "Beta"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "BubbleLet"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "CloseAll"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "CloseMin"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "CloseSum"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "ConstantFolding"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "ConstantPropagation"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "ConvexHullTrick"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "CumulativeSum"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "EqualitySolving"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "Eta"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "KubaruToMorau"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "MakeScanl"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "MatrixExponentiation"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "PropagateMod"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "RemoveUnusedVars"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "SegmentTree"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "ShortCutFusion"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "SpecializeFoldl"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "TrivialLetElimination"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "TypeInfer"
        ],
        [
          "Jikka",
          "Core",
          "Convert",
          "UnpackTuple"
        ],
        [
          "Jikka",
          "Core",
          "Evaluate"
        ],
        [
          "Jikka",
          "Core",
          "Format"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "ArithmeticExpr"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "Beta"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "BuiltinPatterns"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "Expr"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "FreeVars"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "LambdaPatterns"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "Lint"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "ModuloExpr"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "QuasiRules"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "RewriteRules"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "Runtime"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "TypeCheck"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "Util"
        ],
        [
          "Jikka",
          "Core",
          "Language",
          "Value"
        ],
        [
          "Jikka",
          "Core",
          "Parse"
        ],
        [
          "Jikka",
          "Core",
          "Parse",
          "Alex"
        ],
        [
          "Jikka",
          "Core",
          "Parse",
          "Happy"
        ],
        [
          "Jikka",
          "Core",
          "Parse",
          "Token"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Convert"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Convert",
          "AddMain"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Convert",
          "BundleRuntime"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Convert",
          "FromCore"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Convert",
          "InlineSetAt"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Convert",
          "MoveSemantics"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Convert",
          "OptimizeRange"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Convert",
          "UnpackTuples"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Convert",
          "UseInitialization"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Format"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Language",
          "Expr"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Language",
          "Util"
        ],
        [
          "Jikka",
          "CPlusPlus",
          "Language",
          "VariableAnalysis"
        ],
        [
          "Jikka",
          "Main"
        ],
        [
          "Jikka",
          "Main",
          "Subcommand",
          "Convert"
        ],
        [
          "Jikka",
          "Main",
          "Subcommand",
          "Debug"
        ],
        [
          "Jikka",
          "Main",
          "Subcommand",
          "Execute"
        ],
        [
          "Jikka",
          "Main",
          "Target"
        ],
        [
          "Jikka",
          "Python",
          "Convert",
          "ToRestrictedPython"
        ],
        [
          "Jikka",
          "Python",
          "Language",
          "Expr"
        ],
        [
          "Jikka",
          "Python",
          "Language",
          "Util"
        ],
        [
          "Jikka",
          "Python",
          "Parse"
        ],
        [
          "Jikka",
          "Python",
          "Parse",
          "Alex"
        ],
        [
          "Jikka",
          "Python",
          "Parse",
          "Happy"
        ],
        [
          "Jikka",
          "Python",
          "Parse",
          "Token"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Convert"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Convert",
          "Alpha"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Convert",
          "DefaultMain"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Convert",
          "ParseMain"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Convert",
          "RemoveUnbalancedIf"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Convert",
          "RemoveUnreachable"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Convert",
          "ResolveBuiltin"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Convert",
          "SplitLoops"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Convert",
          "ToCore"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Convert",
          "TypeInfer"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Convert",
          "UseAppend"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Evaluate"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Format"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Language",
          "Builtin"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Language",
          "Expr"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Language",
          "Lint"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Language",
          "Util"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Language",
          "Value"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Language",
          "VariableAnalysis"
        ],
        [
          "Jikka",
          "RestrictedPython",
          "Language",
          "WithoutLoc"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [
          {
            "package-name": "alex",
            "include-renaming": "-any"
          },
          {
            "package-name": "happy",
            "include-renaming": "-any"
          }
        ],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Paths_Jikka"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-W",
            "-optP-Wno-nonportable-include-path"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "ansi-terminal",
            "version-range": "==0.11.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "array",
            "version-range": ">=0.5.3 && <0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": ">=4.12 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.6.0 && <0.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": ">=1.4.4 && <1.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "directory",
            "version-range": ">=1.3.3 && <1.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.2.2 && <2.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2.16.0 && <2.17",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=1.2.3 && <1.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.5.6 && <0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "vector",
            "version-range": ">=0.12.3 && <0.13",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "ansi-terminal",
        "version-range": "==0.11.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "array",
        "version-range": ">=0.5.3 && <0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": ">=4.12 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.6.0 && <0.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": ">=1.4.4 && <1.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "directory",
        "version-range": ">=1.3.3 && <1.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.2.2 && <2.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2.16.0 && <2.17",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=1.2.3 && <1.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.5.6 && <0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "vector",
        "version-range": ">=0.12.3 && <0.13",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "variable": {
            "flag": "embed-runtime"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [
                "-DJIKKA_EMBED_RUNTIME"
              ],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      }
    ]
  },
  "executables": {
    "jikka": {
      "condTreeData": {
        "name": "jikka",
        "module-path": "Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "app"
          ],
          "otherModules": [
            [
              "Paths_Jikka"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-W",
              "-threaded",
              "-rtsopts",
              "-with-rtsopts=-N",
              "-optP-Wno-nonportable-include-path"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "Jikka",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "ansi-terminal",
              "version-range": "==0.11.*",
              "library": [
                {}
              ]
            },
            {
              "package-name": "array",
              "version-range": ">=0.5.3 && <0.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.12 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.6.0 && <0.7",
              "library": [
                {}
              ]
            },
            {
              "package-name": "deepseq",
              "version-range": ">=1.4.4 && <1.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "directory",
              "version-range": ">=1.3.3 && <1.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": ">=2.2.2 && <2.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": ">=2.16.0 && <2.17",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": ">=1.2.3 && <1.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.5.6 && <0.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "vector",
              "version-range": ">=0.12.3 && <0.13",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "Jikka",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "ansi-terminal",
          "version-range": "==0.11.*",
          "library": [
            {}
          ]
        },
        {
          "package-name": "array",
          "version-range": ">=0.5.3 && <0.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.12 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.6.0 && <0.7",
          "library": [
            {}
          ]
        },
        {
          "package-name": "deepseq",
          "version-range": ">=1.4.4 && <1.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "directory",
          "version-range": ">=1.3.3 && <1.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": ">=2.2.2 && <2.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": ">=2.16.0 && <2.17",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": ">=1.2.3 && <1.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.5.6 && <0.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "vector",
          "version-range": ">=0.12.3 && <0.13",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  },
  "test-suites": {
    "jikka-test": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Spec.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [
            {
              "package-name": "hspec-discover",
              "executable-component-name": "hspec-discover",
              "version-range": "-any"
            }
          ],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [
            [
              "Jikka",
              "Common",
              "MatrixSpec"
            ],
            [
              "Jikka",
              "Common",
              "Parse",
              "JoinLinesSpec"
            ],
            [
              "Jikka",
              "Common",
              "Parse",
              "OffsideRuleSpec"
            ],
            [
              "Jikka",
              "Common",
              "Parse",
              "ShuntingYardSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "AlphaSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "ANormalSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "BetaSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "CloseSumSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "ConstantFoldingSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "ConstantPropagationSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "ConvexHullTrickSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "CumulativeSumSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "EtaSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "KubaruToMorauSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "MakeScanlSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "MatrixExponentiationSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "PropagateModSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "RemoveUnusedVarsSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "SegmentTreeSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "ShortCutFusionSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "SpecializeFoldlSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "TrivialLetEliminationSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "TypeInferSpec"
            ],
            [
              "Jikka",
              "Core",
              "Convert",
              "UnpackTupleSpec"
            ],
            [
              "Jikka",
              "Core",
              "EvaluateSpec"
            ],
            [
              "Jikka",
              "Core",
              "FormatSpec"
            ],
            [
              "Jikka",
              "Core",
              "Language",
              "ArithmeticExprSpec"
            ],
            [
              "Jikka",
              "Core",
              "Language",
              "BetaSpec"
            ],
            [
              "Jikka",
              "Core",
              "ParseSpec"
            ],
            [
              "Jikka",
              "CPlusPlus",
              "Convert",
              "FromCoreSpec"
            ],
            [
              "Jikka",
              "CPlusPlus",
              "Convert",
              "MoveSemanticsSpec"
            ],
            [
              "Jikka",
              "CPlusPlus",
              "Convert",
              "UnpackTuplesSpec"
            ],
            [
              "Jikka",
              "CPlusPlus",
              "FormatSpec"
            ],
            [
              "Jikka",
              "Python",
              "Convert",
              "ToRestrictedPythonSpec"
            ],
            [
              "Jikka",
              "Python",
              "Parse",
              "AlexSpec"
            ],
            [
              "Jikka",
              "Python",
              "Parse",
              "HappySpec"
            ],
            [
              "Jikka",
              "Python",
              "ParseSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "Convert",
              "AlphaSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "Convert",
              "RemoveUnbalancedIfSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "Convert",
              "RemoveUnreachableSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "Convert",
              "ResolveBuiltinSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "Convert",
              "SplitLoopsSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "Convert",
              "ToCoreSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "Convert",
              "TypeInferSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "EvaluateSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "FormatSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "Language",
              "BuiltinSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "Language",
              "LintSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "Language",
              "TypeInferSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "Language",
              "UtilSpec"
            ],
            [
              "Jikka",
              "RestrictedPython",
              "Language",
              "VariableAnalysisSpec"
            ],
            [
              "Paths_Jikka"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-W",
              "-threaded",
              "-rtsopts",
              "-with-rtsopts=-N",
              "-optP-Wno-nonportable-include-path"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "Jikka",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "ansi-terminal",
              "version-range": "==0.11.*",
              "library": [
                {}
              ]
            },
            {
              "package-name": "array",
              "version-range": ">=0.5.3 && <0.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.12 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.6.0 && <0.7",
              "library": [
                {}
              ]
            },
            {
              "package-name": "deepseq",
              "version-range": ">=1.4.4 && <1.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "directory",
              "version-range": ">=1.3.3 && <1.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "hlint",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "hspec",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": ">=2.2.2 && <2.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "ormolu",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": ">=2.16.0 && <2.17",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": ">=1.2.3 && <1.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.5.6 && <0.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "vector",
              "version-range": ">=0.12.3 && <0.13",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "Jikka",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "ansi-terminal",
          "version-range": "==0.11.*",
          "library": [
            {}
          ]
        },
        {
          "package-name": "array",
          "version-range": ">=0.5.3 && <0.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.12 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.6.0 && <0.7",
          "library": [
            {}
          ]
        },
        {
          "package-name": "deepseq",
          "version-range": ">=1.4.4 && <1.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "directory",
          "version-range": ">=1.3.3 && <1.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "hlint",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "hspec",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": ">=2.2.2 && <2.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "ormolu",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": ">=2.16.0 && <2.17",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": ">=1.2.3 && <1.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.5.6 && <0.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "vector",
          "version-range": ">=0.12.3 && <0.13",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    },
    "jikka-doctest": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "doctests.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "./"
          ],
          "otherModules": [
            [
              "Paths_Jikka"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-W",
              "-threaded",
              "-rtsopts",
              "-with-rtsopts=-N",
              "-optP-Wno-nonportable-include-path"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "Jikka",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "ansi-terminal",
              "version-range": "==0.11.*",
              "library": [
                {}
              ]
            },
            {
              "package-name": "array",
              "version-range": ">=0.5.3 && <0.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.12 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.6.0 && <0.7",
              "library": [
                {}
              ]
            },
            {
              "package-name": "deepseq",
              "version-range": ">=1.4.4 && <1.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "directory",
              "version-range": ">=1.3.3 && <1.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "doctest",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": ">=2.2.2 && <2.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": ">=2.16.0 && <2.17",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": ">=1.2.3 && <1.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.5.6 && <0.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "vector",
              "version-range": ">=0.12.3 && <0.13",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "Jikka",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "ansi-terminal",
          "version-range": "==0.11.*",
          "library": [
            {}
          ]
        },
        {
          "package-name": "array",
          "version-range": ">=0.5.3 && <0.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.12 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.6.0 && <0.7",
          "library": [
            {}
          ]
        },
        {
          "package-name": "deepseq",
          "version-range": ">=1.4.4 && <1.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "directory",
          "version-range": ">=1.3.3 && <1.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "doctest",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": ">=2.2.2 && <2.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": ">=2.16.0 && <2.17",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": ">=1.2.3 && <1.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.5.6 && <0.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "vector",
          "version-range": ">=0.12.3 && <0.13",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
