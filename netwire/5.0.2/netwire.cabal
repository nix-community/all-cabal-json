name:     netwire
version:  5.0.2
category: FRP
synopsis: Functional reactive programming library

maintainer:   Ertugrul Söylemez <esz@posteo.de>
author:       Ertugrul Söylemez <esz@posteo.de>
copyright:    Copyright 2016 Ertugrul Söylemez
homepage:     https://github.com/esoeylemez/netwire
bug-reports:  https://github.com/esoeylemez/netwire/issues
license:      BSD3
license-file: LICENSE

description:
    This library provides interfaces for and implements wire arrows
    useful both for functional reactive programming (FRP) and locally
    stateful programming (LSP).

build-type:         Simple
cabal-version:      >= 1.10
extra-source-files: CHANGELOG.md README.md

source-repository head
    type:     git
    location: https://github.com/esoeylemez/netwire.git

-- flag Examples
--     default: False
--     description: Build the example programs
--     manual: True

library
    build-depends:
        base         >= 4.5  && < 5,
        containers   >= 0.5  && < 1,
        deepseq      >= 1.3  && < 2,
        parallel     >= 3.2  && < 4,
        profunctors  >= 4.3  && < 6,
        random       >= 1.1  && < 2,
        semigroups   >= 0.15 && < 1,
        transformers >= 0.3  && < 1,
        time         >= 1.4  && < 2
    default-language: Haskell2010
    ghc-options: -W -fdefer-typed-holes
    exposed-modules:
        Control.Wire
        Control.Wire.Core
        Control.Wire.Event
        Control.Wire.Interval
        Control.Wire.Run
        Control.Wire.Session
        Control.Wire.Switch
        Control.Wire.Time
        Control.Wire.Unsafe.Event
        FRP.Netwire
        FRP.Netwire.Analyze
        FRP.Netwire.Move
        FRP.Netwire.Noise
        FRP.Netwire.Utils.Timeline

-- executable netwire-test
--     build-depends:
--         base >= 4.5 && < 5,
--         containers,
--         netwire
--     default-language: Haskell2010
--     default-extensions:
--         Arrows
--         OverloadedStrings
--         RecursiveDo
--     ghc-options: -threaded
--     hs-source-dirs: test
--     main-is: Test.hs
--     if !flag(testprogram)
--         buildable: False
