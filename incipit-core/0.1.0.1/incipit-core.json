{
  "description": {
    "spec-version": {
      "Left": [
        2,
        2
      ]
    },
    "package": {
      "name": "incipit-core",
      "version": [
        0,
        1,
        0,
        1
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "BSD_2_Clause_Patent"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "2022 Torsten Schmits",
    "maintainer": "haskell@tryp.io",
    "author": "Torsten Schmits",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/tek/incipit#readme",
    "pkg-url": "",
    "bug-reports": "https://github.com/tek/incipit/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/tek/incipit",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "A Prelude for Polysemy",
    "description": "See <https://hackage.haskell.org/package/incipit/docs/Prelude.html>",
    "category": "Prelude",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "readme.md",
      "changelog.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Incipit"
        ],
        [
          "Prelude"
        ]
      ],
      "re-exported-modules": [
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "ByteString"
          ],
          "moduleReexportName": [
            "Data",
            "ByteString"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "ByteString",
            "Builder"
          ],
          "moduleReexportName": [
            "Data",
            "ByteString",
            "Builder"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "ByteString",
            "Lazy"
          ],
          "moduleReexportName": [
            "Data",
            "ByteString",
            "Lazy"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "ByteString",
            "Short"
          ],
          "moduleReexportName": [
            "Data",
            "ByteString",
            "Short"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "IntMap",
            "Lazy"
          ],
          "moduleReexportName": [
            "Data",
            "IntMap",
            "Lazy"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "IntMap",
            "Strict"
          ],
          "moduleReexportName": [
            "Data",
            "IntMap",
            "Strict"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "IntSet"
          ],
          "moduleReexportName": [
            "Data",
            "IntSet"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Map",
            "Lazy"
          ],
          "moduleReexportName": [
            "Data",
            "Map",
            "Lazy"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Map",
            "Strict"
          ],
          "moduleReexportName": [
            "Data",
            "Map",
            "Strict"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Sequence"
          ],
          "moduleReexportName": [
            "Data",
            "Sequence"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Set"
          ],
          "moduleReexportName": [
            "Data",
            "Set"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text"
          ],
          "moduleReexportName": [
            "Data",
            "Text"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text",
            "IO"
          ],
          "moduleReexportName": [
            "Data",
            "Text",
            "IO"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text",
            "Lazy"
          ],
          "moduleReexportName": [
            "Data",
            "Text",
            "Lazy"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text",
            "Lazy",
            "IO"
          ],
          "moduleReexportName": [
            "Data",
            "Text",
            "Lazy",
            "IO"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text",
            "Read"
          ],
          "moduleReexportName": [
            "Data",
            "Text",
            "Read"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Tree"
          ],
          "moduleReexportName": [
            "Data",
            "Tree"
          ]
        }
      ],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "lib"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "AllowAmbiguousTypes"
          },
          {
            "enable-extension": "ApplicativeDo"
          },
          {
            "enable-extension": "BangPatterns"
          },
          {
            "enable-extension": "BinaryLiterals"
          },
          {
            "enable-extension": "BlockArguments"
          },
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "DeriveAnyClass"
          },
          {
            "enable-extension": "DeriveDataTypeable"
          },
          {
            "enable-extension": "DeriveFoldable"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "DeriveGeneric"
          },
          {
            "enable-extension": "DeriveTraversable"
          },
          {
            "enable-extension": "DerivingStrategies"
          },
          {
            "enable-extension": "DerivingVia"
          },
          {
            "enable-extension": "DisambiguateRecordFields"
          },
          {
            "enable-extension": "DoAndIfThenElse"
          },
          {
            "enable-extension": "DuplicateRecordFields"
          },
          {
            "enable-extension": "EmptyDataDecls"
          },
          {
            "enable-extension": "ExistentialQuantification"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "InstanceSigs"
          },
          {
            "enable-extension": "KindSignatures"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "LiberalTypeSynonyms"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "MultiWayIf"
          },
          {
            "enable-extension": "NamedFieldPuns"
          },
          {
            "disable-extension": "ImplicitPrelude"
          },
          {
            "enable-extension": "OverloadedStrings"
          },
          {
            "enable-extension": "OverloadedLists"
          },
          {
            "enable-extension": "PackageImports"
          },
          {
            "enable-extension": "PartialTypeSignatures"
          },
          {
            "enable-extension": "PatternGuards"
          },
          {
            "enable-extension": "PatternSynonyms"
          },
          {
            "enable-extension": "PolyKinds"
          },
          {
            "enable-extension": "QuantifiedConstraints"
          },
          {
            "enable-extension": "QuasiQuotes"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "RecordWildCards"
          },
          {
            "enable-extension": "RecursiveDo"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "TupleSections"
          },
          {
            "enable-extension": "TypeApplications"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeFamilyDependencies"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "TypeSynonymInstances"
          },
          {
            "enable-extension": "UndecidableInstances"
          },
          {
            "enable-extension": "UnicodeSyntax"
          },
          {
            "enable-extension": "ViewPatterns"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-Wredundant-constraints",
            "-Wincomplete-uni-patterns",
            "-Wmissing-deriving-strategies",
            "-Widentities"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "incipit-base",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "polysemy",
            "version-range": ">=1.6",
            "library": [
              {}
            ]
          }
        ],
        "mixins": [
          {
            "package-name": "base",
            "include-renaming": {
              "includeProvidesRn": {
                "name": [
                  [
                    "Prelude"
                  ]
                ]
              },
              "includeRequiresRn": {}
            }
          }
        ]
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "incipit-base",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "polysemy",
        "version-range": ">=1.6",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "variable": {
            "compiler": "GHC",
            "version": ">=8.10"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [
                  "-Wunused-packages"
                ],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      }
    ]
  }
}
