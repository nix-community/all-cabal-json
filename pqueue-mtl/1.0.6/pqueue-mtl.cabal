
name:		pqueue-mtl
version:	1.0.6
synopsis:	Fully encapsulated monad transformers with queuelike functionality.
description:	Contains several implementations of data structures implementing a /single-in, single-out/ paradigm, 
		and implements monad transformers for their safe use.  The monad transformer part of the library 
		includes tools to fully encapsulate single-threaded use of a priority queue in a monad, including an 
		array-based heap implementation.

		In general, the purely functional queue types can be ordered in increasing order of speed on generic insertion/deletion operations
		 as follows: 'Stack', 'Queue', 'PQueue', 'IntQueue', 'SkewQueue', 'FQueue', 'Heap'.
		('PQueue', 'IntQueue', and 'SkewQueue' are all very nearly the same speed.) 

		Work is in progress on a van Emde Boas
		or y-fast priority queue implementation, which provides sublogarithmic functionality for all operations.
tested-with:	GHC
category:	Monads, Algorithms
stability:	experimental
bug-reports:	mailto:wasserman.louis@gmail.com
license:	BSD3
license-file:	LICENSE
author:		Louis Wasserman
maintainer:	wasserman.louis@gmail.com
build-Depends:	base, ghc-prim, mtl, containers, stateful-mtl == 1.0.5 , MaybeT, uvector
build-type:	Simple
Exposed-modules:Control.Monad.Queue.Instances, Control.Monad.Queue.Class, Control.Monad.Queue.Heap, Control.Monad.Queue.QueueT, Data.Queue, Data.Queue.PQueue, Data.Queue.FibQueue, Data.Queue.Class, Data.Queue.Instances, Data.Queue.Stack, Data.Queue.Queue, Data.Queue.ReverseQueue, Data.Queue.SkewQueue, Data.Queue.IntQueue, Control.Monad.Queue
other-modules: Data.Queue.QueueHelpers
ghc-options:
