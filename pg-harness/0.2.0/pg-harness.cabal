Name:                pg-harness
Version:             0.2.0
Synopsis:            REST service and library for creating/consuming temporary PostgreSQL databases
Description:
  REST service and client library for conveniently creating and consuming temporary
  PostgreSQL databases. This is intended for use from tests.
  .
  See <https://github.com/BardurArantsson/pg-harness/blob/master/README.md README.md> on
  GitHub for detailed usage and setup instructions for the REST service.
License:             AGPL-3
License-file:        LICENSE.txt
Author:              Bardur Arantsson
Homepage:            https://github.com/BardurArantsson/pg-harness
Maintainer:          bardur@scientician.net
Copyright:           Copyright (c) 2014, 2015 Bardur Arantsson
Category:            Database Testing Web
Build-type:          Simple
Cabal-version:       >=1.10
Data-dir:            data
Data-files:          pg-harness.ini

Source-repository head
  type: git
  location: https://github.com/BardurArantsson/pg-harness.git

Executable pg-harness
  Main-is:           Main.hs
  Ghc-options:       -Wall
  Build-depends:     base == 4.*
                   , async >= 2.0.1.5 && < 3
                   , ini >= 0.2 && < 0.3
                   , postgresql-simple >= 0.4.2 && < 0.5
                   , random >= 1.0 && < 1.1
                   , scotty >= 0.7.0 && < 0.10
                   , text >= 1.1.0 && < 2
                   , transformers >= 0.4.1 && < 0.5
  Default-extensions: LambdaCase
                      OverloadedStrings
                      ScopedTypeVariables
  Hs-source-dirs:    src
  Default-language:  Haskell2010
  Other-modules:     Paths_pg_harness
                     PgHarness.Configuration
                     PgHarness.Mutex
                     PgHarness.DatabaseId

Library
  Build-depends:      base == 4.*
                    , bytestring >= 0.9.0.1
                    , HTTP >= 4000.2.17 && < 4001
  Default-language:   Haskell2010
  Ghc-options:        -Wall
  Hs-source-dirs:     src
  Exposed-modules:    Data.PostgreSQL.Harness.Client
