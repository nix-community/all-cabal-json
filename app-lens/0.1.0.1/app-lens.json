{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "app-lens",
      "version": [
        0,
        1,
        0,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "(c) Kazutaka Matsuda, 2015",
    "maintainer": "kztk@ecei.tohoku.ac.jp",
    "author": "Kazutaka Matsuda",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.8.3"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.8.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.10.2"
      }
    ],
    "homepage": "https://bitbucket.org/kztk/app-lens",
    "pkg-url": "",
    "bug-reports": "https://bitbucket.org/kztk/app-lens/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://bitbucket.org/kztk/app-lens",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "applicative (functional) bidirectional programming beyond composition chains ",
    "description": "A bidirectional transformation connects data in difference formats,\nmaintaining consistency amid separate updates. The \"lens\"\nprogramming language---with Kmett's Haskell lens package being\none of the most influentials---is a solution to this problem.\n\nMany lens implementations (including Kmett's Haskell library) only\nsupport the point-free style of programming. Though concise at times,\nthis style becomes less handy when programs get more complicated.\n\nThis module provides the infrastructure for programming complex\nbidirectional transformations, by representing lenses as functions\nthat are subject to the normal applicative-style programming.  For\nexample, let us consider the 'unlines' functions and to define a\nlens version of it. In our framework we can program through pattern\nmatching and explicit recursion as in normal functional programming.\n\n> unlinesF :: [L s String] -> L s String\n> unlinesF []     = new \"\"\n> unlinesF (x:xs) = catLineF x (unlinesF xs)\n>    where catLineF = lift2 catLineL\n\nHere, @lift2 :: Lens' (a,b) c -> (forall s. L s a -> L s b -> L s\nc)@ and @new :: a -> (forall s. L s a)@ lift lenses to functions.\nThe former is for binary lenses and the latter is for constant\nlenses.  We can then apply lenses as functions, alleviating the\nneed of specialized combinators. In the above, we omitted the\ndefinition of a primitive lens @catLineL :: Lens' (String, String)\nString@ that concatenates two strings with a newline in between.\n\nSimply unlifting ('unlift', 'unlift2', 'unliftT') such \"lens functions\"\ngives us the desired lenses.\n\n> unlinesL :: Lens' [String] String\n> unlinesL = unliftT unlinesF\n\nThe obtained lens works as expected.\n\n> >>> [\"banana\", \"orange\", \"apple\"] ^. unlinesL\n> \"banana\\norange\\napple\\n\"\n> >>> [\"banana\", \"orange\", \"apple\"] & unlinesL .~ \"Banana\\nOrange\\nApple\\n\"\n> [\"Banana\",\"Orange\",\"Apple\"]\n\nOne may prefer to define @unlinesF@ with 'foldr'. Indeed, we can\nuse 'foldr' as below because @catLineF@ and @unlinesF@ are simply\nHaskell functions.\n\n> unlinesF = foldr (lift2 catLineL) (new \"\")\n\nHere, the program is written in a point-free manner similar to that\nof the other lens frameworks. But note that this 'foldr' is just\nHaskell's 'foldr', instead of a special combinator for lenses.\n\nMore examples can be found at \\\"Examples\\\" in the source code\n<https://bitbucket.org/kztk/app-lens/downloads>.\n\n/Remark/.\nThe applicative-style programming is possible in our implementation\nbecause a function representation different from Kmett's is used for lenses.\nAs a result, when we program record-field access chains such as\n\n> src .^ l1 . l2\n> src & l1 . l2 .~ tgt'\n\nThe order of composition is inverted in our implementation.\n\n> src .^ unlift (lift l2 . lift l1)\n> src & unlift (lift l2 . lift l1) .~ tgt'\n\nThis difference causes slight inconvenience for record updates, but is\ncrucial in allowing the applicative-style lens programming we\naim for.",
    "category": "Data, Lenses",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "package-flags": [
    {
      "name": "usevanlaarhoven",
      "description": "Use Control.Lens.Lens' as internal representations.\n(1.5 times speed up for 'lift' but 1000 times slow down for 'lift2')",
      "default": false,
      "manual": false
    }
  ],
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "LensFunction"
        ],
        [
          "Control",
          "LensFunction",
          "Exception"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [
          [
            "Control",
            "LensFunction",
            "Core"
          ],
          [
            "Control",
            "LensFunction",
            "Util"
          ],
          [
            "Control",
            "LensFunction",
            "Internal"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [
          {
            "enable-extension": "RankNTypes"
          },
          {
            "disable-extension": "MonomorphismRestriction"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "UndecidableInstances"
          },
          {
            "enable-extension": "IncoherentInstances"
          },
          {
            "enable-extension": "CPP"
          },
          {
            "enable-extension": "ExistentialQuantification"
          },
          {
            "enable-extension": "DeriveDataTypeable"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "DeriveFoldable"
          },
          {
            "enable-extension": "DeriveTraversable"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.7 && <4.9",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.5 && <0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.2 && <2.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lens",
            "version-range": ">=4 && <4.13",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.7 && <4.9",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.5 && <0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.2 && <2.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lens",
        "version-range": ">=4 && <4.13",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "variable": {
            "flag": "usevanlaarhoven"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [
                "-D__USE_VAN_LAARHOVEN__"
              ],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [
                [
                  "Control",
                  "LensFunction",
                  "InternalL"
                ]
              ],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      }
    ]
  },
  "benchmarks": {
    "compositions": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Bench/Compositions.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-rtsopts",
              "-O2"
            ],
            []
          ],
          "profOptions": [
            [
              "-prof",
              "-rtsopts"
            ],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "app-lens",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "lens",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "deepseq",
              "version-range": ">=1.3 && <1.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "criterion",
              "version-range": ">=1.1 && <1.2",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "app-lens",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "lens",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "deepseq",
          "version-range": ">=1.3 && <1.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "criterion",
          "version-range": ">=1.1 && <1.2",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "variable": {
              "flag": "usevanlaarhoven"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "",
              "interface": {
                "benchmark-type": {
                  "type": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [
                  "-D__USE_VAN_LAARHOVEN__"
                ],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    },
    "eval": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Bench/Eval.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [],
          "otherModules": [
            [
              "Examples",
              "Evaluator"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-rtsopts",
              "-O2"
            ],
            []
          ],
          "profOptions": [
            [
              "-prof",
              "-rtsopts"
            ],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "app-lens",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "lens",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "deepseq",
              "version-range": ">=1.3 && <1.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "criterion",
              "version-range": ">=1.1 && <1.2",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "app-lens",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "lens",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "deepseq",
          "version-range": ">=1.3 && <1.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "criterion",
          "version-range": ">=1.1 && <1.2",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "variable": {
              "flag": "usevanlaarhoven"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "",
              "interface": {
                "benchmark-type": {
                  "type": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [
                  "-D__USE_VAN_LAARHOVEN__"
                ],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    }
  }
}
