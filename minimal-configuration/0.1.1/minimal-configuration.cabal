name:                minimal-configuration
version:             0.1.1
x-revision: 1
synopsis:            Minimal ini like configuration library with a few extras
description:         
    The module exported provides the ability to manage a configuration file in
    the users home directory (or the Windows equivalent). Where the configuration
    takes the form of key=value, without sections, that for example an \'.ini\'
    would have.
    .
    The library simplifies serilization/deserialization of the configuration into
    a structure similar in behavior to a 'Map', as well as an interactive way to
    fill in values for simple cases.
    .
    Consider the following example, where a user would run the application for the
    first time, it would ask him for his name; however on a followup run it would
    just print a greeting with his name.
    .
    > import System.Config.File
    >
    > main = withConfiguration ".apprc" $ \conf -> do
    >     let name = getV conf "name"
    >     case name of Just n  -> putStrLn $ "hello " ++ n
    >                  Nothing -> do conf' <- fillInteractively conf [("name", acceptNonBlank)]
    >                                saveConfiguration conf'

license:             BSD3
license-file:        LICENSE
author:              Marius Ghita
maintainer:          mhitza@gmail.com
-- copyright:           
category:            System, Configuration
build-type:          Simple
cabal-version:       >=1.10

source-repository head
  type:              git
  location:          https://github.com/mhitza/minimal-configuration

library
  ghc-options:         -Wall
  exposed-modules:     System.Config.File
  build-depends:       base >=4.5 && <=4.8, directory <= 1.2.1.0, filepath <= 1.3.0.2, tconfig == 0.5.2, containers <= 0.5.6
  default-language:    Haskell98
