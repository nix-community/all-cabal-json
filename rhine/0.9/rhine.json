{
  "description": {
    "spec-version": {
      "Left": [
        2,
        0
      ]
    },
    "package": {
      "name": "rhine",
      "version": [
        0,
        9
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "maths@manuelbaerenz.de",
    "author": "Manuel BÃ¤renz",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==8.10.7"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.0.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.2.5"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.4.4"
      }
    ],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/turion/rhine.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      },
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/turion/rhine.git",
        "module": null,
        "branch": null,
        "tag": "v0.9",
        "subdir": null
      }
    ],
    "synopsis": "Functional Reactive Programming with type-level clocks",
    "description": "Rhine is a library for synchronous and asynchronous Functional Reactive Programming (FRP).\nIt separates the aspects of clocking, scheduling and resampling\nfrom each other, and ensures clock-safety on the type level.\nSignal processing units can be annotated by clocks,\nwhich hold the information when data will be\ninput, processed and output.\nDifferent components of the signal network\nwill become active at different times, or work\nat different rates.\nTo schedule the components and allow them to communicate,\nseveral standard scheduling and resampling solutions are implemented.\nOwn schedules and resampling buffers can be implemented in a reusable fashion.\nA (synchronous) program outputting \"Hello World!\" every tenth of a second looks like this:\n@flow $ constMCl (putStrLn \"Hello World!\") \\@\\@ (waitClock :: Millisecond 100)@",
    "category": "FRP",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "ChangeLog.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": [
      "README.md"
    ]
  },
  "package-flags": [
    {
      "name": "dev",
      "description": "Enable warnings as errors. Active on ci.",
      "default": false,
      "manual": true
    }
  ],
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "Monad",
          "Schedule"
        ],
        [
          "FRP",
          "Rhine"
        ],
        [
          "FRP",
          "Rhine",
          "Clock"
        ],
        [
          "FRP",
          "Rhine",
          "Clock",
          "FixedStep"
        ],
        [
          "FRP",
          "Rhine",
          "Clock",
          "Periodic"
        ],
        [
          "FRP",
          "Rhine",
          "Clock",
          "Proxy"
        ],
        [
          "FRP",
          "Rhine",
          "Clock",
          "Realtime",
          "Audio"
        ],
        [
          "FRP",
          "Rhine",
          "Clock",
          "Realtime",
          "Busy"
        ],
        [
          "FRP",
          "Rhine",
          "Clock",
          "Realtime",
          "Event"
        ],
        [
          "FRP",
          "Rhine",
          "Clock",
          "Realtime",
          "Millisecond"
        ],
        [
          "FRP",
          "Rhine",
          "Clock",
          "Realtime",
          "Stdin"
        ],
        [
          "FRP",
          "Rhine",
          "Clock",
          "Select"
        ],
        [
          "FRP",
          "Rhine",
          "Clock",
          "Util"
        ],
        [
          "FRP",
          "Rhine",
          "ClSF"
        ],
        [
          "FRP",
          "Rhine",
          "ClSF",
          "Core"
        ],
        [
          "FRP",
          "Rhine",
          "ClSF",
          "Except"
        ],
        [
          "FRP",
          "Rhine",
          "ClSF",
          "Random"
        ],
        [
          "FRP",
          "Rhine",
          "ClSF",
          "Reader"
        ],
        [
          "FRP",
          "Rhine",
          "ClSF",
          "Upsample"
        ],
        [
          "FRP",
          "Rhine",
          "ClSF",
          "Util"
        ],
        [
          "FRP",
          "Rhine",
          "Reactimation"
        ],
        [
          "FRP",
          "Rhine",
          "Reactimation",
          "ClockErasure"
        ],
        [
          "FRP",
          "Rhine",
          "Reactimation",
          "Combinators"
        ],
        [
          "FRP",
          "Rhine",
          "ResamplingBuffer"
        ],
        [
          "FRP",
          "Rhine",
          "ResamplingBuffer",
          "Collect"
        ],
        [
          "FRP",
          "Rhine",
          "ResamplingBuffer",
          "FIFO"
        ],
        [
          "FRP",
          "Rhine",
          "ResamplingBuffer",
          "Interpolation"
        ],
        [
          "FRP",
          "Rhine",
          "ResamplingBuffer",
          "KeepLast"
        ],
        [
          "FRP",
          "Rhine",
          "ResamplingBuffer",
          "LIFO"
        ],
        [
          "FRP",
          "Rhine",
          "ResamplingBuffer",
          "MSF"
        ],
        [
          "FRP",
          "Rhine",
          "ResamplingBuffer",
          "Timeless"
        ],
        [
          "FRP",
          "Rhine",
          "ResamplingBuffer",
          "Util"
        ],
        [
          "FRP",
          "Rhine",
          "Schedule"
        ],
        [
          "FRP",
          "Rhine",
          "Schedule",
          "Concurrently"
        ],
        [
          "FRP",
          "Rhine",
          "Schedule",
          "Trans"
        ],
        [
          "FRP",
          "Rhine",
          "SN"
        ],
        [
          "FRP",
          "Rhine",
          "SN",
          "Combinators"
        ],
        [
          "FRP",
          "Rhine",
          "Type"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "FRP",
            "Rhine",
            "ClSF",
            "Random",
            "Util"
          ],
          [
            "FRP",
            "Rhine",
            "ClSF",
            "Except",
            "Util"
          ],
          [
            "FRP",
            "Rhine",
            "Schedule",
            "Util"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "disable-extension": "StarIsType"
          },
          {
            "enable-extension": "TypeOperators"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-W",
            "-Wno-unticked-promoted-constructors"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.14 && <4.18",
            "library": [
              {}
            ]
          },
          {
            "package-name": "dunai",
            "version-range": "^>=0.9",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "time",
            "version-range": ">=1.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "free",
            "version-range": ">=5.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "vector-sized",
            "version-range": ">=1.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": ">=1.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "random",
            "version-range": ">=1.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "MonadRandom",
            "version-range": ">=0.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "simple-affine-space",
            "version-range": "==0.1.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "time-domain",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.14 && <4.18",
        "library": [
          {}
        ]
      },
      {
        "package-name": "dunai",
        "version-range": "^>=0.9",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "time",
        "version-range": ">=1.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "free",
        "version-range": ">=5.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "vector-sized",
        "version-range": ">=1.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": ">=1.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "random",
        "version-range": ">=1.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "MonadRandom",
        "version-range": ">=0.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "simple-affine-space",
        "version-range": "==0.1.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "time-domain",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "variable": {
            "flag": "dev"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [
                  "-Werror"
                ],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      }
    ]
  }
}
