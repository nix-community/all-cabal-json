Name:             accelerate-fourier
Version:          0.0
License:          BSD3
License-File:     LICENSE
Author:           Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         http://code.haskell.org/~thielema/accelerate-fourier/
Category:         Math
Synopsis:         Fast Fourier transform and convolution using the Accelerate framework
Description:
  Fast Fourier transform and convolution via the @accelerate@ package.
  It uses many of the common tricks to achieve optimal speed
  for every size of the data set,
  but it does not contain low-level optimizations.
  .
  * For CUDA specific optimizations please see
    @cufft@ and @accelerate-fft@ and @accelerate-cufft@ packages.
  .
  * For CPU specific optimizations cf. @accelerate-fftw@ package.
Tested-With:      GHC==7.8.3
Cabal-Version:    >=1.14
Build-Type:       Simple

Source-Repository this
  Tag:         0.0
  Type:        darcs
  Location:    http://code.haskell.org/~thielema/accelerate-fourier/

Source-Repository head
  Type:        darcs
  Location:    http://code.haskell.org/~thielema/accelerate-fourier/

Library
  Build-Depends:
    accelerate-arithmetic >=0.0.1 && <0.1,
    accelerate-utility >=0.1 && <0.2,
    accelerate >=0.15 && <0.16,
    containers >=0.5 && <0.6,
    transformers >=0.3 && <0.5,
    utility-ht >=0.0.8 && <0.1,
    QuickCheck >=2.4 && <2.8,
    base >=4.5 && <4.8

  GHC-Options:      -Wall -fwarn-missing-import-lists
  Hs-Source-Dirs:   src
  Default-Language: Haskell98
  Exposed-Modules:
    Data.Array.Accelerate.Fourier.Planned
    Data.Array.Accelerate.Fourier.Real
    Data.Array.Accelerate.Fourier.Adhoc
    Data.Array.Accelerate.Fourier.Preprocessed
    Data.Array.Accelerate.Fourier.Utility
    Data.Array.Accelerate.Convolution.Adhoc
    Data.Array.Accelerate.Convolution.Preprocessed
    Data.Array.Accelerate.Cyclic
  Other-Modules:
    Data.Array.Accelerate.Convolution.Small
    Data.Array.Accelerate.Convolution.Private
    Data.Array.Accelerate.Permutation
    Data.Array.Accelerate.NumberTheory
    Data.Array.Accelerate.Fourier.Sign
    Data.Array.Accelerate.Fourier.Private

Test-Suite test
  Type: exitcode-stdio-1.0
  Main-Is:          Test.hs
  GHC-Options:      -Wall -fwarn-missing-import-lists
  Hs-Source-Dirs:   test
  Default-Language: Haskell98
  Build-Depends:
    accelerate-fourier,
    accelerate-arithmetic,
    accelerate-utility,
    accelerate,
    utility-ht,
    QuickCheck,
    base
  Other-Modules:
    Test.Data.Array.Accelerate.Fourier

Benchmark benchmark
  Type: exitcode-stdio-1.0
  Main-Is:          Main.hs
  GHC-Options:      -Wall -fwarn-missing-import-lists -threaded
  GHC-Prof-Options: -fprof-auto -rtsopts
  Hs-Source-Dirs:   benchmark
  Default-Language: Haskell98
  Build-Depends:
    criterion >=1.0 && <1.1,
    accelerate-fourier,
    accelerate-arithmetic,
    accelerate-utility,
    accelerate-cuda >=0.15 && <0.16,
    accelerate,
    utility-ht,
    base
