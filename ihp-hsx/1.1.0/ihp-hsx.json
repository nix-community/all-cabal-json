{
  "description": {
    "spec-version": {
      "Left": [
        2,
        2
      ]
    },
    "package": {
      "name": "ihp-hsx",
      "version": [
        1,
        1,
        0
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "MIT"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "support@digitallyinduced.com",
    "author": "digitally induced GmbH",
    "stability": "",
    "tested-with": [],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "https://github.com/digitallyinduced/ihp/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/digitallyinduced/ihp.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "JSX-like but for Haskell",
    "description": "JSX-like templating syntax for Haskell",
    "category": "HTML",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README.md",
      "changelog.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "IHP",
          "HSX",
          "Parser"
        ],
        [
          "IHP",
          "HSX",
          "QQ"
        ],
        [
          "IHP",
          "HSX",
          "ToHtml"
        ],
        [
          "IHP",
          "HSX",
          "ConvertibleStrings"
        ],
        [
          "IHP",
          "HSX",
          "HaskellParser"
        ],
        [
          "IHP",
          "HSX",
          "HsExpToTH"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "."
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "OverloadedStrings"
          },
          {
            "disable-extension": "ImplicitPrelude"
          },
          {
            "enable-extension": "ImplicitParams"
          },
          {
            "enable-extension": "Rank2Types"
          },
          {
            "enable-extension": "NamedFieldPuns"
          },
          {
            "enable-extension": "TypeSynonymInstances"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "DisambiguateRecordFields"
          },
          {
            "enable-extension": "DuplicateRecordFields"
          },
          {
            "enable-extension": "OverloadedLabels"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "QuasiQuotes"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "PackageImports"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "RecordWildCards"
          },
          {
            "enable-extension": "TypeApplications"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "InstanceSigs"
          },
          {
            "enable-extension": "DeriveGeneric"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "DeriveDataTypeable"
          },
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "BangPatterns"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "PartialTypeSignatures"
          },
          {
            "enable-extension": "BlockArguments"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "unknown-extension": "OverloadedRecordDot"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-fstatic-argument-transformation",
            "-funbox-strict-fields",
            "-haddock",
            "-Wredundant-constraints",
            "-Wunused-imports",
            "-Wunused-foralls",
            "-Wmissing-fields",
            "-Winaccessible-code",
            "-Wmissed-specialisations",
            "-Wall-missed-specialisations",
            "-fspecialise-aggressively",
            "-funfolding-use-threshold=120",
            "-fdicts-strict",
            "-fexpose-all-unfoldings",
            "-optc-O3"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.17.0 && <4.18",
            "library": [
              {}
            ]
          },
          {
            "package-name": "blaze-html",
            "version-range": ">=0.9.1 && <0.10",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": ">=0.11.3 && <0.12",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2.19.0 && <2.20",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=2.0.1 && <2.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.6.6 && <0.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "blaze-markup",
            "version-range": ">=0.8.2 && <0.9",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ghc",
            "version-range": ">=9.4.4 && <9.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "megaparsec",
            "version-range": ">=9.2.2 && <9.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "string-conversions",
            "version-range": ">=0.4.0 && <0.5",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.17.0 && <4.18",
        "library": [
          {}
        ]
      },
      {
        "package-name": "blaze-html",
        "version-range": ">=0.9.1 && <0.10",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": ">=0.11.3 && <0.12",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2.19.0 && <2.20",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=2.0.1 && <2.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.6.6 && <0.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "blaze-markup",
        "version-range": ">=0.8.2 && <0.9",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ghc",
        "version-range": ">=9.4.4 && <9.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "megaparsec",
        "version-range": ">=9.2.2 && <9.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "string-conversions",
        "version-range": ">=0.4.0 && <0.5",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
