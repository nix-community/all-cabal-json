{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "derive-enumerable",
      "version": [
        0,
        2,
        0
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "(c) 2015-2023 Maciej Goszczycki, Evan Cofsky",
    "maintainer": "Evan Cofsky <evan@theunixman.com>",
    "author": "Evan Cofsky <evan@theunixman.com>",
    "stability": "experimental",
    "tested-with": [],
    "homepage": "https://github.com/theunixman/derive-enumerable",
    "pkg-url": "",
    "bug-reports": "https://github.com/theunixman/derive-enumerable",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git@github.com:theunixman/derive-enumerable.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Generic instances for enumerating complex data types",
    "description": "Generalized equivalent to doing `[minBound..maxBound]` but on complex types.\n\n> λ :m +Data.Enumerable.Generic\n> λ :set -XDeriveGeneric\n> λ data Flag = Flag Bool Word8 deriving (Show, Generic)\n> λ instance Enumerable Flag\n> λ instance Default Flag where def = Flag False 0\n> λ allEnum :: [Flag]\n> [Flag False 0,Flag True 0,Flag False 1, (..snip..) Flag False 255,Flag True 255]",
    "category": "Data, Generics",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Enumerable",
          "Generic"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "FlexibleContexts"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-fno-warn-orphans"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.7 && <4.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "data-default",
            "version-range": ">=0.5.0",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.7 && <4.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "data-default",
        "version-range": ">=0.5.0",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
