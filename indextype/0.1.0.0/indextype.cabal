name:                 indextype
version:              0.1.0.0
x-revision: 2
synopsis: A series of type families and constraints for "indexable" types.
description:
  This package deals with types that can roughly be "indexed" at compile time by an integer.
  For example, tuples and be indexed by their nth elements, and functions by their nth argument.
  A number of type functions allow one to extract these subtypes, i.e. the type of the 2nd element of a given tuple.

  Furthermore, constraints are defined which allow one to easily constrain types to these index types,
  e.g. a constraint that says "'t' is a 3 tuple". 'Control.IndexT' has more detail.
author:               Clinton Mead
maintainer:           clintonmead@gmail.com
category:             Control
license: MIT
license-file: LICENSE
copyright: Clinton Mead (2017)
build-type:           Simple
cabal-version:        >=1.10
tested-with: GHC == 8.0.2
bug-reports: https://github.com/clintonmead/indextype/issues

source-repository head
  type: git
  location: https://github.com/clintonmead/indextype.git

library
  exposed-modules:      Control.IndexT, Control.IndexT.Tuple, Control.IndexT.Function
  build-depends:        base >= 4.7 && < 5
  hs-source-dirs:       src
  default-language:     Haskell2010

Test-Suite tests
  type: exitcode-stdio-1.0
  main-is: Tests.hs
  other-modules: Control.IndexT, Control.IndexT.Tuple, Control.IndexT.Function
  build-depends:        base >= 4.7 && < 5, hspec
  hs-source-dirs:       test, src
  default-language:     Haskell2010
