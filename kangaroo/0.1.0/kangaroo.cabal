name:             kangaroo
version:          0.1.0
license:          BSD3
license-file:     LICENSE
copyright:        Stephen Tetley <stephen.tetley@gmail.com>
maintainer:       Stephen Tetley <stephen.tetley@gmail.com>
homepage:         http://code.google.com/p/copperbox/
category:         Parsing
synopsis:         Random access binary combinator parser.
description:
  Binary parsing with random access. The target file to be 
  parsed is loaded into memory at the start (represented as
  an IOUArray Int Word8). Parsing proceeds by moving a cursor
  around, the array is left intact. This allows _jumping_
  inside the file and contrasts with other parser 
  combinators that progress via consuming input.
  .
  \* Caveat \* - the above of course means that the target file 
  is obliged to be small enough to fit into memory. 
  .
  \*\* MAJOR CAVEAT \*\* - kangaroo is somewhat half-baked at the
  moment - the parsing machinery seems good but the combinators
  and primitive parsers need more work. I\'ve only released it on 
  Hackage because I'm now using it with Hurdle which was already 
  on Hackage.
  .
  Changelog:
  . 
  0.1.0 First version
  
build-type:         Simple
stability:          half baked
cabal-version:      >= 1.2

extra-source-files:
  demo/MidiDatatypes.hs
  demo/MidiRead.hs
  demo/MidiText.hs
  demo/PrintMidi.hs
  test/Picklers.hs


library
  hs-source-dirs:     src
  build-depends:      base < 5,
                      array >= 0.3.0.0 && < 0.4

  
  exposed-modules:
    Data.ParserCombinators.Kangaroo,
    Data.ParserCombinators.KangarooReader
    Data.ParserCombinators.KangarooRWS,
    Data.ParserCombinators.KangarooState,
    Data.ParserCombinators.KangarooWriter,
    Data.ParserCombinators.Kangaroo.Combinators,
    Data.ParserCombinators.Kangaroo.IEEEFloat,
    Data.ParserCombinators.Kangaroo.ParseMonad,
    Data.ParserCombinators.Kangaroo.Prim,
    Data.ParserCombinators.Kangaroo.Utils

  other-modules:
      
  extensions:
    

  ghc-options:
  
  includes: 
  

  
  
