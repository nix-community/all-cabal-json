name:          functor-apply
category:      Control, Comonads
version:       0.9.2
license:       BSD3
cabal-version: >= 1.2
license-file:  LICENSE
author:        Edward A. Kmett
maintainer:    Edward A. Kmett <ekmett@gmail.com>
stability:     provisional
homepage:      http://comonad.com/reader/
copyright:     Copyright (C) 2011 Edward A. Kmett
synopsis:      Applicative sans pure, Monad sans return, Alternative sans empty
description:   
  Provides a wide array of semigroup based Functors.
  .
  When working with comonads you often have the @\<*\>@ portion of an @Applicative@, but
  not the @pure@. This was captured in Uustalu and Vene's \"Essence of Dataflow Programming\"
  in the form of the @ComonadZip@ class in the days before @Applicative@, manifested here
  as @ComonadApply@.
  .
  Logically:
  .
  > Functor -----> Apply -------------> Bind
  >   |           / |   \                |
  >   v          /  v    v               v
  > Extend      /  Alt  Applicative -> Monad
  >   |        /    |       |            |
  >   v       /     v       v            |
  > Comonad  /    ApplicativeAlt         |
  >   |     /           |                |
  >   v    v            v                v
  > ComonadApply   Alternative --> MonadPlus
  . 
  This lets us remove many of the restrictions from various (co)monad transformers
  as in many cases the (co)binding operation or @\<*\>@ operation does not require them.
  .
  Finally, to work with these weaker structures it is beneficial to have containers
  that can provide stronger guarantees about their contents, so versions of 'Traversable'
  and 'Foldable' that can be folded with just a semigroup are added.

build-type:    Simple

library
  build-depends: 
    base >= 4 && < 4.4,
    transformers >= 0.2.0 && < 0.3,
    containers >= 0.4.0 && < 0.5,
    comonad >= 0.9.0 && < 1.0,
    semigroups >= 0.3.2 && < 0.4

  exposed-modules:
    Data.Functor.Alt,
    Data.Functor.Apply,
    Data.Functor.Bind,
    Data.Functor.Bind.Trans,
    Data.Semigroup.Foldable,
    Data.Semigroup.Traversable,
    Control.Applicative.Alt
    Control.Comonad.Apply

  ghc-options: -Wall 
