Name:           lambdacube-gl
Version:        0.2.0
Cabal-Version:  >= 1.10
Build-Type:     Simple
License:        BSD3
License-File:   LICENSE
Author:         Csaba Hruska, Gergely Patai
Maintainer:     csaba (dot) hruska (at) gmail (dot) com
Stability:      experimental
Homepage:       http://www.haskell.org/haskellwiki/LambdaCubeEngine
Bug-Reports:    https://github.com/csabahruska/lc-dsl/issues
Category:       Graphics
Tested-With:    GHC == 7.8.3
Synopsis:       OpenGL backend for LambdaCube graphics language (main package)
Description:
    LambdaCube 3D is a domain specific language and library that makes
    it possible to program GPUs in a purely functional style.
    Programming with LambdaCube constitutes of composing a data-flow
    description, which is compiled into a specialised library. The
    language provides a uniform way to define shaders and compositor
    chains by treating both streams and framebuffers as first-class
    values.
    .
    As a user of the library you only need to import the "LambdaCube.GL" and
    "LambdaCube.GL.Mesh" modules. You should check out the pointers at <http://lambdacube3d.wordpress.com/getting-started/>
    to understand the principle behind the library, and also have a good look
    at the @lambdacube-samples@ package.

Library
  default-language:  Haskell2010
  hs-source-dirs:    src/lib
  Build-Depends: 
        base >=4.6 && <5,
        binary >=0.7 && <0.8,
        bytestring >=0.10 && <0.11,
        containers >=0.5 && <0.6,
        mtl >=2.2 && <2.3,
        vector >=0.10 && <0.11,
        prettyclass >=1.0 && <1.1,

        bytestring-trie >=0.2 && <0.3,
        OpenGLRaw >=1.5 && <1.6,
        bitmap >= 0.0.2 && <0.0.3,
        language-glsl >=0.1 && <0.2,

        lambdacube-core == 0.2.0,
        lambdacube-edsl == 0.2.0

  Exposed-modules:
        LambdaCube.GL
        LambdaCube.GL.Mesh

  other-modules:
        LambdaCube.GL.Backend
        LambdaCube.GL.Compile
        LambdaCube.GL.Data
        LambdaCube.GL.GLSLCodeGen
        LambdaCube.GL.Type
        LambdaCube.GL.Util

  GHC-options:
--        -Werror
        -Wall
        -fno-warn-missing-signatures
        -fno-warn-name-shadowing
        -fno-warn-orphans
        -fno-warn-unused-binds
        -fno-warn-unused-do-bind
        -fspec-constr-count=10
        -funbox-strict-fields
        -O2
-- for profiling
--        -auto-all
--        -caf-all

  default-extensions:
        DataKinds
        DeriveDataTypeable
        OverloadedStrings
        ParallelListComp
        ScopedTypeVariables
        TupleSections
