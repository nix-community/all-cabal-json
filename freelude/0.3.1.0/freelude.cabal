-- This file has been generated from package.yaml by hpack version 0.20.0.
--
-- see: https://github.com/sol/hpack
--
-- hash: 2d43b77cfc9355a6259d26ff689dca336df814a1980204ab158ceab224787d63

name:           freelude
version:        0.3.1.0
synopsis:       A generalisation of the Category->Functor->Applicative->Monad hierarchy and more
description:    This package generalises classes like Category, Functor etc to allow them to be defined on more data types, for example, tuples and sets, whilst still attempting to maintain backward compatability.
                .
                See the module "Freelude" for more details.
category:       Prelude
homepage:       https://github.com/clintonmead/freelude#readme
bug-reports:    https://github.com/clintonmead/freelude/issues
author:         Clinton Mead
maintainer:     clintonmead@gmail.com
copyright:      Copyright: (c) 2018 Clinton Mead
license:        BSD3
license-file:   LICENSE
build-type:     Simple
cabal-version:  >= 1.10

source-repository head
  type: git
  location: https://github.com/clintonmead/freelude

library
  hs-source-dirs:
      src
  ghc-options: -Wall
  build-depends:
      array
    , base <99
    , bytestring
    , containers
    , indextype
    , text
    , transformers
  exposed-modules:
      Freelude
      Freelude.FunctionRestrictedFunctor
      Freelude.Impl.Category
      Freelude.Impl.CategoryAsMonoid
      Freelude.Impl.ExoFunctor
      Freelude.Impl.MakeFunctor
      Freelude.Impl.MonoidAsCategory
      Freelude.Impl.RestrictedFunctor
      Freelude.Impl.ToKind
  other-modules:
      Paths_freelude
  default-language: Haskell2010

test-suite test
  type: exitcode-stdio-1.0
  main-is: DocTest.hs
  hs-source-dirs:
      test
      src
  build-depends:
      array
    , base <99
    , bytestring
    , containers
    , doctest
    , indextype
    , text
    , transformers
  other-modules:
      Freelude
      Freelude.FunctionRestrictedFunctor
      Freelude.Impl.Category
      Freelude.Impl.CategoryAsMonoid
      Freelude.Impl.ExoFunctor
      Freelude.Impl.MakeFunctor
      Freelude.Impl.MonoidAsCategory
      Freelude.Impl.RestrictedFunctor
      Freelude.Impl.ToKind
      Paths_freelude
  default-language: Haskell2010
