Name:                   CC-delcont
Version:                0.2.1.0
Description:            An implementation of multi-prompt delimited continuations based
                        on the paper, /A Monadic Framework for Delimited Continuations/,
                        by R. Kent Dybvig, Simon Peyton Jones and Amr Sabry
                            (<http://www.cs.indiana.edu/~sabry/papers/monadicDC.pdf>).
                        It also includes a corresponding implementation of dynamically
                        scoped variables, as implemented in the paper,
                        /Delimited Dynamic Binding/, by Oleg Kiselyov, Chung-chieh Shan
                        and Amr Sabry
                            (<http://okmij.org/ftp/papers/DDBinding.pdf>),
                        adapted from the original haskell code,
                            (<http://okmij.org/ftp/packages/DBplusDC.tar.gz>).
Synopsis:               Delimited continuations and dynamically scoped variables
Category:               Control
License:                OtherLicense
License-File:           LICENSE
Copyright:              Copyright (c) 2005--2008, R. Kent Dybvig, Simon Peyton Jones,
                        Amr Sabry, Oleg Kiselyov, Chung-chieh Shan
Author:                 R. Kent Dybvig, Simon Peyton Jones, Amr Sabry, Oleg Kiselyov,
                        Chung-chieh Shan
Maintainer:             dan.doel@gmail.com
Homepage:               http://code.haskell.org/~dolio/CC-delcont

Stability:              Experimental
Tested-With:            GHC
Build-Type:             Simple
Cabal-Version:          >= 1.2.3

library
  Build-Depends:          base >= 4 && < 5, mtl >= 2 && < 3
  Exposed-Modules:        Control.Monad.CC,
                          Control.Monad.CC.Dynvar,
                          Control.Monad.CC.Seq,
                          Control.Monad.CC.Prompt,
                          Control.Monad.CC.Cursor
  Extensions:             MultiParamTypeClasses,
                          UndecidableInstances,
                          FunctionalDependencies,
                          Rank2Types,
                          GeneralizedNewtypeDeriving,
                          FlexibleInstances,
                          GADTs
  GHC-Options:            -O2 -Wall

