{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "dhall",
      "version": [
        1,
        23,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "2017 Gabriel Gonzalez",
    "maintainer": "Gabriel439@gmail.com",
    "author": "Gabriel Gonzalez",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.10.3"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.4.3"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.6.1"
      }
    ],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "https://github.com/dhall-lang/dhall-haskell/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/dhall-lang/dhall-haskell/tree/master/dhall",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "A configuration language guaranteed to terminate",
    "description": "Dhall is an explicitly typed configuration language that is not Turing\ncomplete.  Despite being Turing incomplete, Dhall is a real programming\nlanguage with a type-checker and evaluator.\n\nUse this library to parse, type-check, evaluate, and pretty-print the Dhall\nconfiguration language.  This package also includes an executable which\ntype-checks a Dhall file and reduces the file to a fully evaluated normal\nform.\n\nRead \"Dhall.Tutorial\" to learn how to use this library",
    "category": "Compiler",
    "custom-fields": [
      [
        "x-revision",
        "1"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "benchmark/deep-nested-large-record/*.dhall",
      "benchmark/examples/*.dhall",
      "benchmark/examples/normalize/*.dhall",
      "CHANGELOG.md",
      "dhall-lang/Prelude/Bool/and",
      "dhall-lang/Prelude/Bool/build",
      "dhall-lang/Prelude/Bool/even",
      "dhall-lang/Prelude/Bool/fold",
      "dhall-lang/Prelude/Bool/not",
      "dhall-lang/Prelude/Bool/odd",
      "dhall-lang/Prelude/Bool/or",
      "dhall-lang/Prelude/Bool/package.dhall",
      "dhall-lang/Prelude/Bool/show",
      "dhall-lang/Prelude/Double/package.dhall",
      "dhall-lang/Prelude/Double/show",
      "dhall-lang/Prelude/Function/compose",
      "dhall-lang/Prelude/Function/package.dhall",
      "dhall-lang/Prelude/Integer/package.dhall",
      "dhall-lang/Prelude/Integer/show",
      "dhall-lang/Prelude/Integer/toDouble",
      "dhall-lang/Prelude/JSON/keyText",
      "dhall-lang/Prelude/JSON/keyValue",
      "dhall-lang/Prelude/JSON/Nesting",
      "dhall-lang/Prelude/JSON/package.dhall",
      "dhall-lang/Prelude/JSON/Tagged",
      "dhall-lang/Prelude/List/all",
      "dhall-lang/Prelude/List/any",
      "dhall-lang/Prelude/List/build",
      "dhall-lang/Prelude/List/concat",
      "dhall-lang/Prelude/List/concatMap",
      "dhall-lang/Prelude/List/filter",
      "dhall-lang/Prelude/List/fold",
      "dhall-lang/Prelude/List/generate",
      "dhall-lang/Prelude/List/head",
      "dhall-lang/Prelude/List/indexed",
      "dhall-lang/Prelude/List/iterate",
      "dhall-lang/Prelude/List/last",
      "dhall-lang/Prelude/List/length",
      "dhall-lang/Prelude/List/map",
      "dhall-lang/Prelude/List/null",
      "dhall-lang/Prelude/List/package.dhall",
      "dhall-lang/Prelude/List/replicate",
      "dhall-lang/Prelude/List/reverse",
      "dhall-lang/Prelude/List/shifted",
      "dhall-lang/Prelude/List/unzip",
      "dhall-lang/Prelude/Monoid",
      "dhall-lang/Prelude/Natural/build",
      "dhall-lang/Prelude/Natural/enumerate",
      "dhall-lang/Prelude/Natural/even",
      "dhall-lang/Prelude/Natural/fold",
      "dhall-lang/Prelude/Natural/isZero",
      "dhall-lang/Prelude/Natural/odd",
      "dhall-lang/Prelude/Natural/package.dhall",
      "dhall-lang/Prelude/Natural/product",
      "dhall-lang/Prelude/Natural/show",
      "dhall-lang/Prelude/Natural/sum",
      "dhall-lang/Prelude/Natural/toDouble",
      "dhall-lang/Prelude/Natural/toInteger",
      "dhall-lang/Prelude/Optional/all",
      "dhall-lang/Prelude/Optional/any",
      "dhall-lang/Prelude/Optional/build",
      "dhall-lang/Prelude/Optional/concat",
      "dhall-lang/Prelude/Optional/filter",
      "dhall-lang/Prelude/Optional/fold",
      "dhall-lang/Prelude/Optional/head",
      "dhall-lang/Prelude/Optional/last",
      "dhall-lang/Prelude/Optional/length",
      "dhall-lang/Prelude/Optional/map",
      "dhall-lang/Prelude/Optional/null",
      "dhall-lang/Prelude/Optional/package.dhall",
      "dhall-lang/Prelude/Optional/toList",
      "dhall-lang/Prelude/Optional/unzip",
      "dhall-lang/Prelude/package.dhall",
      "dhall-lang/Prelude/Text/concat",
      "dhall-lang/Prelude/Text/concatMap",
      "dhall-lang/Prelude/Text/concatMapSep",
      "dhall-lang/Prelude/Text/concatSep",
      "dhall-lang/Prelude/Text/package.dhall",
      "dhall-lang/Prelude/Text/show",
      "dhall-lang/tests/import/data/*.txt",
      "dhall-lang/tests/import/data/*.dhall",
      "dhall-lang/tests/import/data/fieldOrder/*.dhall",
      "dhall-lang/tests/import/failure/*.dhall",
      "dhall-lang/tests/import/success/*.dhall",
      "dhall-lang/tests/normalization/success/*.dhall",
      "dhall-lang/tests/normalization/success/haskell-tutorial/access/*.dhall",
      "dhall-lang/tests/normalization/success/haskell-tutorial/combineTypes/*.dhall",
      "dhall-lang/tests/normalization/success/haskell-tutorial/prefer/*.dhall",
      "dhall-lang/tests/normalization/success/haskell-tutorial/projection/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/and/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/and/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/build/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/build/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/even/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/even/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/fold/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/fold/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/not/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/not/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/odd/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/odd/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/or/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/or/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/show/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Bool/show/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Double/show/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Double/show/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Integer/show/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Integer/show/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Integer/toDouble/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Integer/toDouble/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/all/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/all/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/any/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/any/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/build/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/build/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/concat/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/concat/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/concatMap/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/concatMap/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/filter/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/filter/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/fold/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/fold/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/generate/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/generate/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/head/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/head/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/indexed/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/indexed/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/iterate/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/iterate/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/last/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/last/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/length/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/length/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/map/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/map/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/null/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/null/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/replicate/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/replicate/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/reverse/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/reverse/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/shifted/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/shifted/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/unzip/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/List/unzip/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/build/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/build/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/enumerate/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/enumerate/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/even/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/even/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/fold/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/fold/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/isZero/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/isZero/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/odd/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/odd/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/product/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/product/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/show/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/show/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/sum/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/sum/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/toDouble/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/toDouble/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/toInteger/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Natural/toInteger/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/all/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/all/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/any/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/any/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/build/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/build/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/concat/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/concat/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/filter/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/filter/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/fold/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/fold/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/head/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/head/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/last/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/last/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/length/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/length/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/map/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/map/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/null/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/null/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/toList/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/toList/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/unzip/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Optional/unzip/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Text/concat/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Text/concat/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Text/concatMap/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Text/concatMap/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Text/concatMapSep/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Text/concatMapSep/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Text/concatSep/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Text/concatSep/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Text/show/*.dhall",
      "dhall-lang/tests/normalization/success/prelude/Text/show/*.dhall",
      "dhall-lang/tests/normalization/success/simple/*.dhall",
      "dhall-lang/tests/normalization/success/simplifications/*.dhall",
      "dhall-lang/tests/normalization/success/unit/*.dhall",
      "dhall-lang/tests/parser/failure/*.dhall",
      "dhall-lang/tests/parser/success/*.dhall",
      "dhall-lang/tests/parser/success/*.dhallb",
      "dhall-lang/tests/parser/success/import/*.dhall",
      "dhall-lang/tests/parser/success/import/*.dhallb",
      "dhall-lang/tests/parser/success/text/*.dhall",
      "dhall-lang/tests/parser/success/text/*.dhallb",
      "dhall-lang/tests/typecheck/failure/*.dhall",
      "dhall-lang/tests/typecheck/success/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/and/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/and/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/build/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/build/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/even/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/even/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/fold/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/fold/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/not/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/not/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/odd/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/odd/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/or/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/or/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/show/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Bool/show/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Double/show/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Double/show/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Integer/show/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Integer/show/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Integer/toDouble/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Integer/toDouble/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/all/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/all/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/any/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/any/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/build/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/build/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/concat/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/concat/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/concatMap/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/concatMap/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/filter/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/filter/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/fold/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/fold/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/generate/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/generate/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/head/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/head/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/indexed/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/indexed/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/iterate/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/iterate/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/last/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/last/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/length/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/length/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/map/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/map/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/null/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/null/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/replicate/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/replicate/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/reverse/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/reverse/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/shifted/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/shifted/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/unzip/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/List/unzip/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Monoid/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/build/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/build/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/enumerate/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/enumerate/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/even/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/even/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/fold/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/fold/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/isZero/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/isZero/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/odd/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/odd/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/product/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/product/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/show/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/show/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/sum/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/sum/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/toDouble/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/toDouble/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/toInteger/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Natural/toInteger/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/all/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/all/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/any/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/any/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/build/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/build/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/concat/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/concat/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/filter/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/filter/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/fold/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/fold/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/head/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/head/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/last/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/last/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/length/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/length/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/map/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/map/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/null/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/null/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/toList/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/toList/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/unzip/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Optional/unzip/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Text/concat/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Text/concat/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Text/concatMap/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Text/concatMap/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Text/concatMapSep/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Text/concatMapSep/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Text/concatSep/*.dhall",
      "dhall-lang/tests/typecheck/success/prelude/Text/concatSep/*.dhall",
      "dhall-lang/tests/typecheck/success/simple/access/*.dhall",
      "dhall-lang/tests/typecheck/success/simple/*.dhall",
      "tests/format/*.dhall",
      "tests/lint/success/*.dhall",
      "tests/regression/*.dhall",
      "tests/tutorial/*.dhall"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "package-flags": [
    {
      "name": "with-http",
      "description": "Include support for importing dhall modules from HTTP URLs",
      "default": true,
      "manual": true
    },
    {
      "name": "cross",
      "description": "Disable TemplateHaskell to make cross-compiling easier",
      "default": false,
      "manual": true
    }
  ],
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Dhall"
        ],
        [
          "Dhall",
          "Binary"
        ],
        [
          "Dhall",
          "Context"
        ],
        [
          "Dhall",
          "Core"
        ],
        [
          "Dhall",
          "Diff"
        ],
        [
          "Dhall",
          "Format"
        ],
        [
          "Dhall",
          "Freeze"
        ],
        [
          "Dhall",
          "Hash"
        ],
        [
          "Dhall",
          "Import"
        ],
        [
          "Dhall",
          "Lint"
        ],
        [
          "Dhall",
          "Main"
        ],
        [
          "Dhall",
          "Map"
        ],
        [
          "Dhall",
          "Set"
        ],
        [
          "Dhall",
          "Parser"
        ],
        [
          "Dhall",
          "Pretty"
        ],
        [
          "Dhall",
          "Repl"
        ],
        [
          "Dhall",
          "Tutorial"
        ],
        [
          "Dhall",
          "TypeCheck"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Dhall",
            "Pretty",
            "Internal"
          ],
          [
            "Dhall",
            "Parser",
            "Expression"
          ],
          [
            "Dhall",
            "Parser",
            "Combinators"
          ],
          [
            "Dhall",
            "Parser",
            "Token"
          ],
          [
            "Dhall",
            "Import",
            "Types"
          ],
          [
            "Dhall",
            "Eval"
          ],
          [
            "Dhall",
            "Util"
          ],
          [
            "Paths_dhall"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [
          {
            "enable-extension": "BangPatterns"
          },
          {
            "enable-extension": "CPP"
          },
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "DeriveAnyClass"
          },
          {
            "enable-extension": "DeriveDataTypeable"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "DeriveGeneric"
          },
          {
            "enable-extension": "DeriveTraversable"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "NamedFieldPuns"
          },
          {
            "enable-extension": "OverloadedLists"
          },
          {
            "enable-extension": "OverloadedStrings"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "RecordWildCards"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "TupleSections"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "UnicodeSyntax"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-fwarn-incomplete-uni-patterns"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.8.2.0 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "aeson",
            "version-range": ">=1.0.0.0 && <1.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "aeson-pretty",
            "version-range": "<0.9",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ansi-terminal",
            "version-range": ">=0.6.3.1 && <0.10",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": "<0.11",
            "library": [
              {}
            ]
          },
          {
            "package-name": "case-insensitive",
            "version-range": "<1.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "cborg",
            "version-range": ">=0.2.0.0 && <0.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "cborg-json",
            "version-range": "<0.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.5.0.0 && <0.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "contravariant",
            "version-range": "<1.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "cryptonite",
            "version-range": ">=0.23 && <1.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "Diff",
            "version-range": ">=0.2 && <0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "directory",
            "version-range": ">=1.2.2.0 && <1.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "dotgen",
            "version-range": ">=0.4.2 && <0.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "exceptions",
            "version-range": ">=0.8.3 && <0.11",
            "library": [
              {}
            ]
          },
          {
            "package-name": "filepath",
            "version-range": ">=1.4 && <1.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "haskeline",
            "version-range": ">=0.7.2.1 && <0.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lens-family-core",
            "version-range": ">=1.0.0 && <1.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "megaparsec",
            "version-range": ">=6.5.0 && <7.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "memory",
            "version-range": ">=0.14 && <0.15",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.2.1 && <2.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "optparse-applicative",
            "version-range": ">=0.14.0.0 && <0.15",
            "library": [
              {}
            ]
          },
          {
            "package-name": "parsers",
            "version-range": ">=0.12.4 && <0.13",
            "library": [
              {}
            ]
          },
          {
            "package-name": "prettyprinter",
            "version-range": ">=1.2.0.1 && <1.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "prettyprinter-ansi-terminal",
            "version-range": ">=1.1.1 && <1.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "repline",
            "version-range": ">=0.2.1.0 && <0.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "serialise",
            "version-range": ">=0.2.0.0 && <0.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "scientific",
            "version-range": ">=0.3.0.0 && <0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "<2.15",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=0.11.1.0 && <1.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.2.0.0 && <0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers-compat",
            "version-range": ">=0.6.2 && <0.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "unordered-containers",
            "version-range": ">=0.1.3.0 && <0.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "uri-encode",
            "version-range": "<1.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "vector",
            "version-range": ">=0.11.0.0 && <0.13",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.8.2.0 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "aeson",
        "version-range": ">=1.0.0.0 && <1.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "aeson-pretty",
        "version-range": "<0.9",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ansi-terminal",
        "version-range": ">=0.6.3.1 && <0.10",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": "<0.11",
        "library": [
          {}
        ]
      },
      {
        "package-name": "case-insensitive",
        "version-range": "<1.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "cborg",
        "version-range": ">=0.2.0.0 && <0.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "cborg-json",
        "version-range": "<0.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.5.0.0 && <0.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "contravariant",
        "version-range": "<1.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "cryptonite",
        "version-range": ">=0.23 && <1.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "Diff",
        "version-range": ">=0.2 && <0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "directory",
        "version-range": ">=1.2.2.0 && <1.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "dotgen",
        "version-range": ">=0.4.2 && <0.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "exceptions",
        "version-range": ">=0.8.3 && <0.11",
        "library": [
          {}
        ]
      },
      {
        "package-name": "filepath",
        "version-range": ">=1.4 && <1.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "haskeline",
        "version-range": ">=0.7.2.1 && <0.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lens-family-core",
        "version-range": ">=1.0.0 && <1.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "megaparsec",
        "version-range": ">=6.5.0 && <7.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "memory",
        "version-range": ">=0.14 && <0.15",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.2.1 && <2.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "optparse-applicative",
        "version-range": ">=0.14.0.0 && <0.15",
        "library": [
          {}
        ]
      },
      {
        "package-name": "parsers",
        "version-range": ">=0.12.4 && <0.13",
        "library": [
          {}
        ]
      },
      {
        "package-name": "prettyprinter",
        "version-range": ">=1.2.0.1 && <1.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "prettyprinter-ansi-terminal",
        "version-range": ">=1.1.1 && <1.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "repline",
        "version-range": ">=0.2.1.0 && <0.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "serialise",
        "version-range": ">=0.2.0.0 && <0.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "scientific",
        "version-range": ">=0.3.0.0 && <0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "<2.15",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=0.11.1.0 && <1.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.2.0.0 && <0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers-compat",
        "version-range": ">=0.6.2 && <0.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "unordered-containers",
        "version-range": ">=0.1.3.0 && <0.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "uri-encode",
        "version-range": "<1.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "vector",
        "version-range": ">=0.11.0.0 && <0.13",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "variable": {
            "flag": "with-http"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [
                {
                  "package-name": "http-types",
                  "version-range": ">=0.7.0 && <0.13",
                  "library": [
                    {}
                  ]
                },
                {
                  "package-name": "http-client",
                  "version-range": ">=0.4.30 && <0.7",
                  "library": [
                    {}
                  ]
                },
                {
                  "package-name": "http-client-tls",
                  "version-range": ">=0.2.0 && <0.4",
                  "library": [
                    {}
                  ]
                }
              ],
              "mixins": []
            }
          },
          "condTreeConstraints": [
            {
              "package-name": "http-types",
              "version-range": ">=0.7.0 && <0.13",
              "library": [
                {}
              ]
            },
            {
              "package-name": "http-client",
              "version-range": ">=0.4.30 && <0.7",
              "library": [
                {}
              ]
            },
            {
              "package-name": "http-client-tls",
              "version-range": ">=0.2.0 && <0.4",
              "library": [
                {}
              ]
            }
          ],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "cond_and_1": {
            "cond_not": {
              "variable": {
                "compiler": "GHC",
                "version": ">=8.0"
              }
            }
          },
          "cond_and_2": {
            "cond_not": {
              "variable": {
                "compiler": "Eta",
                "version": ">=0.8.4"
              }
            }
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [
                {
                  "package-name": "semigroups",
                  "version-range": "==0.18.*",
                  "library": [
                    {}
                  ]
                },
                {
                  "package-name": "transformers",
                  "version-range": "==0.4.2.*",
                  "library": [
                    {}
                  ]
                },
                {
                  "package-name": "fail",
                  "version-range": "==4.9.*",
                  "library": [
                    {}
                  ]
                }
              ],
              "mixins": []
            }
          },
          "condTreeConstraints": [
            {
              "package-name": "semigroups",
              "version-range": "==0.18.*",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": "==0.4.2.*",
              "library": [
                {}
              ]
            },
            {
              "package-name": "fail",
              "version-range": "==4.9.*",
              "library": [
                {}
              ]
            }
          ],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "variable": {
            "compiler": "GHCJS",
            "version": "-any"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [
                {
                  "package-name": "ghcjs-xhr",
                  "version-range": "-any",
                  "library": [
                    {}
                  ]
                }
              ],
              "mixins": []
            }
          },
          "condTreeConstraints": [
            {
              "package-name": "ghcjs-xhr",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "cond_not": {
            "variable": {
              "flag": "cross"
            }
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [
                {
                  "enable-extension": "TemplateHaskell"
                }
              ],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "cond_not": {
            "variable": {
              "flag": "cross"
            }
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [
              [
                "Dhall",
                "TH"
              ]
            ],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "variable": {
            "flag": "with-http"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [
                [
                  "Dhall",
                  "Import",
                  "HTTP"
                ]
              ],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      }
    ]
  },
  "executables": {
    "dhall": {
      "condTreeData": {
        "name": "dhall",
        "module-path": "Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "dhall"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-rtsopts"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "dhall",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "dhall",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  },
  "test-suites": {
    "tasty": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Dhall/Test/Main.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "tests"
          ],
          "otherModules": [
            [
              "Dhall",
              "Test",
              "Dhall"
            ],
            [
              "Dhall",
              "Test",
              "Format"
            ],
            [
              "Dhall",
              "Test",
              "Import"
            ],
            [
              "Dhall",
              "Test",
              "Lint"
            ],
            [
              "Dhall",
              "Test",
              "Normalization"
            ],
            [
              "Dhall",
              "Test",
              "Parser"
            ],
            [
              "Dhall",
              "Test",
              "QuickCheck"
            ],
            [
              "Dhall",
              "Test",
              "Regression"
            ],
            [
              "Dhall",
              "Test",
              "Tutorial"
            ],
            [
              "Dhall",
              "Test",
              "TypeCheck"
            ],
            [
              "Dhall",
              "Test",
              "Util"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "bytestring",
              "version-range": "<0.11",
              "library": [
                {}
              ]
            },
            {
              "package-name": "cborg",
              "version-range": ">=0.2.0.0 && <0.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "deepseq",
              "version-range": ">=1.2.0.1 && <1.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "dhall",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "directory",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "filepath",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "foldl",
              "version-range": "<1.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "prettyprinter",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "QuickCheck",
              "version-range": ">=2.10 && <2.14",
              "library": [
                {}
              ]
            },
            {
              "package-name": "quickcheck-instances",
              "version-range": ">=0.3.12 && <0.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "serialise",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": ">=0.11.2 && <1.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-hunit",
              "version-range": ">=0.9.2 && <0.11",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-quickcheck",
              "version-range": ">=0.9.2 && <0.11",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": ">=0.11.1.0 && <1.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "turtle",
              "version-range": "<1.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "vector",
              "version-range": ">=0.11.0.0 && <0.13",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "bytestring",
          "version-range": "<0.11",
          "library": [
            {}
          ]
        },
        {
          "package-name": "cborg",
          "version-range": ">=0.2.0.0 && <0.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "deepseq",
          "version-range": ">=1.2.0.1 && <1.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "dhall",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "directory",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "filepath",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "foldl",
          "version-range": "<1.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "prettyprinter",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "QuickCheck",
          "version-range": ">=2.10 && <2.14",
          "library": [
            {}
          ]
        },
        {
          "package-name": "quickcheck-instances",
          "version-range": ">=0.3.12 && <0.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "serialise",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": ">=0.11.2 && <1.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-hunit",
          "version-range": ">=0.9.2 && <0.11",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-quickcheck",
          "version-range": ">=0.9.2 && <0.11",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": ">=0.11.1.0 && <1.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "turtle",
          "version-range": "<1.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "vector",
          "version-range": ">=0.11.0.0 && <0.13",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    },
    "doctest": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Main.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "doctest"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "directory",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "filepath",
              "version-range": "<1.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mockery",
              "version-range": "<0.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "doctest",
              "version-range": ">=0.7.0 && <0.17",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "directory",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "filepath",
          "version-range": "<1.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mockery",
          "version-range": "<0.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "doctest",
          "version-range": ">=0.7.0 && <0.17",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "variable": {
              "compiler": "GHC",
              "version": "<8.0"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "",
              "interface": {
                "type": {
                  "name": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": false,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    }
  },
  "benchmarks": {
    "deep-nested-large-record": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Main.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "benchmark/deep-nested-large-record"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.5.0.0 && <0.7",
              "library": [
                {}
              ]
            },
            {
              "package-name": "criterion",
              "version-range": ">=1.1 && <1.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "dhall",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.5.0.0 && <0.7",
          "library": [
            {}
          ]
        },
        {
          "package-name": "criterion",
          "version-range": ">=1.1 && <1.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "dhall",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    },
    "dhall-parser": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Main.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "benchmark/parser"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [
            {
              "enable-extension": "TypeApplications"
            }
          ],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-rtsopts"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "bytestring",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.5.0.0 && <0.7",
              "library": [
                {}
              ]
            },
            {
              "package-name": "criterion",
              "version-range": ">=1.1 && <1.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "dhall",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "directory",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "serialise",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": ">=0.11.1.0 && <1.3",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "bytestring",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.5.0.0 && <0.7",
          "library": [
            {}
          ]
        },
        {
          "package-name": "criterion",
          "version-range": ">=1.1 && <1.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "dhall",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "directory",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "serialise",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": ">=0.11.1.0 && <1.3",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    },
    "map-operations": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Main.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "benchmark/map"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-rtsopts",
              "-O2"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "criterion",
              "version-range": ">=1.1 && <1.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "dhall",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "criterion",
          "version-range": ">=1.1 && <1.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "dhall",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    },
    "dhall-command": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Main.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "benchmark/dhall-command"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-rtsopts",
              "-O2"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "dhall",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "dhall",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
