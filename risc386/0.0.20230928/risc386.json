{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "risc386",
      "version": [
        0,
        0,
        20230928
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Andreas Abel <andreas.abel@ifi.lmu.de>",
    "author": "Andreas Abel with contributions by Robert Grabowski and Ulrich Schoepp",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==9.8.0"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.6.3"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.4.7"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.2.8"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.0.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.10.7"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.8.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.6.5"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.4.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.2.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.0.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.10.3"
      }
    ],
    "homepage": "https://github.com/andreasabel/risc386",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/andreasabel/risc386.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Reduced instruction set i386 simulator",
    "description": "risc386 is a symbolic Intel(R) 386 assembler interpreter which\nallows infinitely many registers (temporaries).  Its purpose is\nto debug the output of a MiniJava compiler (from Andrew Appel's\nbook, Modern Compiler Implementation in JAVA) before register\nallocation has been performed.\n\nrisc386 supports only a small fragment of i386 instructions.\nIt expects its input to be a list of procedures in .intel_syntax\neach of which is started by a label and terminated by a return\nstatement.\n\nControl flow is restricted, so, only jumps to procedure-local\nlabels are allowed.  Reading from an uninitialized memory location\nwill lead to an exception.",
    "category": "Compilers/Interpreters, Education",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "CHANGELOG.md",
      "README.md",
      "Makefile",
      "test/succeed/Makefile",
      "test/succeed/*.s",
      "test/succeed/*.raw.s",
      "test/fail/Makefile",
      "test/fail/*.s",
      "test/fail/*.err",
      "test/fail/*.raw.s",
      "test/fail/*.raw.err"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "executables": {
    "risc386": {
      "condTreeData": {
        "name": "risc386",
        "module-path": "MainIntel.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [
            {
              "package-name": "happy",
              "include-renaming": ">=1.15 && <2"
            },
            {
              "package-name": "alex",
              "include-renaming": ">=2.0 && <4"
            }
          ],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "."
          ],
          "otherModules": [
            [
              "Frame"
            ],
            [
              "FrameIntel"
            ],
            [
              "GenSym"
            ],
            [
              "Intel"
            ],
            [
              "LexIntel"
            ],
            [
              "ParseIntel"
            ],
            [
              "StateIntel"
            ],
            [
              "TokenIntel"
            ],
            [
              "Util"
            ],
            [
              "Wellformed"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "TypeSynonymInstances"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "GeneralizedNewtypeDeriving"
            },
            {
              "enable-extension": "PatternGuards"
            },
            {
              "enable-extension": "TupleSections"
            }
          ],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "array",
              "version-range": ">=0.3 && <0.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.6 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.3 && <1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": ">=2.2 && <2.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "pretty",
              "version-range": ">=1.0 && <1.2",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "array",
          "version-range": ">=0.3 && <0.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.6 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.3 && <1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": ">=2.2 && <2.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "pretty",
          "version-range": ">=1.0 && <1.2",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
