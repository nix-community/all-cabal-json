name:
  lazy
version:
  0.1
category:
  Control
synopsis:
  Explicit laziness for Haskell
description:
  Now that we have the \"Strict\" pragma at hand we can finally work in Haskell as in a strict language.
  Sometimes though laziness is useful,
  but all Haskellers also know that types keep us safe.
  This library provides laziness as an abstraction with an explicit type-signature,
  and it so happens that this abstraction forms a monad!
  .
  This library takes inspiration from the following blog post:
  <https://nikita-volkov.github.io/if-haskell-were-strict/>
homepage:
  https://github.com/nikita-volkov/lazy
bug-reports:
  https://github.com/nikita-volkov/lazy/issues
author:
  Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:
  Nikita Volkov <nikita.y.volkov@mail.ru>
copyright:
  (c) 2017, Nikita Volkov
license:
  MIT
license-file:
  LICENSE
build-type:
  Simple
cabal-version:
  >=1.24

source-repository head
  type:
    git
  location:
    git://github.com/nikita-volkov/lazy.git

library
  hs-source-dirs:
    library
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, PatternSynonyms, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  exposed-modules:
    Lazy
  other-modules:
    Lazy.Prelude
  build-depends:
    comonad >=5 && <6,
    base >=4.6 && <5
