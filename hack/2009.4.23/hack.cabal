Name:                 hack
Version:              2009.4.23
Build-type:           Simple
Synopsis:             a sexy Haskell Webserver Interface
Description:
        
    Hack: a sexy Haskell Webserver Interface
    ========================================


    Hack is a brain-dead port of the brilliant Ruby Rack <http://rack.rubyforge.org/> webserver interface.

    What does a Hack app look like
    ------------------------------


        module Main where

        import Hack
        import Hack.Handler.Kibro

        hello :: Application
        hello = \env -> return $ Response 
            { status  = 200
            , headers = [ ("Content-Type", "text/plain") ]
            , body    = "Hello World"
            }

        main = run hello

License:              GPL
License-file:         LICENSE
Author:               Wang, Jinjing
Maintainer:           Wang, Jinjing <nfjinjing@gmail.com>
Build-Depends:        base
Cabal-version:        >= 1.2
category:             Web
homepage:             http://github.com/nfjinjing/hack/tree/master
data-files:           readme.md, changelog.md

library
  ghc-options: -Wall -fno-warn-missing-signatures -fno-warn-name-shadowing -fno-warn-orphans -fno-warn-type-defaults
  build-depends: base, cgi, network, haskell98, old-locale, old-time, directory, filepath, containers, mps >= 2009.4.21, kibro >= 0.4.3, data-default >= 0.2, ansi-wl-pprint, bytestring, template, unix
  hs-source-dirs: src/
  exposed-modules:  
                    Hack
                    Hack.Utils
                    Hack.Request
                    Hack.Constants
                    
                    Hack.Handler.Kibro
                    
                    Hack.Contrib.ContentSize
                    Hack.Contrib.Hub
                    Hack.Contrib.SimpleAccessLogger
                    Hack.Contrib.SimpleRouter
                    Hack.Contrib.RawRouter
                    Hack.Contrib.ContentType
                    