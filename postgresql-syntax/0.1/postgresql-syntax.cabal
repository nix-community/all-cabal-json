name:
  postgresql-syntax
version:
  0.1
category:
  Database, PostgreSQL
synopsis:
  PostgreSQL SQL syntax utilities
description:
  Currently this library only provides an SQL syntax validator.
  .
  This library wraps the \"libpq_query\" C library,
  which is an SQL parser based on the source code of the Postgres server.
  IOW, it uses the same parser as Postgres itself
  and hence supports all of its syntax.
  .
  So far this package has only been tested to work on the *nix systems (Mac OS including).
homepage:
  https://github.com/nikita-volkov/postgresql-syntax
bug-reports:
  https://github.com/nikita-volkov/postgresql-syntax/issues
author:
  Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:
  Nikita Volkov <nikita.y.volkov@mail.ru>
copyright:
  (c) 2017, Nikita Volkov
license:
  MIT
license-file:
  LICENSE
build-type:
  Custom
extra-source-files:
  foreign/ffi/*.c
  foreign/libpg_query/LICENSE
  foreign/libpg_query/Makefile
  foreign/libpg_query/src/*.c
  foreign/libpg_query/src/postgres/*.c
  foreign/libpg_query/*.h
  foreign/libpg_query/src/*.h
  foreign/libpg_query/src/postgres/include/*.h
  foreign/libpg_query/src/postgres/include/access/*.h
  foreign/libpg_query/src/postgres/include/bootstrap/*.h
  foreign/libpg_query/src/postgres/include/catalog/*.h
  foreign/libpg_query/src/postgres/include/commands/*.h
  foreign/libpg_query/src/postgres/include/common/*.h
  foreign/libpg_query/src/postgres/include/datatype/*.h
  foreign/libpg_query/src/postgres/include/executor/*.h
  foreign/libpg_query/src/postgres/include/lib/*.h
  foreign/libpg_query/src/postgres/include/libpq/*.h
  foreign/libpg_query/src/postgres/include/mb/*.h
  foreign/libpg_query/src/postgres/include/nodes/*.h
  foreign/libpg_query/src/postgres/include/optimizer/*.h
  foreign/libpg_query/src/postgres/include/parser/*.h
  foreign/libpg_query/src/postgres/include/port/atomics/*.h
  foreign/libpg_query/src/postgres/include/port/*.h
  foreign/libpg_query/src/postgres/include/port/*.h
  foreign/libpg_query/src/postgres/include/portability/*.h
  foreign/libpg_query/src/postgres/include/postmaster/*.h
  foreign/libpg_query/src/postgres/include/regex/*.h
  foreign/libpg_query/src/postgres/include/replication/*.h
  foreign/libpg_query/src/postgres/include/rewrite/*.h
  foreign/libpg_query/src/postgres/include/storage/*.h
  foreign/libpg_query/src/postgres/include/tcop/*.h
  foreign/libpg_query/src/postgres/include/tsearch/*.h
  foreign/libpg_query/src/postgres/include/utils/*.h
cabal-version:
  >=1.10

source-repository head
  type:
    git
  location:
    git://github.com/nikita-volkov/postgresql-syntax.git

library
  hs-source-dirs:
    library
  exposed-modules:
    PostgreSQL.Syntax
  other-modules:
    PostgreSQL.Syntax.Pointers
    PostgreSQL.Syntax.Foreign
    PostgreSQL.Syntax.Prelude
  c-sources:
    foreign/ffi/validation.c
  include-dirs:
    foreign/libpg_query
  includes:
    pg_query.h
  extra-libraries:
    pg_query
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    -- 
    text >= 1 && < 2,
    bytestring >= 0.10.8 && < 0.11,
    --
    base-prelude < 2,
    base < 5

test-suite demo
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    demo
  main-is:
    Main.hs
  ghc-options:
    -O2
    -threaded
    "-with-rtsopts=-N"
  ghc-prof-options:
    -O2
    -threaded
    -fprof-auto
    "-with-rtsopts=-N -p -s -h -i0.1"
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    postgresql-syntax,
    rerebase == 1.*
