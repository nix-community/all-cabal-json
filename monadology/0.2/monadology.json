{
  "description": {
    "spec-version": {
      "Left": [
        2,
        2
      ]
    },
    "package": {
      "name": "monadology",
      "version": [
        0,
        2
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "BSD_2_Clause"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "(c) 2017-2023 Ashley Yakeley",
    "maintainer": "<ashley@semantic.org>",
    "author": "Ashley Yakeley",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==9.2.8"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.4.5"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.6.2"
      }
    ],
    "homepage": "https://github.com/AshleyYakeley/monadology#readme",
    "pkg-url": "",
    "bug-reports": "https://github.com/AshleyYakeley/monadology/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/AshleyYakeley/monadology",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "The best ideas in monad-related classes and types.",
    "description": "Monadology is intended as a collection of the best ideas in monad-related classes and types, with a focus on correctness and elegance, and theoretical understanding, rather than practical performance.",
    "category": "Monads",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "changelog.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "Result"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "IO"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Function"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Cont"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Inner"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Outer"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Extract"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Identity"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Exception"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Throw"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Catch"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Coroutine"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Trans",
          "Trans"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Trans",
          "Constraint"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Trans",
          "Hoist"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Trans",
          "Tunnel"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Trans",
          "Coerce"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Trans",
          "Unlift"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General",
          "Trans",
          "AskUnlift"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "General"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "ComposeInner"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "ComposeOuter"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "IdentityT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "ComposeT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "MaybeT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "ExceptT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "ReaderT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "WriterT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "StateT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "ContT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "ReaderStateT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "StackT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "WithT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "ResultT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "StepT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "CoroutineT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Specific",
          "LifecycleT"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Data",
          "Exn"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Data",
          "Param"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Data",
          "Prod"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Data",
          "Ref"
        ],
        [
          "Control",
          "Monad",
          "Ology",
          "Data"
        ],
        [
          "Control",
          "Monad",
          "Ology"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Control",
            "Monad",
            "Ology",
            "General",
            "Exception",
            "Class"
          ],
          [
            "Import"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "AllowAmbiguousTypes"
          },
          {
            "enable-extension": "Arrows"
          },
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "EmptyCase"
          },
          {
            "enable-extension": "EmptyDataDecls"
          },
          {
            "enable-extension": "ExistentialQuantification"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "ForeignFunctionInterface"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "ImplicitParams"
          },
          {
            "disable-extension": "ImplicitPrelude"
          },
          {
            "enable-extension": "InstanceSigs"
          },
          {
            "enable-extension": "KindSignatures"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "OverloadedLabels"
          },
          {
            "enable-extension": "OverloadedStrings"
          },
          {
            "enable-extension": "PartialTypeSignatures"
          },
          {
            "enable-extension": "PatternGuards"
          },
          {
            "enable-extension": "PatternSynonyms"
          },
          {
            "enable-extension": "PolyKinds"
          },
          {
            "enable-extension": "QuantifiedConstraints"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "RecordWildCards"
          },
          {
            "enable-extension": "RecursiveDo"
          },
          {
            "enable-extension": "RoleAnnotations"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "StandaloneKindSignatures"
          },
          {
            "disable-extension": "StarIsType"
          },
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "TypeApplications"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeFamilyDependencies"
          },
          {
            "enable-extension": "TypeInType"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "TypeSynonymInstances"
          },
          {
            "enable-extension": "UndecidableInstances"
          },
          {
            "enable-extension": "UndecidableSuperClasses"
          },
          {
            "enable-extension": "ViewPatterns"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-Wincomplete-uni-patterns",
            "-Wincomplete-record-updates",
            "-Wcompat",
            "-Wnoncanonical-monad-instances",
            "-Wno-partial-type-signatures"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.15 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "constraints",
            "version-range": ">=0.13",
            "library": [
              {}
            ]
          },
          {
            "package-name": "invariant",
            "version-range": ">=0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "type-rig",
            "version-range": ">=0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "witness",
            "version-range": ">=0.6.1",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.15 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "constraints",
        "version-range": ">=0.13",
        "library": [
          {}
        ]
      },
      {
        "package-name": "invariant",
        "version-range": ">=0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "type-rig",
        "version-range": ">=0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "witness",
        "version-range": ">=0.6.1",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "test": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Main.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [
            [
              "Useful"
            ],
            [
              "Exception"
            ],
            [
              "Compose"
            ],
            [
              "Coroutine"
            ],
            [
              "Lifecycle"
            ],
            [
              "Data"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "AllowAmbiguousTypes"
            },
            {
              "enable-extension": "Arrows"
            },
            {
              "enable-extension": "ConstraintKinds"
            },
            {
              "enable-extension": "DataKinds"
            },
            {
              "enable-extension": "DefaultSignatures"
            },
            {
              "enable-extension": "EmptyCase"
            },
            {
              "enable-extension": "EmptyDataDecls"
            },
            {
              "enable-extension": "ExistentialQuantification"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "ForeignFunctionInterface"
            },
            {
              "enable-extension": "FunctionalDependencies"
            },
            {
              "enable-extension": "GADTs"
            },
            {
              "enable-extension": "GeneralizedNewtypeDeriving"
            },
            {
              "enable-extension": "ImplicitParams"
            },
            {
              "disable-extension": "ImplicitPrelude"
            },
            {
              "enable-extension": "InstanceSigs"
            },
            {
              "enable-extension": "KindSignatures"
            },
            {
              "enable-extension": "LambdaCase"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "OverloadedLabels"
            },
            {
              "enable-extension": "OverloadedStrings"
            },
            {
              "enable-extension": "PartialTypeSignatures"
            },
            {
              "enable-extension": "PatternGuards"
            },
            {
              "enable-extension": "PatternSynonyms"
            },
            {
              "enable-extension": "PolyKinds"
            },
            {
              "enable-extension": "QuantifiedConstraints"
            },
            {
              "enable-extension": "RankNTypes"
            },
            {
              "enable-extension": "RecordWildCards"
            },
            {
              "enable-extension": "RecursiveDo"
            },
            {
              "enable-extension": "RoleAnnotations"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "StandaloneDeriving"
            },
            {
              "enable-extension": "StandaloneKindSignatures"
            },
            {
              "disable-extension": "StarIsType"
            },
            {
              "enable-extension": "TemplateHaskell"
            },
            {
              "enable-extension": "TypeApplications"
            },
            {
              "enable-extension": "TypeFamilies"
            },
            {
              "enable-extension": "TypeFamilyDependencies"
            },
            {
              "enable-extension": "TypeInType"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "TypeSynonymInstances"
            },
            {
              "enable-extension": "UndecidableInstances"
            },
            {
              "enable-extension": "UndecidableSuperClasses"
            },
            {
              "enable-extension": "ViewPatterns"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-Wincomplete-uni-patterns",
              "-Wincomplete-record-updates",
              "-Wcompat",
              "-Wnoncanonical-monad-instances",
              "-Wno-partial-type-signatures",
              "-threaded"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4.15 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "monadology",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": ">=1.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-hunit",
              "version-range": ">=0.10",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": ">=2.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.5",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4.15 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "monadology",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": ">=1.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-hunit",
          "version-range": ">=0.10",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": ">=2.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.5",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
