name:                prednote
version:             0.12.0.0
synopsis:            Build and evaluate trees of predicates
description:
  Build and evaluate trees of predicates. For example, you might build
  a predicate of the type Int -> Bool. You do this by assembling
  several predicates into a tree. You can then verbosely evaluate
  this tree, showing why a particular result is reached.
  .
  prednote also provides modules to test several subjects against a
  given predicate, and to parse infix or RPN expressions into a tree of
  predicates.

homepage:            http://github.com/massysett/prednote
license:             BSD3
license-file:        LICENSE
author:              Omari Norman
maintainer:          omari@smileystation.com
copyright:           2013 Omari Norman
category:            Data
build-type:          Simple
cabal-version:       >=1.8

source-repository head
    type: git
    location: git://github.com/massysett/prednote.git

library

  exposed-modules:
      Data.Prednote.Pdct
    , Data.Prednote.Expressions
    , Data.Prednote.Expressions.Infix
    , Data.Prednote.Expressions.RPN
    , Data.Prednote.Test

  build-depends:
      base >= 4.6 && < 5
    , explicit-exception ==0.1.*
    , rainbow ==0.4.*
    , split ==0.2.*
    , text == 0.11.*

  ghc-options: -Wall
  hs-source-dirs: lib

executable prednote-test
  main-is: prednote-test.hs
  hs-source-dirs: . lib
  if ! flag(test)
    buildable: False

  build-depends:
      base >= 4.6 && < 5
    , QuickCheck ==2.6.*
    , text ==0.11.*
    , explicit-exception ==0.1.*
    , rainbow ==0.4.*
    , split ==0.2.*

flag test
    Description: enables QuickCheck tests
    default: False
