{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "free",
      "version": [
        4,
        2
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Copyright (C) 2008-2012 Edward A. Kmett",
    "maintainer": "Edward A. Kmett <ekmett@gmail.com>",
    "author": "Edward A. Kmett",
    "stability": "provisional",
    "tested-with": [],
    "homepage": "http://github.com/ekmett/free/",
    "pkg-url": "",
    "bug-reports": "http://github.com/ekmett/free/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/ekmett/free.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Monads for free",
    "description": "Free monads are useful for many tree-like structures and domain specific languages.\n\nA 'Monad' @n@ is a free 'Monad' for @f@ if every 'Monad' homomorphism\nfrom @n@ to another monad @m@ is equivalent to a natural transformation\nfrom @f@ to @m@.\n\nCofree comonads provide convenient ways to talk about branching streams and rose-trees,\nand can be used to annotate syntax trees.\n\nA 'Comonad' @v@ is a cofree 'Comonad' for @f@ if every 'Comonad' homomorphism\nanother comonad @w@ to @v@ is equivalent to a natural transformation\nfrom @w@ to @f@.",
    "category": "Control, Monads",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      ".ghci",
      ".gitignore",
      ".travis.yml",
      ".vim.custom",
      "README.markdown",
      "CHANGELOG.markdown"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "Applicative",
          "Free"
        ],
        [
          "Control",
          "Alternative",
          "Free"
        ],
        [
          "Control",
          "Comonad",
          "Cofree"
        ],
        [
          "Control",
          "Comonad",
          "Cofree",
          "Class"
        ],
        [
          "Control",
          "Comonad",
          "Trans",
          "Cofree"
        ],
        [
          "Control",
          "Comonad",
          "Trans",
          "Coiter"
        ],
        [
          "Control",
          "Monad",
          "Free"
        ],
        [
          "Control",
          "Monad",
          "Free",
          "Church"
        ],
        [
          "Control",
          "Monad",
          "Free",
          "Class"
        ],
        [
          "Control",
          "Monad",
          "Trans",
          "Free"
        ],
        [
          "Control",
          "Monad",
          "Trans",
          "Iter"
        ],
        [
          "Control",
          "MonadPlus",
          "Free"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "CPP"
          }
        ],
        "otherExtensions": [
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "UndecidableInstances"
          },
          {
            "enable-extension": "Rank2Types"
          },
          {
            "enable-extension": "GADTs"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bifunctors",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "comonad",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "distributive",
            "version-range": ">=0.2.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.0.1.0 && <2.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "profunctors",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "semigroupoids",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "semigroups",
            "version-range": ">=0.8.3.1 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.2.0 && <0.4",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bifunctors",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "comonad",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "distributive",
        "version-range": ">=0.2.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.0.1.0 && <2.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "profunctors",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "semigroupoids",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "semigroups",
        "version-range": ">=0.8.3.1 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.2.0 && <0.4",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "variable": {
            "compiler": "GHC",
            "version": "-any"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [
                "-DGHC_TYPEABLE"
              ],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      }
    ]
  }
}
