-- Initial haskell-gll.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                gll
version:             0.3.0.9
synopsis:            GLL parser with simple combinator interface 
license:             BSD3
license-file:        LICENSE
author:              L. Thomas van Binsbergen
maintainer:          L. Thomas van Binsbergen <ltvanbinsbergen@acm.org>
category:            Compilers
build-type:          Simple 
cabal-version:       >=1.8
tested-with:         GHC == 7.4.1, GHC == 7.8.3, GHC == 7.10.1 
copyright:           Copyright (C) 2015 L. Thomas van Binsbergen
stability:           experimental
description:         

        The package gll provides generalised top-down parsing according to the GLL
        parsing algorithm [Scott and Johnstone 2010,2013]. 
        .
        The user can either invoke the GLL
        parser directly by importing "GLL.Parser" and providing a
        value of the Grammar datatype in (exported by "GLL.Parser"). 
        Alternatively, the user can import "GLL.Combinators" to write combinator expressions 
        from which a grammar of the required form is extracted.
        The combinators enable applying arbitrary semantic actions to parse results.
        The documentation of the respective packages provides more information.
        .
        The main motivation for this package
        is the development of Domain Specific Languages (DSLs).
        More specifically: designing DSLs with minimal differences between
        between abstract and concrete syntax (abstract syntax is often ambiguous). 
        .
        Please email any questions, comments and suggestions to the 
        maintainer.

extra-source-files: changelog.txt

library
    hs-source-dirs  :   src
    build-depends   :     base >=4.3.1.0 && <= 4.8.2.0
                        , containers >= 0.4
                        , array
                        , TypeCompose
                        , pretty
                        , text
                        , regex-applicative >= 0.3
    exposed-modules :     GLL.Combinators.Interface
                        , GLL.Combinators.Test.Interface
                        , GLL.Combinators
                        , GLL.Parser
                        , GLL.Parseable.Char
    other-modules   :   GLL.Types.Abstract
                        , GLL.Combinators.Memoisation
                        , GLL.Combinators.Options
                        , GLL.Combinators.Lexer
                        , GLL.Types.Grammar
                        , GLL.Combinators.Visit.Grammar
                        , GLL.Combinators.Visit.Sem
                        , GLL.Combinators.Visit.Join
    extensions      : TypeOperators, FlexibleInstances, ScopedTypeVariables, TypeSynonymInstances
    ghc-options:         -fwarn-incomplete-patterns -fwarn-monomorphism-restriction -fwarn-unused-imports

