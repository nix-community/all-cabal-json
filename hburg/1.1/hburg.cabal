-- Package Stanza
Name:           hburg
Version:        1.1
License:        BSD3
License-file:   LICENSE
Author:         Igor Boehm <igor@bytelabs.org>
Maintainer:     igor@bytelabs.org
Homepage:       http://www.bytelabs.org/hburg.html
Category:       Code Generation
Synopsis:       Haskell Bottom Up Rewrite Generator
Description:
    HBURG is a program that generates tree parsers for cost-augmented
    tree grammars. It is useful for writing code generators for compilers.
    Given a mapping of a tree structured intermediate representation onto
    target machine instructions, HBURG generates a code generator that can
    be plugged into the instruction selection phase of a compiler.
Stability:      Experimental
build-depends:  base, haskell98, filepath, mtl
extra-source-files:
    TODO
    test/01-grammar.tpg
    test/02-grammar.tpg
    test/03-grammar.tpg
    test/04-grammar.tpg
    test/05-grammar.tpg
    test/06-grammar.tpg
    test/07-grammar.tpg
    test/errors/err-dupbindings.tpg
    test/errors/err-many-many-errors.tpg
    test/errors/err-manyundefined.tpg
    test/errors/err-selfredef.tpg
    test/errors/err-typerror1.tpg
    test/errors/err-typerror2.tpg
    test/errors/err-typerror3.tpg
    test/errors/err-useundefined.tpg
    test/errors/err-varyingparams.tpg

-- Executable Stanza
executable:     hburg
main-is:        Main.hs
-- Optional Stuff in the executable stanza
hs-source-dirs: src
other-modules:
    Util
    Debug
    Ast.Attr
    Ast.Bind
    Ast.Code
    Ast.Closure
    Ast.Cost
    Ast.Decl
    Ast.Def
    Ast.Ident
    Ast.Incl
    Ast.Ir
    Ast.Node
    Ast.Nt
    Ast.Op
    Ast.Prod
    Ast.T
    Ast.Term
    Csa.Csa
    Csa.Ctx
    Csa.Elem
    Gen.Emit
    Gen.Backend
    Gen.Emit.Enums
    Gen.Emit.Eval
    Gen.Emit.NodeIface
    Gen.Emit.Tile
    Gen.Emit.Class
    Gen.Emit.Label
    Gen.Emit.Java.Class
    Gen.Emit.Java.Comment
    Gen.Emit.Java.Constructor
    Gen.Emit.Java.Enum
    Gen.Emit.Java.Method
    Gen.Emit.Java.Modifier
    Gen.Emit.Java.Parameter
    Gen.Emit.Java.Variable
    Parser.Lexer
    Parser.Parser
    Parser.ParseErr
ghc-options: -O
    -funbox-strict-fields 
    -fglasgow-exts 
    -fwarn-unused-imports 
    -fwarn-duplicate-exports 
    -fwarn-incomplete-patterns 
    -fwarn-overlapping-patterns