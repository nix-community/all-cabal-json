name:                 generic-enum
version:              0.1.0.0
synopsis:             An Enum class that fixes some deficiences with Prelude's Enum
description:
  The default Enum class has a couple of issues that limit it's flexibility namely:
  .
  1) The \"Enum\" type must be always \"Int\", even when this loses information, such as in
  the case of \"Integer\" (due to overflow) and \"Rational\" (in the case of fractions).
  .
  2) "enumFromTo" etc like functions can only produce lists, instead of directly producing other
  list like data types. Aside from effeciency, using a list as an intermediary can lose information also.
  .
  The Enum class this package defines should be largely a drop in replacement for Prelude's Enum,
  with some minor exceptions detailed in the documentation.
license: MIT
license-file: LICENSE
copyright: Clinton Mead (2017)
homepage:             
author:               Clinton Mead
maintainer:           clintonmead@gmail.com
category:             
build-type:           Simple
cabal-version:        >=1.10
tested-with: GHC == 8.0.2
bug-reports: https://github.com/clintonmead/generic-enum/issues

source-repository head
  type: git
  location: https://github.com/clintonmead/generic-enum.git

library
  exposed-modules: Data.Generic.Enum
  build-depends:        base == 4.9.*, array == 0.5.*, bytestring == 0.10.*
  hs-source-dirs:       src
  default-language:     Haskell2010

Test-Suite tests
  type: exitcode-stdio-1.0
  other-modules: Data.Generic.Enum
  main-is: Tests.hs
  build-depends:        base == 4.9.*, array == 0.5.*, bytestring == 0.10.*, hspec == 2.4.*
  hs-source-dirs:       src, test
  default-language:     Haskell2010
