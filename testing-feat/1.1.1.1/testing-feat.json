{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "testing-feat",
      "version": [
        1,
        1,
        1,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Jonas Duregård",
    "maintainer": "byorgey@gmail.com",
    "author": "Jonas Duregård",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==8.6.5 || ==8.8.4 || ==8.10.7 || ==9.0.2 || ==9.2.4 || ==9.4.1"
      }
    ],
    "homepage": "https://github.com/size-based/testing-feat",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/size-based/testing-feat",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Functional Enumeration of Algebraic Types",
    "description": "Feat (Functional Enumeration of Algebraic Types) provides\nenumerations as functions from natural numbers to values\n(similar to @toEnum@ but for any algebraic data type). This\ncan be used for SmallCheck-style systematic testing,\nQuickCheck style random testing, and hybrids of the two.\n\nThe enumerators are defined in a very boilerplate manner\nand there is a Template Haskell script for deriving the\nclass instance for most types.\n\"Test.Feat\" contain a subset of the other modules that\nshould be sufficient for most test usage. There\nare some small and large example in the tar\nball.\n\nThe generators are provided by the size-based package. This means other libraries that implement the Sized class can use the same generator definitions. One such is the\n<https://hackage.haskell.org/package/lazy-search lazy-search package>, that uses laziness to search for values and test properties. This is typically a lot faster than Feat for properties that have preconditions (logical implication), but can not be used for random selection of values.",
    "category": "Testing",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "examples/template-haskell/th.hs",
      "examples/haskell-src-exts/hse.hs",
      "examples/lambda-terms/lambdas.hs",
      "CHANGELOG.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Test",
          "Feat"
        ],
        [
          "Test",
          "Feat",
          "Finite"
        ],
        [
          "Test",
          "Feat",
          "Enumerate"
        ],
        [
          "Test",
          "Feat",
          "Access"
        ],
        [
          "Test",
          "Feat",
          "Driver"
        ],
        [
          "Test",
          "Feat",
          "Modifiers"
        ],
        [
          "Test",
          "Feat",
          "Class"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "."
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.11 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "QuickCheck",
            "version-range": ">2 && <3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "size-based",
            "version-range": "<0.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "testing-type-modifiers",
            "version-range": "<0.2",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.11 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "QuickCheck",
        "version-range": ">2 && <3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "size-based",
        "version-range": "<0.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "testing-type-modifiers",
        "version-range": "<0.2",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
