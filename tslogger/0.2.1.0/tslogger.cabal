name:                tslogger
version:             0.2.1.0
synopsis:            Thread-safe logging, with additional interleaving fuzz-testing.
description:

            This is a thread-safe logging framework.  It logs to memory, with various
            options for serializing log messages out to a file or handle.  A verbosity
            level controls the quantity of log messages.

            For debugging, this logging framework can do double-duty by controlling the
            interleaving of threads which are producing log messages, for the purpose of
            fuzz-testing concurrent interleavings.  This is accomplished by blocking the
            threads at the point of each logging message, and controlling the order in
            which threads (sequentially) unblock.
            
license:             BSD3
license-file:        LICENSE
author:              Ryan Newton, Peter Fogg
maintainer:          peter.p.fogg@gmail.com
category:            Logging
build-type:          Simple
cabal-version:       >=1.10

source-repository head
  type: git
  location: https://github.com/iu-parfunc/tslogger

flag debug
  description: Activate debugging mechanism.
  default: False
  manual: True

library
  exposed-modules:     System.Log.TSLogger
  other-extensions:    CPP, ScopedTypeVariables, FlexibleInstances, NamedFieldPuns, BangPatterns
  build-depends:       base >= 4.7 && < 5.0
                     , async >= 2.0 
                     , containers >= 0.5 
                     , random >= 1.1
                     , text
                     , bytestring
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options: -Wall

  if flag(debug)
     cpp-options: -DDEBUG_LOGGER
