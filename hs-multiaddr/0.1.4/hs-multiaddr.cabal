-- This file has been generated from package.yaml by hpack version 0.21.2.
--
-- see: https://github.com/sol/hpack
--
-- hash: 97e59c09cade2c4a1e7309c30f9342103e5930d54a11d1a30ed5707426f7e3c7

name:           hs-multiaddr
version:        0.1.4
synopsis:       Multiaddr library
description:    Multiaddr is self-describing way to represent addresses that support any standard network protocol. Multiaddr has a binary packed format, and nice string representation. It is possible to encapsulate addresses within each other.
category:       Data
homepage:       https://github.com/MatrixAI/hs-multiaddr#readme
bug-reports:    https://github.com/MatrixAI/hs-multiaddr/issues
author:         CMCDragonkai,
                Quoc-An Ho
maintainer:     roger.qiu@matrix.ai
copyright:      (c) Matrix AI 2017
license:        Apache-2.0
license-file:   LICENSE
build-type:     Simple
cabal-version:  >= 1.10

extra-source-files:
    README.md

source-repository head
  type: git
  location: https://github.com/MatrixAI/hs-multiaddr

library
  exposed-modules:
      Data.Multiaddr
      Data.MultiaddrPart
      Data.Multiaddr.IPFS
      Data.Multiaddr.VarInt
      Data.Multiaddr.IPv4
      Data.Multiaddr.IPv6
      Data.Multiaddr.Onion
      Data.Multiaddr.Port
      Data.Multiaddr.UnixPath
  other-modules:
      Paths_hs_multiaddr
  hs-source-dirs:
      src
  build-depends:
      base >=4.7 && <5
    , bytes >=0.15 && <0.16
    , bytestring >=0.10 && <0.11
    , cereal >=0.5 && <0.6
    , filepath >=1.4 && <1.5
    , hs-multihash
    , iproute >=1.7 && <1.8
    , sandi >=0.4 && <0.5
  default-language: Haskell2010

test-suite hs-multiaddr-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Paths_hs_multiaddr
  hs-source-dirs:
      test
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      base >=4.7 && <5
    , bytestring >=0.10 && <0.11
    , either-unwrap >=1.1 && <1.2
    , hs-multiaddr
    , hs-multihash
    , hspec >=2.4 && <2.5
    , iproute >=1.7 && <1.8
    , sandi >=0.4 && <0.5
  default-language: Haskell2010
