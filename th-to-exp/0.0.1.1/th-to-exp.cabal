-- This file has been generated from package.yaml by hpack version 0.17.1.
--
-- see: https://github.com/sol/hpack

name:           th-to-exp
version:        0.0.1.1
synopsis:       Provides a way to persist data from compile-time to runtime.
description:    This package provides a way to persist data from compile-time to runtime by
                producing Template Haskell expressions that evaluate to particular values. For
                example, if you have a value @Just 1@, then @toExp (Just 1)@ will produce the
                /expression/ @[e| Just 1 |]@, which can be used in a splice. For a more direct
                example, hereâ€™s what that looks like without the quasiquote notation:
                .
                >>> toExp (Just 1)
                AppE (ConE GHC.Base.Just) (LitE (IntegerL 1))
                .
                This is done by using a typeclass, 'ToExp', that can be automatically derived
                for types that have a 'Generic' instance.
category:       Template Haskell
homepage:       https://github.com/lexi-lambda/th-to-exp#readme
bug-reports:    https://github.com/lexi-lambda/th-to-exp/issues
maintainer:     Alexis King
license:        ISC
license-file:   LICENSE
build-type:     Simple
cabal-version:  >= 1.10

extra-source-files:
    CHANGELOG.md
    LICENSE
    package.yaml
    README.md
    stack.yaml

source-repository head
  type: git
  location: https://github.com/lexi-lambda/th-to-exp

library
  hs-source-dirs:
      library
  ghc-options: -Wall
  build-depends:
      base >= 4.9.0.0 && < 5
    , template-haskell >= 2.11.0.0 && < 2.13
  exposed-modules:
      Language.Haskell.TH.ToExp
  default-language: Haskell2010

test-suite th-to-exp-test-suite
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs:
      test-suite
  ghc-options: -Wall -rtsopts -threaded -with-rtsopts=-N
  build-depends:
      base
    , template-haskell
    , th-to-exp
    , hspec
  other-modules:
      Language.Haskell.TH.ToExpSpec
  default-language: Haskell2010
