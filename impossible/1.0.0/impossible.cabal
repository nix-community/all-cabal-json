name: impossible
version: 1.0.0
cabal-version: >=1.10
build-type: Simple
license: Apache-2.0
license-file: LICENSE
copyright: Copyright (C) 2015 Wojciech Danilo
maintainer: Wojciech Danilo <wojciech.danilo@gmail.com>
stability: experimental
homepage: https://github.com/wdanilo/impossible
bug-reports: https://github.com/wdanilo/impossible/issues
synopsis: Set of data and type definitions of impossible types. Impossible types are useful when declaring type classes / type families instances that should not be expanded by GHC until a specific type is provided in order to keep the types nice and readable.
category: Data
author: Wojciech Danilo

library
    exposed-modules:
        Data.Impossible
        Data.Impossible.Compact
    build-depends:
        base >=4.6 && <4.9,
        lens >=4.13
    default-language: Haskell2010
    default-extensions: ConstraintKinds DataKinds DefaultSignatures
                        DeriveDataTypeable DeriveFoldable DeriveFunctor DeriveGeneric
                        DeriveTraversable DoAndIfThenElse EmptyDataDecls FlexibleContexts
                        FlexibleInstances GeneralizedNewtypeDeriving InstanceSigs
                        LambdaCase MultiParamTypeClasses OverloadedStrings
                        StandaloneDeriving TemplateHaskell TupleSections TypeOperators
                        ViewPatterns TypeFamilies
    hs-source-dirs: src
    ghc-options: -Wall -O2

