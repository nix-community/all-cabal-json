name:           edenmodules
version:        1.2.0.0
license:        BSD3
license-file:   LICENSE
maintainer:     eden@mathematik.uni-marburg.de
homepage:       http://www.mathematik.uni-marburg.de/~eden
synopsis:       Semi-explicit parallel programming library
description:
    This package provides a library for semi-explicit parallel programming 
    with Eden. Eden extends Haskell with a small set of syntactic constructs 
    for explicit process specification and creation. While providing enough 
    control to implement parallel algorithms efficiently, it frees the 
    programmer from the tedious task of managing low-level details by 
    introducing automatic communication (via head-strict lazy lists), 
    synchronisation, and process handling. 

    The Eden-modules depend on GHC, and should normally use a GHC extension
    to support parallel execution using message passing.
    This modified GHC-Eden compiler is available from
    <http://www.mathematik.uni-marburg.de/~eden>.
    When built using a standard GHC, this package will produce a 
    threaded simulation of Eden. 

    The Eden homepage     <http://www.mathematik.uni-marburg.de/~eden>
    provides more documentation and a tutorial.

category:       Control, Distributed Computing, Eden, Parallelism
build-type:     Configure
cabal-version:  >=1.6

extra-source-files: 
                edenmodules.buildinfo.in,
                configure,
                configure.ac
extra-tmp-files:config.status,
                config.log,
                edenmodules.buildinfo

source-repository head
    type:     git
    location: git://james.mathematik.uni-marburg.de/edenmodules

library {
  exposed-modules:
        Control.Parallel.Eden
        Control.Parallel.Eden.ParPrim
        Control.Parallel.Eden.ParPrimConcHs
        Control.Parallel.Eden.EdenConcHs
        Control.Parallel.Eden.Edi
        Control.Parallel.Eden.Merge
  extensions:   CPP
  build-depends: base       >= 4 && < 5,
                 containers >= 0.3 && < 0.6,
                 deepseq    >= 1.1 && < 1.4,
                 parallel   >= 3.0 && < 4.0
  }

