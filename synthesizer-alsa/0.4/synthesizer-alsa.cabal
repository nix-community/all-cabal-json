Name:           synthesizer-alsa
Version:        0.4
License:        GPL
License-File:   LICENSE
Author:         Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:     Henning Thielemann <haskell@henning-thielemann.de>
Homepage:       http://www.haskell.org/haskellwiki/Synthesizer
Category:       Sound, Music
Synopsis:       Control synthesizer effects via ALSA/MIDI
Description:
  This package allows to read MIDI events
  and to convert them to control signals
  that can be used for audio effects.
  As demonstration there is a keyboard controlled music synthesizer.
Stability:      Experimental
Tested-With:    GHC==6.4.1, GHC==6.8.2, GHC==6.10.4, GHC==6.12.3, GHC==7.0.4, GHC==7.2.1
Cabal-Version:  >=1.6
Build-Type:     Simple

Source-Repository this
  Tag:         0.4
  Type:        darcs
  Location:    http://code.haskell.org/synthesizer/alsa/

Source-Repository head
  Type:        darcs
  Location:    http://code.haskell.org/synthesizer/alsa/

Flag splitBase
  description: Choose the new smaller, split-up base package.

Flag optimizeAdvanced
  description: Enable advanced optimizations. They slow down compilation considerably.
  default:     False

Flag buildExamples
  description: Build example executables
  default:     False

Flag buildTests
  description: Build test executables
  default:     False

Library
  Build-Depends:
    synthesizer-dimensional >=0.6 && <0.7,
    synthesizer-core >=0.5 && <0.6,
    sox >=0.2.1 && <0.3,
    midi-alsa >=0.1.2 && <0.2,
    alsa-seq >=0.5.1 && <0.6,
    alsa-pcm >=0.5 && <0.6,
    alsa-core >=0.5 && <0.6,
    midi >=0.1.1 && <0.2,
    storable-record >=0.0.2 && <0.1,
    storablevector >=0.2.5 && <0.3,
    deepseq >=1.1 && <1.2,
    numeric-prelude >=0.3 && <0.4,
    non-negative >=0.1 && <0.2,
    event-list >=0.1 && <0.2,
    data-accessor-transformers >=0.2.1 && <0.3,
    data-accessor >=0.2.1 && <0.3,
    containers >=0.1 && <0.5,
    array >=0.1 && <0.4,
    transformers >=0.2 && <0.3,
    utility-ht >=0.0.1 && <0.1

  If flag(splitBase)
    Build-Depends:
      random >= 1.0 && < 1.1,
      old-time >= 1.0 && < 1.1,
      base >= 3 && <5
  Else
    Build-Depends:
      base >= 1.0 && < 2

  If impl(ghc>=7.0)
    GHC-Options: -fwarn-unused-do-bind
    CPP-Options: -DNoImplicitPrelude=RebindableSyntax
    Extensions: CPP

  GHC-Options:    -Wall
  Hs-source-dirs: src
  Exposed-modules:
    Synthesizer.EventList.ALSA.MIDI
    Synthesizer.Storable.ALSA.MIDI
    Synthesizer.Storable.ALSA.Play
    Synthesizer.PiecewiseConstant.ALSA.MIDI
    Synthesizer.PiecewiseConstant.ALSA.MIDIControllerSet
    Synthesizer.Generic.ALSA.MIDI
    Synthesizer.Dimensional.ALSA.MIDI
    Synthesizer.Dimensional.ALSA.Play
    Synthesizer.CausalIO.ALSA.Process
    Synthesizer.CausalIO.ALSA.MIDIControllerSet
    Synthesizer.CausalIO.ALSA.MIDIControllerSelection
    -- these modules would be better located in midi package,
    -- but they are based on NumericPrelude
    Synthesizer.MIDIValue
    Synthesizer.MIDIValue.BendModulation
    Synthesizer.MIDIValue.BendWheelPressure
    Synthesizer.Dimensional.MIDIValue
    Synthesizer.Dimensional.MIDIValuePlain

Executable realtimesynth
  If !flag(buildExamples)
    Buildable: False
  If flag(optimizeAdvanced)
    GHC-Options: -O2 -fvia-C -optc-O2 -optc-msse3 -optc-ffast-math
  GHC-Options: -Wall -fexcess-precision -threaded
-- -ddump-simpl-stats -ddump-asm
  If impl(ghc>=7.0)
    GHC-Options: -fwarn-unused-do-bind
    CPP-Options: -DNoImplicitPrelude=RebindableSyntax
    Extensions: CPP
  Hs-Source-Dirs: src
  Other-modules:
    Synthesizer.Storable.ALSA.Server.Common
    Synthesizer.Storable.ALSA.Server.Instrument
    Synthesizer.Storable.ALSA.Server.Test
    Synthesizer.Storable.ALSA.Server.Run
  Main-Is: Synthesizer/Storable/ALSA/Server.hs

Executable synthicate
  If !flag(buildExamples)
    Buildable: False
  If flag(optimizeAdvanced)
    GHC-Options: -O2 -fvia-C -optc-O2 -optc-ffast-math
  GHC-Options: -Wall -fexcess-precision -threaded
-- -ddump-simpl-stats
  If impl(ghc>=7.0)
    GHC-Options: -fwarn-unused-do-bind
    CPP-Options: -DNoImplicitPrelude=RebindableSyntax
    Extensions: CPP
  Hs-Source-Dirs: src
  Other-modules:
    Synthesizer.Dimensional.ALSA.Server.Common
    Synthesizer.Dimensional.ALSA.Server.Instrument
    Synthesizer.Dimensional.ALSA.Server.Test
    Synthesizer.Dimensional.ALSA.Server.Run
  Main-Is: Synthesizer/Dimensional/ALSA/Server.hs

Executable test
  If !flag(buildTests)
    Buildable: False
  If flag(optimizeAdvanced)
    GHC-Options: -O2 -fvia-C -optc-O2 -optc-msse3 -optc-ffast-math
  GHC-Options: -Wall -fexcess-precision -threaded
-- -ddump-simpl-stats -ddump-asm
  If impl(ghc>=7.0)
    GHC-Options: -fwarn-unused-do-bind
    CPP-Options: -DNoImplicitPrelude=RebindableSyntax
    Extensions: CPP
  Hs-Source-Dirs: src
  Main-Is: Test.hs
