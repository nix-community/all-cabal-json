-- LeanCheck
--
-- Template Haskell dependency is optional.  To deactivate it:
-- 1. In this file, comment out:
--   Test.Check.Derive
--   template-haskell
--   and the test-suite derive
-- 2. On Test.Most, comment out the Test.Check.Derive module
-- 3. On Test.Check, comment out Test.Check.Derive and deriveListable
--
-- I could ultimately add a flag to deactivate that, but I do not want to make
-- this cabal file too complicated.  -- Rudy

name:                leancheck
version:             0.3.0
x-revision: 1
synopsis:            Cholesterol-free property-based testing
description:
  LeanCheck is a simple enumerative property-based testing library.
  .
  It works by producing *tiers* of test values,
  which are essentially (possibly infinite) lists
  of finite lists of same-and-increasingly-sized values.
  .
  LeanCheck has "lean" core with only 180 lines of Haskell code
  but provides a selection of utilitites for property testing:
  test types (@Nat@, @Nat\<1-7\>@, @Word\<1-4\>@, @Int\<1-4\>@);
  test operators (@==>@, @===@, @&&&@, @|||@);
  type binding operators.
  .
  LeanCheck API is likely to change in the near future.

homepage:            https://github.com/rudymatela/leancheck#readme
license:             BSD3
license-file:        LICENSE
author:              Rudy Matela <rudy@matela.com.br>
maintainer:          Rudy Matela <rudy@matela.com.br>
category:            Testing
build-type:          Simple
cabal-version:       >=1.10

extra-source-files:  README.md, CREDITS.md

source-repository head
  type:            git
  location:        https://github.com/rudymatela/leancheck

source-repository this
  type:            git
  location:        https://github.com/rudymatela/leancheck
  tag:             v0.3.0

library
  exposed-modules: Test.Check
                 , Test.Check.Utils
                 , Test.Check.Basic
                 , Test.Check.Core
                 , Test.Check.Derive
                 , Test.Check.Error
                 , Test.Check.IO
                 , Test.Types
                 , Test.Operators
                 , Test.TypeBinding
                 , Test.Most
                 , Test.Check.Function
                 , Test.Check.Function.ListsOfPairs
                 , Test.Check.Function.CoListable
                 , Test.Check.Function.Periodic
                 , Test.Check.Function.Show
                 , Test.Check.ShowFunction
  other-modules:       Test.Check.Invariants
  build-depends:       base >= 4 && < 5, template-haskell >= 2.7 && < 2.11
  default-language:    Haskell2010

test-suite test
  type:                exitcode-stdio-1.0
  main-is:             test.hs
  hs-source-dirs:      ., tests
  build-depends:       base >= 4 && < 5, template-haskell
  default-language:    Haskell2010

test-suite types
  type:                exitcode-stdio-1.0
  main-is:             test-types.hs
  hs-source-dirs:      ., tests
  build-depends:       base >= 4 && < 5, template-haskell
  default-language:    Haskell2010

test-suite utils
  type:                exitcode-stdio-1.0
  main-is:             test-utils.hs
  hs-source-dirs:      ., tests
  build-depends:       base >= 4 && < 5, template-haskell
  default-language:    Haskell2010

test-suite operators
  type:                exitcode-stdio-1.0
  main-is:             test-operators.hs
  hs-source-dirs:      ., tests
  build-depends:       base >= 4 && < 5, template-haskell
  default-language:    Haskell2010

test-suite most
  type:                exitcode-stdio-1.0
  main-is:             test-most.hs
  hs-source-dirs:      ., tests
  build-depends:       base >= 4 && < 5, template-haskell
  default-language:    Haskell2010

test-suite derive
  type:                exitcode-stdio-1.0
  main-is:             test-most.hs
  hs-source-dirs:      ., tests
  build-depends:       base >= 4 && < 5, template-haskell
  default-language:    Haskell2010

test-suite error
  type:                exitcode-stdio-1.0
  main-is:             test-error.hs
  hs-source-dirs:      ., tests
  build-depends:       base >= 4 && < 5, template-haskell
  default-language:    Haskell2010
