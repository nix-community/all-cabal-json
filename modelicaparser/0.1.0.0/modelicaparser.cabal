-- Initial modelicaparser.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                modelicaparser
version:             0.1.0.0
synopsis:            A parser for the modelica language
description:         According to the Modelica Language Specification 3.3, Apendix B: <https://modelica.org/documents/ModelicaSpec33.pdf>.
		     The main interface of the parser is in 'Language.Modelica.Parser'. The main entry point to the parser is 'stored_definition'.
license:             BSD3
license-file:        LICENSE
author:              Heinrich Hördegen
maintainer:          Heinrich Hördegen <hoerdegen@energiefluss.info>
copyright:           Ingenieurbüro Guttenberg & Hördegen <http://www.energiefluss.info>
category:            Language
build-type:          Simple
cabal-version:       >=1.8

data-dir:	     test/tests

Extra-Source-Files:
  caf1.mo
  caf2.mo
  capacitator.mo
  comment2.mo
  comment.mo
  connector.mo
  M.mo
  MotorDrive.mo
  Pendulum.mo
  spatialDistribution.mo
  test2.mo
  test3.mo
  test4.mo
  test5.mo
  test.mo
  ThrowingBall.mo
  TwoPin.mo
  vehicle.mo
  vehicle_parallelHybrid.mo


Flag buildTests
  Description: build test suite (makes trouble with TemplateHaskell and dynamic linking)
  Default: True



library
  build-depends:
    base ==4.5.*,
    parsec ==3.1.*,
    containers ==0.4.*
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs
  Hs-source-dirs: src
  exposed-modules:
    Language.Modelica.Parser
    Language.Modelica.Parser.Parser
    Language.Modelica.Parser.Option
    Language.Modelica.Parser.Basic
    Language.Modelica.Parser.ClassDefinition
    Language.Modelica.Parser.ComponentClause
    Language.Modelica.Parser.Equation
    Language.Modelica.Parser.Expression
    Language.Modelica.Parser.Lexer
    Language.Modelica.Parser.Modification
    Language.Modelica.Parser.Programme
    Language.Modelica.Parser.Utility

    Language.Modelica.Syntax.Modelica
    Language.Modelica.Syntax.Programme
    Language.Modelica.Syntax.ToString

Test-Suite test-parsers
  type: exitcode-stdio-1.0
  Main-Is: Main.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  Hs-source-dirs: test
  If flag(buildTests)
    Build-Depends:
      modelicaparser,
      base,
      containers,
      ansi-terminal,
      QuickCheck,
      parsec
  Else
    Buildable: False
  Other-Modules:
    Language.Modelica.Test.Basic
    Language.Modelica.Test.ClassDefinition
    Language.Modelica.Test.ComponentClause
    Language.Modelica.Test.Equation
    Language.Modelica.Test.Expression
    Language.Modelica.Test.Lexer
    Language.Modelica.Test.Modification
    Language.Modelica.Test.Programme
    Language.Modelica.Test.Utility

Test-Suite test-real-code
  type: exitcode-stdio-1.0
  Main-Is: Main2.hs
  GHC-Options: -Wall -fwarn-incomplete-uni-patterns -fwarn-tabs -fwarn-missing-import-lists
  Hs-source-dirs: test
  If flag(buildTests)
    Build-Depends:
      modelicaparser,
      base,
      containers,
      ansi-terminal,
      filepath,
      parsec
