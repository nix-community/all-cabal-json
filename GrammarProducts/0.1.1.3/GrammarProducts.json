{
  "description": {
    "spec-version": {
      "Right": ">=1.10.0"
    },
    "package": {
      "name": "GrammarProducts",
      "version": [
        0,
        1,
        1,
        3
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Christian Hoener zu Siederdissen, 2013-2017",
    "maintainer": "choener@bioinf.uni-leipzig.de",
    "author": "Christian Hoener zu Siederdissen, 2013-2017",
    "stability": "experimental",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.10.3"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.0.1"
      }
    ],
    "homepage": "https://github.com/choener/GrammarProducts",
    "pkg-url": "",
    "bug-reports": "https://github.com/choener/GrammarProducts/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/choener/GrammarProducts",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Grammar products and higher-dimensional grammars",
    "description": "<http://www.bioinf.uni-leipzig.de/Software/gADP/ generalized Algebraic Dynamic Programming>\n\nAn algebra of liner and context-free grammars.\n\nThis library provides the implementation of our theory of\nalgebraic operations over linear and context-free grammars.\nUsing algebraic operations, it is possible to construct complex\ndynamic programming algorithms from simpler \"atomic\" grammars.\n\nOur most important contribution is the definition of a product\nof grammars which naturally leads to alignment-like algorithms\non multiple tapes.\n\nAn efficient implementation of the resulting grammars is\npossible via the ADPfusion framework. The @FormalGrammars@\nlibrary provides the required \"Template Haskell\" machinery.\nGramarProducts can be integrated as a plugin into the existing\ntransformation from DSL to ADPfusion. Haskell users can just\nuse the QQ function provided in the .QQ module.\n\nAlternatively, the resulting grammars can also be\npretty-printed in various ways (LaTeX, ANSI, Haskell module\nwith signature and grammar).\n\nThe formal background can be found in two papers given in the\nREADME. The gADP homepage has further details, tutorials,\nexamples.\n",
    "category": "Formal Languages, Bioinformatics",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "changelog.md",
      "README.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "package-flags": [
    {
      "name": "examples",
      "description": "build the examples (only Needleman-Wunsch for now)",
      "default": false,
      "manual": true
    }
  ],
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "FormalLanguage",
          "GrammarProduct"
        ],
        [
          "FormalLanguage",
          "GrammarProduct",
          "Op"
        ],
        [
          "FormalLanguage",
          "GrammarProduct",
          "Op",
          "Add"
        ],
        [
          "FormalLanguage",
          "GrammarProduct",
          "Op",
          "Chomsky"
        ],
        [
          "FormalLanguage",
          "GrammarProduct",
          "Op",
          "Chomsky",
          "Proof"
        ],
        [
          "FormalLanguage",
          "GrammarProduct",
          "Op",
          "Common"
        ],
        [
          "FormalLanguage",
          "GrammarProduct",
          "Op",
          "Greibach"
        ],
        [
          "FormalLanguage",
          "GrammarProduct",
          "Op",
          "Greibach",
          "Proof"
        ],
        [
          "FormalLanguage",
          "GrammarProduct",
          "Op",
          "Linear"
        ],
        [
          "FormalLanguage",
          "GrammarProduct",
          "Op",
          "Power"
        ],
        [
          "FormalLanguage",
          "GrammarProduct",
          "Op",
          "Subtract"
        ],
        [
          "FormalLanguage",
          "GrammarProduct",
          "Parser"
        ],
        [
          "FormalLanguage",
          "GrammarProduct",
          "QQ"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "disable-extension": "MonomorphismRestriction"
          },
          {
            "enable-extension": "OverloadedStrings"
          },
          {
            "enable-extension": "ParallelListComp"
          },
          {
            "enable-extension": "PatternGuards"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "UnicodeSyntax"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-O2",
            "-funbox-strict-fields"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.7 && <5.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ansi-wl-pprint",
            "version-range": ">=0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": ">=0.10",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "data-default",
            "version-range": ">=0.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lens",
            "version-range": ">=4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "newtype",
            "version-range": ">=0.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "parsers",
            "version-range": ">=0.12",
            "library": [
              {}
            ]
          },
          {
            "package-name": "semigroups",
            "version-range": ">=0.15",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "trifecta",
            "version-range": ">=1.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ADPfusion",
            "version-range": "==0.5.2.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "FormalGrammars",
            "version-range": "==0.3.1.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "PrimitiveArray",
            "version-range": "==0.8.0.*",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.7 && <5.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ansi-wl-pprint",
        "version-range": ">=0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": ">=0.10",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "data-default",
        "version-range": ">=0.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lens",
        "version-range": ">=4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "newtype",
        "version-range": ">=0.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "parsers",
        "version-range": ">=0.12",
        "library": [
          {}
        ]
      },
      {
        "package-name": "semigroups",
        "version-range": ">=0.15",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "trifecta",
        "version-range": ">=1.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ADPfusion",
        "version-range": "==0.5.2.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "FormalGrammars",
        "version-range": "==0.3.1.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "PrimitiveArray",
        "version-range": "==0.8.0.*",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "executables": {
    "AlignGlobal": {
      "condTreeData": {
        "name": "AlignGlobal",
        "module-path": "AlignGlobal.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "src"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "BangPatterns"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "QuasiQuotes"
            },
            {
              "enable-extension": "TemplateHaskell"
            },
            {
              "enable-extension": "TypeFamilies"
            },
            {
              "enable-extension": "TypeOperators"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-O2",
              "-fcpr-off",
              "-funbox-strict-fields",
              "-funfolding-use-threshold1000",
              "-funfolding-keeness-factor1000"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [],
          "mixins": []
        }
      },
      "condTreeConstraints": [],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "variable": {
              "flag": "examples"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "AlignGlobal",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [
                  {
                    "package-name": "base",
                    "version-range": ">=4.7 && <5.0",
                    "library": [
                      {}
                    ]
                  },
                  {
                    "package-name": "containers",
                    "version-range": "-any",
                    "library": [
                      {}
                    ]
                  },
                  {
                    "package-name": "template-haskell",
                    "version-range": "-any",
                    "library": [
                      {}
                    ]
                  },
                  {
                    "package-name": "vector",
                    "version-range": ">=0.10",
                    "library": [
                      {}
                    ]
                  },
                  {
                    "package-name": "ADPfusion",
                    "version-range": "-any",
                    "library": [
                      {}
                    ]
                  },
                  {
                    "package-name": "FormalGrammars",
                    "version-range": ">=0.3",
                    "library": [
                      {}
                    ]
                  },
                  {
                    "package-name": "GrammarProducts",
                    "version-range": "-any",
                    "library": [
                      {}
                    ]
                  },
                  {
                    "package-name": "PrimitiveArray",
                    "version-range": "-any",
                    "library": [
                      {}
                    ]
                  }
                ],
                "mixins": []
              }
            },
            "condTreeConstraints": [
              {
                "package-name": "base",
                "version-range": ">=4.7 && <5.0",
                "library": [
                  {}
                ]
              },
              {
                "package-name": "containers",
                "version-range": "-any",
                "library": [
                  {}
                ]
              },
              {
                "package-name": "template-haskell",
                "version-range": "-any",
                "library": [
                  {}
                ]
              },
              {
                "package-name": "vector",
                "version-range": ">=0.10",
                "library": [
                  {}
                ]
              },
              {
                "package-name": "ADPfusion",
                "version-range": "-any",
                "library": [
                  {}
                ]
              },
              {
                "package-name": "FormalGrammars",
                "version-range": ">=0.3",
                "library": [
                  {}
                ]
              },
              {
                "package-name": "GrammarProducts",
                "version-range": "-any",
                "library": [
                  {}
                ]
              },
              {
                "package-name": "PrimitiveArray",
                "version-range": "-any",
                "library": [
                  {}
                ]
              }
            ],
            "condTreeComponents": []
          },
          "condBranchIfFalse": {
            "condTreeData": {
              "name": "AlignGlobal",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": false,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    }
  }
}
