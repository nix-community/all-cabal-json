Name:          hmatrix-static
Version:       0.2
Synopsis:      hmatrix with vector and matrix sizes encoded in types
License:       GPL
License-file:  LICENSE
Author:	       Reiner Pope
Maintainer:    Reiner Pope <reiner.pope@gmail.com>
Stability:     experimental
Homepage:      http://code.haskell.org/hmatrix-static/
Description:   A thin, lightweight wrapper over hmatrix to support
               static checking of matrix and vector sizes (for instance,
	       addition of different-sized vectors will be disallowed
	       at compile-time). 
	       .
	       Objects whose sizes are not statically known are given
	       the special size 'Unknown', which allows a syntactically
	       cheap way to step down to the statically unchecked system 
	       of hmatrix. This is cheap in comparison to representing
	       unknown sizes with exisential types, which forces pervasive
	       continuation passing style.
	       .	    
	       WARNING: when using the QuasiQuoting in this package, 
	       be aware of infix expressions. See the note in 
	       "Data.Packed.Static.Syntax" for details.
Category:      Math
Tested-with:   GHC == 6.10.1
Cabal-Version: >= 1.6
build-type:    Simple

Library
  Exposed-Modules:
       Data.Packed.Static,
       Data.Packed.Static.Vector,
       Data.Packed.Static.Matrix,
       Data.Packed.Static.ST,
       Data.Packed.Static.Syntax,
       Data.Packed.Static.Convert,
       Data.Packed.Static.Imports,
       Data.Packed.Static.Shapes,
       Numeric.LinearAlgebra.Static,
       Numeric.LinearAlgebra.Static.Algorithms
  Other-Modules:
       Data.Packed.Static.Internal,
       Data.Packed.Static.Internal.Vector,
       Data.Packed.Static.Internal.Matrix
  Extensions:
       ScopedTypeVariables, FlexibleContexts,
       FlexibleInstances, MultiParamTypeClasses,
       Rank2Types, TypeFamilies, TypeOperators,
       EmptyDataDecls, TemplateHaskell

  Build-Depends: base==4.*, hmatrix>=0.5&&<0.7, tfp==0.2.*, array==0.2.*, 
                 haskell-src-meta>=0.0.3.1&&<0.0.7, parsec==3.*, template-haskell
