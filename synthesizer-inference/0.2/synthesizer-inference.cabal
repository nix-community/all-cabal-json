Name:           synthesizer-inference
Version:        0.2
License:        GPL
License-File:   LICENSE
Author:         Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:     Henning Thielemann <haskell@henning-thielemann.de>
Homepage:       http://www.haskell.org/haskellwiki/Synthesizer
Category:       Sound
Synopsis:       Audio signal processing with dynamic physical dimensions
Description:
   High-level functions which use physical units.
   We try to abstract from the sample rate using various approaches.
   The modules are a bit outdated however,
   and I think that the package @synthesizer-dimensional@
   provides the better design.
Stability:      Experimental
Tested-With:    GHC==6.4.1, GHC==6.8.2
Cabal-Version:  >=1.6
Build-Type:     Simple

-- Extra-Source-Files:
--   Makefile

Flag splitBase
  description: Choose the new smaller, split-up base package.

Flag category
  description: Check whether Arrow class is split into Arrow and Category.

Flag optimizeAdvanced
  description: Enable advanced optimizations. They slow down compilation considerably.
  default:     True

Flag buildProfilers
  description: Build executables for investigating efficiency of code
  default:     False

Flag buildTests
  description: Build test suite
  default:     False

Flag buildExamples
  description: Build example executables
  default:     False


Source-Repository this
  Tag:         0.2
  Type:        darcs
  Location:    http://code.haskell.org/synthesizer/inference/

Source-Repository head
  Type:        darcs
  Location:    http://code.haskell.org/synthesizer/inference/

Library
  Build-Depends:
    synthesizer-core >=0.2 && <0.3,
    transformers >=0.0.1 && <0.2,
    event-list >=0.0.8 && <0.1,
    non-negative >=0.0.5 && <0.1,
    -- UniqueLogicNP is needed for InferenceFix
    UniqueLogicNP >= 0.2 && <0.3,
    numeric-prelude >=0.1.1 && <0.2,
    utility-ht >=0.0.5 && <0.1

  If flag(splitBase)
    Build-Depends:
      base >= 3 && <5,
      random >=1.0 && <2.0
  Else
    Build-Depends:
      base >= 1.0 && < 2,
      special-functors >= 1.0 && <1.1

  GHC-Options:    -Wall
  Hs-source-dirs: src
  Exposed-modules:
    Synthesizer.Physical
    Synthesizer.Physical.Cut
    Synthesizer.Physical.Control
    Synthesizer.Physical.File
    Synthesizer.Physical.Filter
    Synthesizer.Physical.Noise
    Synthesizer.Physical.Oscillator
    Synthesizer.Physical.Play
    Synthesizer.Physical.Signal
    Synthesizer.Physical.Displacement
    Synthesizer.Amplitude.Signal
    Synthesizer.Amplitude.Cut
    Synthesizer.Amplitude.Control
    Synthesizer.Amplitude.Filter
    Synthesizer.Amplitude.Displacement
    Synthesizer.SampleRateContext.Rate
    Synthesizer.SampleRateContext.Signal
    Synthesizer.SampleRateContext.Oscillator
    Synthesizer.SampleRateContext.Cut
    Synthesizer.SampleRateContext.Control
    Synthesizer.SampleRateContext.Filter
    Synthesizer.SampleRateContext.Displacement
    Synthesizer.SampleRateContext.Noise
    Synthesizer.SampleRateContext.Play
    Synthesizer.Inference.Fix
    Synthesizer.Inference.Fix.Cut
    Synthesizer.Inference.Fix.Filter
    Synthesizer.Inference.Func.Cut
    Synthesizer.Inference.Func.Signal
    Synthesizer.Inference.Monad.File
    Synthesizer.Inference.Monad.Play
    Synthesizer.Inference.Monad.Signal
    Synthesizer.Inference.Monad.Signal.Control
    Synthesizer.Inference.Monad.Signal.Cut
    Synthesizer.Inference.Monad.Signal.Filter
    Synthesizer.Inference.Monad.Signal.Noise
    Synthesizer.Inference.Monad.Signal.Oscillator
    Synthesizer.Inference.Monad.Signal.Displacement
    Synthesizer.Inference.Monad.SignalSeq
    Synthesizer.Inference.Monad.SignalSeq.Control
    Synthesizer.Inference.Monad.SignalSeq.Cut
    Synthesizer.Inference.Monad.SignalSeq.Filter
    Synthesizer.Inference.Monad.SignalSeq.Noise
    Synthesizer.Inference.Monad.SignalSeq.Oscillator
    Synthesizer.Inference.Monad.SignalSeq.Displacement
    Synthesizer.Inference.Reader.Play
    Synthesizer.Inference.Reader.Process
    Synthesizer.Inference.Reader.Signal
    Synthesizer.Inference.Reader.Control
    Synthesizer.Inference.Reader.Cut
    Synthesizer.Inference.Reader.Filter
    Synthesizer.Inference.Reader.Noise
    Synthesizer.Inference.Reader.Oscillator

--  Other-Modules:


Executable alinea
  If !flag(buildExamples)
    Buildable: False
  GHC-Options: -Wall
  Hs-Source-Dirs: alinea, src
  Main-Is: Alinea.hs
