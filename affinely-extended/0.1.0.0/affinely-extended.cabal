name:                 affinely-extended
version:              0.1.0.0
synopsis:             
description:
  A simply way to extend numerical types to add infinity.
  .
  Includes 4 data types:
  .
  1. Both infinities: GADT
  .
  2. Positive infinity only: GADT
  .
  3. Both infinities, represented as upper and lower bound of type (well almost)
  .
  4. Positive infinity only, represented as upper bound of type
  .
  There's also rewrite rules in an attempt to make this all work as efficiently as possible (although unbenchmarked and untested).
  .
license: MIT
license-file: LICENSE
homepage:             https://github.com/clintonmead/affinely-extended
author:               Clinton Mead
maintainer:           clintonmead@gmail.com
category:             Data
copyright:            Clinton Mead (2017)
build-type:           Simple
cabal-version:        >=1.10
tested-with: GHC == 8.0.2
bug-reports: https://github.com/clintonmead/affinely-extended/issues

source-repository head
  type: git
  location: https://github.com/clintonmead/affinely-extended.git

library
  exposed-modules: Data.AffinelyExtend
  build-depends:        base >= 4.7 && < 5
  hs-source-dirs:       src
  default-language:     Haskell2010
