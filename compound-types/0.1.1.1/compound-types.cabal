name:
  compound-types
version:
  0.1.1.1
category:
  Data, Types, Type System
synopsis:
  Sum and Product types and such
description:
  This package provides scalable composite types with neat syntax.
  Additionally it provides the strict data-structures.
homepage:
  https://github.com/nikita-volkov/compound-types 
bug-reports:
  https://github.com/nikita-volkov/compound-types/issues 
author:
  Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:
  Nikita Volkov <nikita.y.volkov@mail.ru>
copyright:
  (c) 2016, Nikita Volkov
license:
  MIT
license-file:
  LICENSE
build-type:
  Simple
cabal-version:
  >=1.10


source-repository head
  type:
    git
  location:
    git://github.com/nikita-volkov/compound-types.git


library
  hs-source-dirs:
    library
  ghc-options:
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  other-modules:
    CompoundTypes.Private.Prelude
    CompoundTypes.Private.Strict.Sum
    CompoundTypes.Private.Strict.Product
    CompoundTypes.Private.Lazy.Sum
    CompoundTypes.Private.Lazy.Product
  exposed-modules:
    CompoundTypes.Strict
    CompoundTypes.Lazy
  build-depends:
    -- general:
    base-prelude < 2,
    base >= 4.7 && < 4.10


-- Not a benchmark really.
-- Just a work-around for Cabal issues.
benchmark demo
  type:
    exitcode-stdio-1.0
  hs-source-dirs:
    demo
  main-is:
    Main.hs
  ghc-options:
    -threaded
    "-with-rtsopts=-N"
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFoldable, DeriveFunctor, DeriveGeneric, DeriveTraversable, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  build-depends:
    compound-types,
    rebase >= 1 && < 2
