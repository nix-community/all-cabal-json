name:                fst
version:             0.9.0.1
synopsis:            Finite state transducers
description:         Fst is an application for construction and running of
                     finite state transducers. The application was written
                     purely in Haskell, and is intended to be a tool for the
                     Haskell programmer, especially for ones that develop language applications.
category:            Compilers/Interpreters
license:             BSD3
license-file:        LICENSE
author:              Markus Forsberg
homepage:            http://www.cse.chalmers.se/alumni/markus/fstStudio/
build-type:          Simple
Cabal-Version:       >= 1.2
tested-with:         GHC==6.8.2

data-files:          doc/fstMan0.9.ps, doc/Interface0.9.ps

Library
        Build-Depends:       base>=3 && <5, array
        exposed-modules:     FST.Alex, FST.Arguments, FST.Automaton, FST.AutomatonInterface, FST.AutomatonTypes,
                             FST.Complete, FST.Deterministic, FST.DeterministicT, FST.EpsilonFreeT, FST.FileImport,
                             FST.GetOpt, FST.Info, FST.LBFA, FST.LBFT, FST.Lexer, FST.MinimalBrzozowski, FST.MinimalTBrzozowski,
                             FST.NReg, FST.Parse, FST.RegTypes, FST.Reversal, FST.ReversalT, FST.RRegTypes, FST.RunTransducer,
                             FST.StateMonad, FST.Transducer, FST.TransducerInterface, FST.TransducerTypes, FST.Utils
        ghc-options:         -O2
        ghc-prof-options:    -prof -auto-all

Executable fst
        main-is:             FST/Main.hs
        ghc-options:         -O2
        ghc-prof-options:    -prof -auto-all

