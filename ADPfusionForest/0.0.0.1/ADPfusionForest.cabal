name:           ADPfusionForest
version:        0.0.0.1
author:         Christian Hoener zu Siederdissen, Sarah Berkemer, 2016-2017
copyright:      Christian Hoener zu Siederdissen, 2016-2017
homepage:       https://github.com/choener/ADPfusionForest
bug-reports:    https://github.com/choener/ADPfusionForest/issues
maintainer:     choener@bioinf.uni-leipzig.de
category:       Formal Languages, Bioinformatics
license:        BSD3
license-file:   LICENSE
build-type:     Simple
stability:      experimental
cabal-version:  >= 1.10.0
tested-with:    GHC == 8.0.2
synopsis:       Dynamic programming on tree and forest structures
description:
                ADPfusion for formal languages on tree and forest structures.
                This library connects
                <http://hackage.haskell.org/package/ForestStructures @ForestStructures@>,
                a library which defines efficient, tree-like structures and
                <http://hackage.haskell.org/package/ADPfusion @ADPfusion@>.
                The result is the ability to easily write formal grammars which
                act on input trees (as compared to the more common input
                strings).
                .
                Build this library with GHC-8.0.2



Extra-Source-Files:
  changelog.md
  README.md
  stack.yaml
  examples/t1.nwk
  examples/t2.nwk



flag examples
  description: build the examples
  default:     False
  manual:      True



library
  build-depends: base                   >= 4.7      &&  < 5.0
               , containers             >= 0.5
               , fgl                    >= 5.5
               , strict                 >= 0.3
               , text                   >= 1.2
               , unordered-containers   >= 0.2
               , vector                 >= 0.10
               -- >= 3.4 for Hashable (Vector a)
               , vector-instances       >= 3.4
               , vector-th-unbox        >= 0.2
               , vector-algorithms      >= 0.7
               --
               , ADPfusion              == 0.5.2.*
               , DPutils                == 0.0.1.*
               , ForestStructures       == 0.0.0.*
               , GrammarProducts        == 0.1.*
               , PrimitiveArray         == 0.8.0.*

  exposed-modules:
    ADP.Fusion.Forest.Align.PRL
    ADP.Fusion.Forest.Align.RL
    ADP.Fusion.Forest.Edit.LL
    -- done
    ADP.Fusion.Core.ForestEdit.LeftLinear
    ADP.Fusion.SynVar.Indices.ForestEdit.LeftLinear
    ADP.Fusion.Term.Deletion.ForestEdit.LeftLinear
    ADP.Fusion.Term.Epsilon.ForestEdit.LeftLinear
    ADP.Fusion.Term.Node.ForestEdit.LeftLinear
    ADP.Fusion.Term.Node.Type
    -- wip
    ADP.Fusion.Core.ForestAlign.PermuteRightLinear
    ADP.Fusion.Term.Epsilon.ForestAlign.PermuteRightLinear
    ADP.Fusion.Term.Node.ForestAlign.PermuteRightLinear
    -- current
    ADP.Fusion.Core.ForestAlign.RightLinear
    ADP.Fusion.Term.Epsilon.ForestAlign.RightLinear
    ADP.Fusion.Term.Deletion.ForestAlign.RightLinear
    ADP.Fusion.Term.Node.ForestAlign.RightLinear
    ADP.Fusion.SynVar.Indices.ForestAlign.RightLinear
  default-language:
    Haskell2010
  default-extensions: AllowAmbiguousTypes
                    , BangPatterns
                    , DataKinds
                    , FlexibleContexts
                    , FlexibleInstances
                    , GADTs
                    , KindSignatures
                    , MultiParamTypeClasses
                    , OverloadedStrings
                    , RankNTypes
                    , ScopedTypeVariables
                    , StandaloneDeriving
                    , TypeFamilies
                    , TypeOperators
                    , UndecidableInstances
  ghc-options:
    -O2
    -funbox-strict-fields



executable AlignNewickTrees
  if flag(examples)
    buildable:
      True
    build-depends: base
                 , cmdargs                >= 0.10
                 , containers
                 , filepath
                 , log-domain             >= 0.10
                 , text
                 , vector
                 --
                 , ADPfusion
                 , ADPfusionForest
                 , BiobaseNewick          >= 0.0.0.1
                 , ForestStructures
                 , FormalGrammars         >= 0.3
                 , PrimitiveArray
                 , PrimitiveArray-Pretty  >= 0.0
  else
    buildable:
      False
  hs-source-dirs:
    src
  main-is:
    AlignNewickTrees.hs
  default-language:
    Haskell2010
  default-extensions: BangPatterns
                    , DataKinds
                    , DeriveDataTypeable
                    , FlexibleContexts
                    , GADTs
                    , MultiParamTypeClasses
                    , OverloadedStrings
                    , QuasiQuotes
                    , RecordWildCards
                    , TemplateHaskell
                    , TypeFamilies
                    , TypeOperators
  ghc-options:
    -O2
    -funbox-strict-fields



executable AffineAlignNewickTreesSmall
  if flag(examples)
    buildable:
      True
    build-depends: base
                 , cmdargs                >= 0.10
                 , containers
                 , filepath
                 , log-domain             >= 0.10
                 , text
                 , vector
                 --
                 , ADPfusion
                 , ADPfusionForest
                 , BiobaseNewick          >= 0.0.0.1
                 , ForestStructures
                 , FormalGrammars         >= 0.3
                 , PrimitiveArray
                 , PrimitiveArray-Pretty  >= 0.0
  else
    buildable:
      False
  hs-source-dirs:
    src
  main-is:
    AffineAlignNewickTreesSmall.hs
  default-language:
    Haskell2010
  default-extensions: BangPatterns
                    , DataKinds
                    , DeriveDataTypeable
                    , FlexibleContexts
                    , GADTs
                    , MultiParamTypeClasses
                    , OverloadedStrings
                    , QuasiQuotes
                    , RecordWildCards
                    , TemplateHaskell
                    , TypeFamilies
                    , TypeOperators
  ghc-options:
    -O2
    -funbox-strict-fields


-- AffineAlignNewickTrees too  big, use AffineAlignNewickTreesSmall

-- executable EditNewickTrees
--   if flag(examples)
--     buildable:
--       True
--     build-depends: base
--                  , cmdargs                >= 0.10
--                  , containers
--                  , filepath
--                  , log-domain             >= 0.10
--                  , text
--                  , vector
--                  --
--                  , ADPfusion
--                  , ADPfusionForest
--                  , BiobaseNewick          >= 0.0.0.1
--                  , ForestStructures
--                  , FormalGrammars         >= 0.3
--                  , PrimitiveArray
--                  , PrimitiveArray-Pretty  >= 0.0
--   else
--     buildable:
--       False
--   hs-source-dirs:
--     src
--   main-is:
--     EditNewickTrees.hs
--   default-language:
--     Haskell2010
--   default-extensions: BangPatterns
--                     , DataKinds
--                     , DeriveDataTypeable
--                     , FlexibleContexts
--                     , GADTs
--                     , MultiParamTypeClasses
--                     , OverloadedStrings
--                     , QuasiQuotes
--                     , RecordWildCards
--                     , TemplateHaskell
--                     , TypeFamilies
--                     , TypeOperators
--   ghc-options:
--     -O2
--     -funbox-strict-fields

-- executable AffineEditNewickTrees
--   if flag(examples)
--     buildable:
--       True
--     build-depends: base
--                  , cmdargs                >= 0.10
--                  , containers
--                  , filepath
--                  , log-domain             >= 0.10
--                  , text
--                  , vector
--                  --
--                  , ADPfusion
--                  , ADPfusionForest
--                  , BiobaseNewick          >= 0.0.0.1
--                  , ForestStructures
--                  , FormalGrammars         >= 0.3
--                  , PrimitiveArray
--                  , PrimitiveArray-Pretty  >= 0.0
--   else
--     buildable:
--       False
--   hs-source-dirs:
--     src
--   main-is:
--     AffineEditNewickTrees.hs
--   default-language:
--     Haskell2010
--   default-extensions: BangPatterns
--                     , DataKinds
--                     , DeriveDataTypeable
--                     , FlexibleContexts
--                     , GADTs
--                     , MultiParamTypeClasses
--                     , OverloadedStrings
--                     , QuasiQuotes
--                     , RecordWildCards
--                     , TemplateHaskell
--                     , TypeFamilies
--                     , TypeOperators
--   ghc-options:
--     -O2
--     -funbox-strict-fields



-- executable EditNew
--   if flag(examples)
--     buildable:
--       True
--     build-depends: base
--                  , cmdargs                >= 0.10
--                  , containers
--                  , filepath
--                  , log-domain             >= 0.10
--                  , text
--                  , vector
--                  --
--                  , ADPfusion
--                  , ADPfusionForest
--                  , BiobaseNewick          >= 0.0.0.1
--                  , ForestStructures
--                  , FormalGrammars         >= 0.3
--                  , PrimitiveArray
--                  , PrimitiveArray-Pretty  >= 0.0
--   else
--     buildable:
--       False
--   hs-source-dirs:
--     src
--   main-is:
--     EditNew.hs
--   default-language:
--     Haskell2010
--   default-extensions: BangPatterns
--                     , DataKinds
--                     , DeriveDataTypeable
--                     , FlexibleContexts
--                     , GADTs
--                     , MultiParamTypeClasses
--                     , OverloadedStrings
--                     , QuasiQuotes
--                     , RecordWildCards
--                     , TemplateHaskell
--                     , TypeFamilies
--                     , TypeOperators
--   ghc-options:
--     -O2
--     -funbox-strict-fields



-- executable SingleEdit
--   if flag(examples)
--     buildable:
--       True
--     build-depends: base
--                  , cmdargs                >= 0.10
--                  , containers
--                  , filepath
--                  , log-domain             >= 0.10
--                  , text
--                  , vector
--                  --
--                  , ADPfusion
--                  , ADPfusionForest
--                  , BiobaseNewick          >= 0.0.0.1
--                  , ForestStructures
--                  , FormalGrammars         >= 0.3
--                  , PrimitiveArray
--                  , PrimitiveArray-Pretty  >= 0.0
--   else
--     buildable:
--       False
--   hs-source-dirs:
--     src
--   main-is:
--     SingleEdit.hs
--   default-language:
--     Haskell2010
--   default-extensions: BangPatterns
--                     , DataKinds
--                     , DeriveDataTypeable
--                     , FlexibleContexts
--                     , GADTs
--                     , MultiParamTypeClasses
--                     , OverloadedStrings
--                     , QuasiQuotes
--                     , RecordWildCards
--                     , TemplateHaskell
--                     , TypeFamilies
--                     , TypeOperators
--   ghc-options:
--     -O2
--     -funbox-strict-fields



test-suite properties
  type:
    exitcode-stdio-1.0
  main-is:
    properties.hs
  ghc-options:
    -threaded -rtsopts -with-rtsopts=-N -O2 -funbox-strict-fields
  hs-source-dirs:
    tests
  default-language:
    Haskell2010
  default-extensions: BangPatterns
  build-depends: base
               , QuickCheck
               , tasty              >= 0.11
               , tasty-quickcheck   >= 0.8
               , tasty-th           >= 0.1
               --
               , ADPfusionForest



benchmark benchmark
  build-depends:  base
               ,  criterion   >=  1.0.2
               ,  ForestStructures
  default-language:
    Haskell2010
  hs-source-dirs:
    tests
  main-is:
    benchmark.hs
  type:
    exitcode-stdio-1.0
  ghc-options:
    -O2



source-repository head
  type: git
  location: git://github.com/choener/ADPfusionForest

