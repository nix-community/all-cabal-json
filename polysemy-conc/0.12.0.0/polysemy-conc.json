{
  "description": {
    "spec-version": {
      "Left": [
        2,
        2
      ]
    },
    "package": {
      "name": "polysemy-conc",
      "version": [
        0,
        12,
        0,
        0
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "BSD_2_Clause_Patent"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "2022 Torsten Schmits",
    "maintainer": "hackage@tryp.io",
    "author": "Torsten Schmits",
    "stability": "",
    "tested-with": [],
    "homepage": "https://git.tryp.io/tek/polysemy-conc",
    "pkg-url": "",
    "bug-reports": "https://github.com/tek/polysemy-conc/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://git.tryp.io/tek/polysemy-conc",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Polysemy effects for concurrency",
    "description": "See https://hackage.haskell.org/package/polysemy-conc/docs/Polysemy-Conc.html",
    "category": "Concurrency",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "changelog.md",
      "readme.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Polysemy",
          "Conc"
        ],
        [
          "Polysemy",
          "Conc",
          "Async"
        ],
        [
          "Polysemy",
          "Conc",
          "AtomicState"
        ],
        [
          "Polysemy",
          "Conc",
          "Data",
          "QueueResult"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "Critical"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "Events"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "Gate"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "Interrupt"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "Lock"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "Mask"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "Monitor"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "Queue"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "Race"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "Scoped"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "Semaphore"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "Sync"
        ],
        [
          "Polysemy",
          "Conc",
          "Effect",
          "SyncRead"
        ],
        [
          "Polysemy",
          "Conc",
          "Events"
        ],
        [
          "Polysemy",
          "Conc",
          "Gate"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Critical"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Events"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Gate"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Interrupt"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Lock"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Mask"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Monitor"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Queue",
          "Pure"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Queue",
          "TB"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Queue",
          "TBM"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Race"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Scoped"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Semaphore"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Stack"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "Sync"
        ],
        [
          "Polysemy",
          "Conc",
          "Interpreter",
          "SyncRead"
        ],
        [
          "Polysemy",
          "Conc",
          "Monitor"
        ],
        [
          "Polysemy",
          "Conc",
          "Queue"
        ],
        [
          "Polysemy",
          "Conc",
          "Queue",
          "Result"
        ],
        [
          "Polysemy",
          "Conc",
          "Queue",
          "Timeout"
        ],
        [
          "Polysemy",
          "Conc",
          "Race"
        ],
        [
          "Polysemy",
          "Conc",
          "Retry"
        ],
        [
          "Polysemy",
          "Conc",
          "Semaphore"
        ],
        [
          "Polysemy",
          "Conc",
          "Sync"
        ],
        [
          "Polysemy",
          "Conc",
          "SyncRead"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "lib"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "AllowAmbiguousTypes"
          },
          {
            "enable-extension": "ApplicativeDo"
          },
          {
            "enable-extension": "BangPatterns"
          },
          {
            "enable-extension": "BinaryLiterals"
          },
          {
            "enable-extension": "BlockArguments"
          },
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "DeriveAnyClass"
          },
          {
            "enable-extension": "DeriveDataTypeable"
          },
          {
            "enable-extension": "DeriveFoldable"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "DeriveGeneric"
          },
          {
            "enable-extension": "DeriveLift"
          },
          {
            "enable-extension": "DeriveTraversable"
          },
          {
            "enable-extension": "DerivingStrategies"
          },
          {
            "enable-extension": "DerivingVia"
          },
          {
            "enable-extension": "DisambiguateRecordFields"
          },
          {
            "enable-extension": "DoAndIfThenElse"
          },
          {
            "enable-extension": "DuplicateRecordFields"
          },
          {
            "enable-extension": "EmptyCase"
          },
          {
            "enable-extension": "EmptyDataDecls"
          },
          {
            "enable-extension": "ExistentialQuantification"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "InstanceSigs"
          },
          {
            "enable-extension": "KindSignatures"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "LiberalTypeSynonyms"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "MultiWayIf"
          },
          {
            "enable-extension": "NamedFieldPuns"
          },
          {
            "enable-extension": "OverloadedLabels"
          },
          {
            "enable-extension": "OverloadedLists"
          },
          {
            "enable-extension": "OverloadedStrings"
          },
          {
            "enable-extension": "PackageImports"
          },
          {
            "enable-extension": "PartialTypeSignatures"
          },
          {
            "enable-extension": "PatternGuards"
          },
          {
            "enable-extension": "PatternSynonyms"
          },
          {
            "enable-extension": "PolyKinds"
          },
          {
            "enable-extension": "QuantifiedConstraints"
          },
          {
            "enable-extension": "QuasiQuotes"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "RecordWildCards"
          },
          {
            "enable-extension": "RecursiveDo"
          },
          {
            "enable-extension": "RoleAnnotations"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "TupleSections"
          },
          {
            "enable-extension": "TypeApplications"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeFamilyDependencies"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "TypeSynonymInstances"
          },
          {
            "enable-extension": "UndecidableInstances"
          },
          {
            "enable-extension": "UnicodeSyntax"
          },
          {
            "enable-extension": "ViewPatterns"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-Wredundant-constraints",
            "-Wincomplete-uni-patterns",
            "-Wmissing-deriving-strategies",
            "-Widentities",
            "-Wunused-packages"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "async",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": ">=4.12 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "incipit-core",
            "version-range": ">=0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "polysemy",
            "version-range": "==1.9.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "polysemy-resume",
            "version-range": "==0.7.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "polysemy-time",
            "version-range": "==0.6.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "stm",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "stm-chans",
            "version-range": ">=3 && <3.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "torsor",
            "version-range": "==0.1.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "unagi-chan",
            "version-range": "==0.4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "unix",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": [
          {
            "package-name": "base",
            "include-renaming": {
              "includeProvidesRn": {
                "name": [
                  [
                    "Prelude"
                  ]
                ]
              },
              "includeRequiresRn": {}
            }
          },
          {
            "package-name": "incipit-core",
            "include-renaming": {
              "includeProvidesRn": {
                "name": [
                  [
                    [
                      "IncipitCore"
                    ],
                    [
                      "Prelude"
                    ]
                  ]
                ]
              },
              "includeRequiresRn": {}
            }
          },
          {
            "package-name": "incipit-core",
            "include-renaming": {
              "includeProvidesRn": {
                "name": [
                  [
                    "IncipitCore"
                  ]
                ]
              },
              "includeRequiresRn": {}
            }
          }
        ]
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "async",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": ">=4.12 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "incipit-core",
        "version-range": ">=0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "polysemy",
        "version-range": "==1.9.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "polysemy-resume",
        "version-range": "==0.7.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "polysemy-time",
        "version-range": "==0.6.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "stm",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "stm-chans",
        "version-range": ">=3 && <3.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "torsor",
        "version-range": "==0.1.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "unagi-chan",
        "version-range": "==0.4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "unix",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "polysemy-conc-unit": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Main.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [
            [
              "Polysemy",
              "Conc",
              "Test",
              "EventsTest"
            ],
            [
              "Polysemy",
              "Conc",
              "Test",
              "InterruptTest"
            ],
            [
              "Polysemy",
              "Conc",
              "Test",
              "LockTest"
            ],
            [
              "Polysemy",
              "Conc",
              "Test",
              "MaskTest"
            ],
            [
              "Polysemy",
              "Conc",
              "Test",
              "MonitorTest"
            ],
            [
              "Polysemy",
              "Conc",
              "Test",
              "QueueTest"
            ],
            [
              "Polysemy",
              "Conc",
              "Test",
              "SyncTest"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "AllowAmbiguousTypes"
            },
            {
              "enable-extension": "ApplicativeDo"
            },
            {
              "enable-extension": "BangPatterns"
            },
            {
              "enable-extension": "BinaryLiterals"
            },
            {
              "enable-extension": "BlockArguments"
            },
            {
              "enable-extension": "ConstraintKinds"
            },
            {
              "enable-extension": "DataKinds"
            },
            {
              "enable-extension": "DefaultSignatures"
            },
            {
              "enable-extension": "DeriveAnyClass"
            },
            {
              "enable-extension": "DeriveDataTypeable"
            },
            {
              "enable-extension": "DeriveFoldable"
            },
            {
              "enable-extension": "DeriveFunctor"
            },
            {
              "enable-extension": "DeriveGeneric"
            },
            {
              "enable-extension": "DeriveLift"
            },
            {
              "enable-extension": "DeriveTraversable"
            },
            {
              "enable-extension": "DerivingStrategies"
            },
            {
              "enable-extension": "DerivingVia"
            },
            {
              "enable-extension": "DisambiguateRecordFields"
            },
            {
              "enable-extension": "DoAndIfThenElse"
            },
            {
              "enable-extension": "DuplicateRecordFields"
            },
            {
              "enable-extension": "EmptyCase"
            },
            {
              "enable-extension": "EmptyDataDecls"
            },
            {
              "enable-extension": "ExistentialQuantification"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "FunctionalDependencies"
            },
            {
              "enable-extension": "GADTs"
            },
            {
              "enable-extension": "GeneralizedNewtypeDeriving"
            },
            {
              "enable-extension": "InstanceSigs"
            },
            {
              "enable-extension": "KindSignatures"
            },
            {
              "enable-extension": "LambdaCase"
            },
            {
              "enable-extension": "LiberalTypeSynonyms"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "MultiWayIf"
            },
            {
              "enable-extension": "NamedFieldPuns"
            },
            {
              "enable-extension": "OverloadedLabels"
            },
            {
              "enable-extension": "OverloadedLists"
            },
            {
              "enable-extension": "OverloadedStrings"
            },
            {
              "enable-extension": "PackageImports"
            },
            {
              "enable-extension": "PartialTypeSignatures"
            },
            {
              "enable-extension": "PatternGuards"
            },
            {
              "enable-extension": "PatternSynonyms"
            },
            {
              "enable-extension": "PolyKinds"
            },
            {
              "enable-extension": "QuantifiedConstraints"
            },
            {
              "enable-extension": "QuasiQuotes"
            },
            {
              "enable-extension": "RankNTypes"
            },
            {
              "enable-extension": "RecordWildCards"
            },
            {
              "enable-extension": "RecursiveDo"
            },
            {
              "enable-extension": "RoleAnnotations"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "StandaloneDeriving"
            },
            {
              "enable-extension": "TemplateHaskell"
            },
            {
              "enable-extension": "TupleSections"
            },
            {
              "enable-extension": "TypeApplications"
            },
            {
              "enable-extension": "TypeFamilies"
            },
            {
              "enable-extension": "TypeFamilyDependencies"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "TypeSynonymInstances"
            },
            {
              "enable-extension": "UndecidableInstances"
            },
            {
              "enable-extension": "UnicodeSyntax"
            },
            {
              "enable-extension": "ViewPatterns"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-Wredundant-constraints",
              "-Wincomplete-uni-patterns",
              "-Wmissing-deriving-strategies",
              "-Widentities",
              "-Wunused-packages",
              "-threaded",
              "-rtsopts",
              "-with-rtsopts=-N"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "async",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.12 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "hedgehog",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "incipit-core",
              "version-range": ">=0.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "polysemy",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "polysemy-conc",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "polysemy-plugin",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "polysemy-resume",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "polysemy-test",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "polysemy-time",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "stm",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-hedgehog",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "time",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "unix",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": [
            {
              "package-name": "base",
              "include-renaming": {
                "includeProvidesRn": {
                  "name": [
                    [
                      "Prelude"
                    ]
                  ]
                },
                "includeRequiresRn": {}
              }
            },
            {
              "package-name": "incipit-core",
              "include-renaming": {
                "includeProvidesRn": {
                  "name": [
                    [
                      [
                        "IncipitCore"
                      ],
                      [
                        "Prelude"
                      ]
                    ]
                  ]
                },
                "includeRequiresRn": {}
              }
            },
            {
              "package-name": "incipit-core",
              "include-renaming": {
                "includeProvidesRn": {
                  "name": [
                    [
                      "IncipitCore"
                    ]
                  ]
                },
                "includeRequiresRn": {}
              }
            }
          ]
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "async",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.12 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "hedgehog",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "incipit-core",
          "version-range": ">=0.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "polysemy",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "polysemy-conc",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "polysemy-plugin",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "polysemy-resume",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "polysemy-test",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "polysemy-time",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "stm",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-hedgehog",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "time",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "unix",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
