name:            punycode
version:         2.0
license:         BSD3
license-file:    LICENSE
author:          Myles C. Maxfield <myles.maxfield@gmail.com>
maintainer:      Myles C. Maxfield <myles.maxfield@gmail.com>
synopsis:        Encode unicode strings to ascii forms according to RFC 3492
description:     Encode unicode strings to ascii forms according to RFC 3492. It is written in pure Haskell, as opposed to gnuidn's Data.Text.IDN.Punycode. Please note that Data.Encoding.BootString from the 'encoding' package also contains an implementation of the Punycode algorithm.
category:        Text, Web
stability:       Experimental
cabal-version:   >= 1.8
build-type:      Simple
homepage:        https://github.com/litherum/punycode

library
    build-depends: base         >= 4       && < 5
                 , bytestring
                 , cereal
                 , mtl
                 , text
    exposed-modules: Data.Text.Punycode
    other-modules:   Data.Text.Punycode.Encode
                   , Data.Text.Punycode.Decode
                   , Data.Text.Punycode.Shared
    ghc-options:     -Wall

Test-Suite test-punycode
    type: exitcode-stdio-1.0
    main-is: Test/Main.hs
    build-depends: base >= 4 && < 5
                 , bytestring
                 , cereal
                 , mtl
                 , text
                 , HUnit
                 , QuickCheck
                 , encoding

source-repository head
  type:     git
  location: git://github.com/litherum/punycode.git
