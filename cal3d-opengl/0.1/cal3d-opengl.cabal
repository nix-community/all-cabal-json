name: cal3d-opengl
version: 0.1
cabal-version: >= 1.6
build-type: Simple
-- The C++ Cal3D library is LGPLed, so that makes sense here too
license: LGPL
license-file: LICENSE
author: Gregory D. Weber
maintainer: let at = "@" in concat ["gdweber", at, "iue.edu"]
stability: experimental
homepage: http://haskell.org/haskellwiki/Cal3d_animation
category: Graphics, Animation
tested-with: GHC == 6.10.1
synopsis: OpenGL rendering for the Cal3D animation library
description: 
  Connects the Cal3D animation library to OpenGL.
  Cal3D is a skeletal-based animation library written in C++.
  By itself, it does not rendering, but provides hooks 
  so that any graphics API can render the model.
  This specializes the hooks for OpenGL.
  See also cal3d, cal3d-examples.

-- extra-source-files: *list-of-files* (not including directories)

library
  -- build-depends: needs OpenGL for colors, etc.,
  -- but how to avoid this?
  build-depends: 
    base >= 4.0.0.0 && < 5,
    cal3d >= 0.1 && < 0.2,
    OpenGL >= 2.2.3 && < 3
  exposed-modules: Graphics.Animation.Cal3D.OpenGL
  exposed: True
  other-modules:
  -- c-sources: ./c++/cal3d_c.cc
  -- Is there a better way to require compilation by a C++ compiler?
  -- e.g. for another OS (Windows?) and/or another Haskell system (Hugs, etc.)
  -- Maybe this isn't necessary?
  -- ghc-options: -pgmc g++
  -- ?? hugs-options:
  -- ?? nhc98-options: 

  extensions: ForeignFunctionInterface
  -- how to make the includes field more general?
  -- includes: cal3d/cal3d.h cal3d_c.h
  -- how to make the include-dirs field more general?
  -- include-dirs: ./c++
  -- For running hsc2hs separately, you need also -I /usr/lib/ghc-6.10.1/include
  -- how to make SDL, etc., only needed for the SDL part of this?
  -- extra-libraries: cal3d



