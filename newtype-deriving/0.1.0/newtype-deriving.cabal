name:
  newtype-deriving
version:
  0.1.0
synopsis:
  Instance derivers for newtype wrappers
description:
  Template Haskell based derivers for typical newtype instances, 
  which the @GeneralizedNewtypeDeriving@ extension refuses to handle.
  .
  Amongst others provides support for the \"monad-control\" classes:
  .
  * @Control.Monad.Trans.Control.'Control.Monad.Trans.Control.MonadTransControl'@
  .
  * @Control.Monad.Trans.Control.'Control.Monad.Trans.Control.MonadBaseControl'@
category:
  Control, Template Haskell
homepage:
  https://github.com/nikita-volkov/newtype-deriving 
bug-reports:
  https://github.com/nikita-volkov/newtype-deriving/issues 
author:
  Nikita Volkov <nikita.y.volkov@mail.ru>
maintainer:
  Nikita Volkov <nikita.y.volkov@mail.ru>
copyright:
  (c) 2014, Nikita Volkov
license:
  MIT
license-file:
  LICENSE
build-type:
  Simple
cabal-version:
  >=1.10


source-repository head
  type:
    git
  location:
    git://github.com/nikita-volkov/newtype-deriving.git


library
  hs-source-dirs:
    library
  ghc-options:
    -funbox-strict-fields
  default-extensions:
    Arrows, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures, DeriveDataTypeable, DeriveFunctor, DeriveGeneric, EmptyDataDecls, FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs, GeneralizedNewtypeDeriving, ImpredicativeTypes, LambdaCase, LiberalTypeSynonyms, MagicHash, MultiParamTypeClasses, MultiWayIf, NoImplicitPrelude, NoMonomorphismRestriction, OverloadedStrings, PatternGuards, ParallelListComp, QuasiQuotes, RankNTypes, RecordWildCards, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell, TupleSections, TypeFamilies, TypeOperators, UnboxedTuples
  default-language:
    Haskell2010
  other-modules:
    NewtypeDeriving.Reification
    NewtypeDeriving.Rendering
    NewtypeDeriving.TH
  exposed-modules:
    NewtypeDeriving
  build-depends:
    template-haskell >= 2.7 && < 2.10,
    monad-control >= 1.0 && < 1.1,
    transformers-base == 0.4.*,
    transformers >= 0.3 && < 0.5,
    base-prelude >= 0.1.3 && < 0.2,
    base >= 4.5 && < 4.8


-- Well, it's not a benchmark actually, 
-- but in Cabal there's no better way to specify an executable, 
-- which is not intended for distribution.
benchmark demo
  type: 
    exitcode-stdio-1.0
  hs-source-dirs:
    demo
  main-is:
    Main.hs
  ghc-options:
    -O2
    -threaded
    "-with-rtsopts=-N"
    -funbox-strict-fields
    -ddump-splices
  default-language:
    Haskell2010
  build-depends:
    newtype-deriving,
    either >= 4.3 && < 4.4,
    monad-control >= 1.0 && < 1.1,
    transformers-base == 0.4.*,
    transformers >= 0.3 && < 0.5,
    base-prelude >= 0.1.3 && < 0.2,
    base >= 4.5 && < 4.8


