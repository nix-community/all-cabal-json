{
  "description": {
    "spec-version": {
      "Left": [
        2,
        4
      ]
    },
    "package": {
      "name": "forms-data-format",
      "version": [
        0,
        2
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "BSD_3_Clause"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "(c) 2023 Mario Blažević",
    "maintainer": "blamario@protonmail.com",
    "author": "Mario Blažević",
    "stability": "",
    "tested-with": [],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "https://github.com/blamario/forms-data-format/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/blamario/forms-data-format",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Parse and serialize FDF, the Forms Data Format",
    "description": "This is a hacked-together library to parse and serialize FDF,\nAdobe's [Forms Data\nFormat](https://helpx.adobe.com/acrobat/kb/acrobat-forms-form-data-web.html). It\ndoes not follow the specification, but seems to work for simple\ncases.",
    "category": "data, text",
    "custom-fields": [],
    "build-type-raw": null,
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "CHANGELOG.md",
      "README.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Text",
          "FDF"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [
          {
            "enable-extension": "ImportQualifiedPost"
          },
          {
            "enable-extension": "NamedFieldPuns"
          },
          {
            "enable-extension": "OverloadedStrings"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": ">=0.9 && <0.12",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monoid-subclasses",
            "version-range": "==1.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "rank2classes",
            "version-range": ">=1 && <1.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "parsers",
            "version-range": "<0.13",
            "library": [
              {}
            ]
          },
          {
            "package-name": "grammatical-parsers",
            "version-range": ">=0.5 && <0.8",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": ">=0.9 && <0.12",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monoid-subclasses",
        "version-range": "==1.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "rank2classes",
        "version-range": ">=1 && <1.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "parsers",
        "version-range": "<0.13",
        "library": [
          {}
        ]
      },
      {
        "package-name": "grammatical-parsers",
        "version-range": ">=0.5 && <0.8",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
