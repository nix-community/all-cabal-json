{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "stm-promise",
      "version": [
        0,
        0,
        1
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Dan Rosén <danr@chalmers.se>",
    "author": "Dan Rosén",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.4.1"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.6.1"
      }
    ],
    "homepage": "http://www.github.com/danr/stm-promise",
    "pkg-url": "",
    "bug-reports": "http://www.github.com/danr/stm-promise/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/danr/stm-promise.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Simple STM Promises for IO computations and external processes",
    "description": "Simple STM Promises for IO computations and external processes. Experimental release.\n\nExample with running the theorem prover eprover in parallel. Given this file structure:\n\n> ├── mul-commutative\n> │   ├── induction_x_0.tptp\n> │   ├── induction_x_1.tptp\n> │   ├── induction_x_y_0.tptp\n> │   ├── induction_x_y_1.tptp\n> │   ├── induction_x_y_2.tptp\n> │   ├── induction_x_y_3.tptp\n> │   ├── induction_y_0.tptp\n> │   ├── induction_y_1.tptp\n> │   └── no_induction_0.tptp\n> └── plus-commutative\n>     ├── induction_x_0.tptp\n>     ├── induction_x_1.tptp\n>     ├── induction_x_y_0.tptp\n>     ├── induction_x_y_1.tptp\n>     ├── induction_x_y_2.tptp\n>     ├── induction_x_y_3.tptp\n>     ├── induction_y_0.tptp\n>     ├── induction_y_1.tptp\n>     └── no_induction_0.tptp\n\nWe can capture these different obligations and goals with a `Control.Concurrent.STM.Promise.Tree.Tree`.\n\n> file_tree :: Tree FilePath\n> file_tree = fmap (++ \".tptp\") $ tryAll\n>    [ fmap (\"mul-commutative/\" ++) $ requireAny\n>      [ fmap (\"induction_x_\" ++) $ requireAll $ map Leaf [\"0\",\"1\"]\n>      , fmap (\"induction_y_\" ++) $ requireAll $ map Leaf [\"0\",\"1\"]\n>      , fmap (\"induction_x_y_\" ++) $ requireAll $ map Leaf [\"0\",\"1\",\"2\",\"3\"]\n>      , Leaf \"no_induction_0\"\n>      ]\n>    , fmap (\"plus-commutative/\" ++) $ requireAny\n>      [ fmap (\"induction_x_\" ++) $ requireAll $ map Leaf [\"0\",\"1\"]\n>      , fmap (\"induction_y_\" ++) $ requireAll $ map Leaf [\"0\",\"1\"]\n>      , fmap (\"induction_x_y_\" ++) $ requireAll $ map Leaf [\"0\",\"1\",\"2\",\"3\"]\n>      , Leaf \"no_induction_0\"\n>      ]\n>    ]\n\nA successful invocation either contains @Theorem@ or @Unsatisfiable@.\n\n> success :: ProcessResult -> Bool\n> success r = excode r == ExitSuccess && any (`isInfixOf` stdout r) ok\n>   where\n>     ok = [\"Theorem\",\"Unsatisfiable\"]\n\nMaking a promise for an eprover process:\n\n> eproverPromise :: FilePath -> IO (Promise [(FilePath,Bool)])\n> eproverPromise file = do\n>     let args = [\"-xAuto\",\"-tAuto\",'-':\"-tptp3-format\",\"-s\"]\n>     promise <- processPromise \"eprover\" (file : args) \"\"\n>     let chres :: ProcessResult -> [(FilePath,Bool)]\n>         chres r = [ (file,success r) ]\n>     return $ fmap chres promise\n\nEvaluate this in parallel, with a 1 second timeout for each invocation:\n\n> main :: IO ()\n> main = do\n>     promise_tree <- mapM eproverPromise file_tree\n>\n>     let timeout      = 1000 * 1000 -- microseconds\n>         processes    = 2\n>\n>     workers (Just timeout) processes (interleave promise_tree)\n>\n>     m_res <- evalTree (any (not . snd)) promise_tree\n>\n>     let res = fromMaybe [] m_res\n>\n>     putStrLn \"Results: \"\n>\n>     mapM_ print res\n\nThe result of this run is:\n\n> Results:\n> (\"plus-commutative/induction_x_y_0.tptp\",True)\n> (\"plus-commutative/induction_x_y_1.tptp\",True)\n> (\"plus-commutative/induction_x_y_2.tptp\",True)\n> (\"plus-commutative/induction_x_y_3.tptp\",True)\n\nThis means that four out of four obligations for commutativity of plus\nsucceeded when doing induction on both x and y.",
    "category": "Concurrency",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "package-flags": [
    {
      "name": "werror",
      "description": "",
      "default": false,
      "manual": true
    }
  ],
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "Concurrent",
          "STM",
          "Promise"
        ],
        [
          "Control",
          "Concurrent",
          "STM",
          "Promise",
          "Process"
        ],
        [
          "Control",
          "Concurrent",
          "STM",
          "Promise",
          "Tree"
        ],
        [
          "Control",
          "Concurrent",
          "STM",
          "Promise",
          "Workers"
        ],
        [
          "Control",
          "Concurrent",
          "STM",
          "DTVar"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "stm",
            "version-range": ">=2.3 && <3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.1.2 && <3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "process",
            "version-range": ">=1.0.1.1 && <2",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "stm",
        "version-range": ">=2.3 && <3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.1.2 && <3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "process",
        "version-range": ">=1.0.1.1 && <2",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "variable": {
            "flag": "werror"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [
                  "-Werror"
                ],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      }
    ]
  },
  "test-suites": {
    "trees": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Trees.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "stm-promise",
              "version-range": "==0.0.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "stm",
              "version-range": ">=2.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "QuickCheck",
              "version-range": ">=2.4",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "stm-promise",
          "version-range": "==0.0.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "stm",
          "version-range": ">=2.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "QuickCheck",
          "version-range": ">=2.4",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "variable": {
              "flag": "werror"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "",
              "interface": {
                "type": {
                  "name": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [
                    "-Werror"
                  ],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    }
  }
}
