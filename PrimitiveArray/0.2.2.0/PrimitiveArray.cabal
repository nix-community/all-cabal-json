Name:           PrimitiveArray
Version:        0.2.2.0
License:        BSD3
License-file:   LICENSE
Author:         Christian Hoener zu Siederdissen
Maintainer:     choener@tbi.univie.ac.at
Copyright:      Christian Hoener zu Siederdissen, 2010-2012
Homepage:       http://www.tbi.univie.ac.at/~choener/
Stability:      Experimental
Category:       Data
Build-type:     Simple
Cabal-version:  >=1.6
Synopsis:
                Efficient multidimensional arrays
Description:
                This library provides efficient multidimensional arrays.
                .
                In general all operations are (highly) unsafe, no
                bounds-checking or other sanity-checking is performed.
                Operations are aimed toward efficiency as much as possible.
                Goals of the library are to have arrays according to three
                ideas: immutable/mutable arrays, strict/lazy arrays,
                zero-based/lower-bound arrays. Zero-based arrays save one
                addition on each access if the lower bound or the array is
                always zero.
                .
                We have forked two repa modules: Shape and Index.
                .
                Unboxed vectors are available with implementations based on
                "primitive" and "vector". For some reason, we loose 50%
                performance with RNAfold if we use "vector" as the underlying
                data type, while Nussinov78 does not suffer.

Library
  Exposed-modules:
    Data.Array.Repa.Index
    Data.Array.Repa.Shape
    Data.ExtShape
    Data.PrimitiveArray
    Data.PrimitiveArray.Unboxed.Zero
    Data.PrimitiveArray.Unboxed.VectorZero
    Data.PrimitiveArray.Zero
  Build-depends:
    base >= 4 && <5,
    primitive >= 0.4,
    vector >= 0.9
  ghc-options:
    -O2
    -funbox-strict-fields


source-repository head
  type: git
  location: git://github.com/choener/PrimitiveArray

