{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "prometheus",
      "version": [
        2,
        2,
        4
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Bitnomial, Inc. (c) 2016-2019",
    "maintainer": "luke@bitnomial.com, opensource@bitnomial.com",
    "author": "Luke Hoersten",
    "stability": "",
    "tested-with": [],
    "homepage": "http://github.com/bitnomial/prometheus",
    "pkg-url": "",
    "bug-reports": "http://github.com/bitnomial/prometheus/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/bitnomial/prometheus",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Prometheus Haskell Client",
    "description": "[Prometheus Haskell Client]\n\nA simple and modern, type safe, performance focused, idiomatic Haskell client\nfor <http://prometheus.io Prometheus> monitoring. Specifically there is no\nuse of unsafe IO or manual ByteString construction from lists of\nbytes. Batteries-included web server.\n\nA key design element of this library is that the RegistryT monad transformer\nis only required for registering new time series. Once the time series is\nregistered, new data samples may just be added in the IO monad.\n\nNote: Version 0.* supports Prometheus v1.0 and version 2.* supports Prometheus v2.0.\n\n[Usage Example]\n\n> module Example where\n>\n> import           Control.Monad.IO.Class                         (liftIO)\n> import           System.Metrics.Prometheus.Http.Scrape          (serveMetricsT)\n> import           System.Metrics.Prometheus.Concurrent.RegistryT\n> import           System.Metrics.Prometheus.Metric.Counter       (inc)\n> import           System.Metrics.Prometheus.MetricId\n>\n> main :: IO ()\n> main = runRegistryT $ do\n>     -- Labels can be defined as lists or added to an empty label set\n>     connectSuccessGauge <- registerGauge \"example_connections\" (fromList [(\"login\", \"success\")])\n>     connectFailureGauge <- registerGauge \"example_connections\" (addLabel \"login\" \"failure\" mempty)\n>     connectCounter <- registerCounter \"example_connection_total\" mempty\n>     latencyHistogram <- registerHistogram \"example_round_trip_latency_ms\" mempty [10, 20..100]\n>\n>     liftIO $ inc connectCounter -- increment a counter\n>\n>     -- [...] pass metric handles to the rest of the app\n>\n>     serveMetricsT 8080 [\"metrics\"] -- http://localhost:8080/metric server\n>\n\n[Advanced Usage]\n\nA `Registry` and `StateT`-based `RegistryT` are available for unit testing or generating lists\nof `[IO a]` actions that can be `sequenced` and returned from pure code to be applied.",
    "category": "Metrics, Monitoring, Web, System",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "Example.hs",
      "README.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "System",
          "Metrics",
          "Prometheus",
          "Concurrent",
          "Registry"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "Concurrent",
          "RegistryT"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "Encode",
          "Text"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "Encode",
          "Text",
          "Histogram"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "Encode",
          "Text",
          "MetricId"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "Http",
          "Push"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "Http",
          "Scrape"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "Metric"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "Metric",
          "Counter"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "Metric",
          "Gauge"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "Metric",
          "Histogram"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "Metric",
          "Summary"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "MetricId"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "Registry"
        ],
        [
          "System",
          "Metrics",
          "Prometheus",
          "RegistryT"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-fwarn-tabs",
            "-fno-warn-unused-do-bind"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.9 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "atomic-primops",
            "version-range": ">=0.8 && <0.9",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": ">=0.10 && <0.12",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.5 && <0.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "http-client",
            "version-range": ">=0.4 && <0.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "http-client-tls",
            "version-range": ">=0.3 && <0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "http-types",
            "version-range": ">=0.8 && <0.13",
            "library": [
              {}
            ]
          },
          {
            "package-name": "network-uri",
            "version-range": ">=2.5 && <2.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=1.2 && <2.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.4 && <0.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "wai",
            "version-range": ">=3.2 && <3.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "warp",
            "version-range": ">=3.2 && <3.5",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.9 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "atomic-primops",
        "version-range": ">=0.8 && <0.9",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": ">=0.10 && <0.12",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.5 && <0.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "http-client",
        "version-range": ">=0.4 && <0.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "http-client-tls",
        "version-range": ">=0.3 && <0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "http-types",
        "version-range": ">=0.8 && <0.13",
        "library": [
          {}
        ]
      },
      {
        "package-name": "network-uri",
        "version-range": ">=2.5 && <2.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=1.2 && <2.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.4 && <0.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "wai",
        "version-range": ">=3.2 && <3.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "warp",
        "version-range": ">=3.2 && <3.5",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
