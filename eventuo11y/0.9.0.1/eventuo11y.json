{
  "description": {
    "spec-version": {
      "Left": [
        3,
        0
      ]
    },
    "package": {
      "name": "eventuo11y",
      "version": [
        0,
        9,
        0,
        1
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "Apache_2_0"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Copyright 2022 Shea Levy.",
    "maintainer": "shea@shealevy.com",
    "author": "Shea Levy",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==8.10.7 || ==9.2.6 || ==9.4.2"
      }
    ],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "https://github.com/shlevy/eventuo11y/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/shlevy/eventuo11y",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "An event-oriented observability library",
    "description": "Instrument your Haskell codebase with wide, semantically meaningful events.\nThis library is designed with separating the following concerns in mind:\n\n[@Writing instrumentation@] When instrumenting code, I want to think in terms of my\napplication domain and report any information I might need to infer internal\napplication-level state and understand the behavior of my program/library.\n\n[@Consuming instrumentation@] When consuming instrumentation, I want to think in\nterms of the API fo the specific backend I'm supporting (writing to @stderr@,\nserving a @Prometheus@ page, posting to @OpenTelemetry@) and what is needed to\nrender to that API.\n\n[@Initializing instrumentation in an application@] When I'm ready to tie it all\ntogether, I want to identify the specific backends I want to post to and provide\nthe bridge code to render the domain-specific instrumentation as needed for those\nbackends. I also want to handle concerns like sampling or client-side aggregation\nof domain-specific instrumentation to keep usage manageable.\n\nSee \"Observe.Event\" for detailed documentation on instrumenting your code.\n\nSee \"Observe.Event.Backend\" for documentation on writing an\n@EventBackend@.\n\nSee [eventuo11y-dsl](https://hackage.haskell.org/package/eventuo11y-dsl) for simpler syntax for\ncreating application-level instrumentation types.\n\nSee [eventuo11y-otel](https://hackage.haskell.org/package/eventuo11y-otel) for an OpenTelemetry-based\nbackend.\n\nSee [eventuo11y-prometheus](https://hackage.haskell.org/package/eventuo11y-prometheus) for a Prometheus-based\nbackend.\n\nSee [eventuo11y-json](https://hackage.haskell.org/package/eventuo11y-json) for JSON-based rendering\nand backends.\n\nSee [Example.hs](https://github.com/shlevy/eventuo11y/tree/v0.6.0.0/Example.hs) for an example.\n\nSee [eventuo11y-batteries](https://hackage.haskell.org/package/eventuo11y-batteries) for miscellaneous\nframework-specific helpers.",
    "category": "Observability",
    "custom-fields": [],
    "build-type-raw": null,
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "CHANGELOG.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "Natural",
          "Control"
        ],
        [
          "Observe",
          "Event"
        ],
        [
          "Observe",
          "Event",
          "Backend"
        ],
        [
          "Observe",
          "Event",
          "Class"
        ],
        [
          "Observe",
          "Event",
          "Explicit"
        ],
        [
          "Observe",
          "Event",
          "Render",
          "InMemory"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "^>=4.14 || ^>=4.16 || ^>=4.17",
            "library": [
              {}
            ]
          },
          {
            "package-name": "exceptions",
            "version-range": "^>=0.10",
            "library": [
              {}
            ]
          },
          {
            "package-name": "general-allocate",
            "version-range": "^>=0.2 && >=0.2.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "primitive",
            "version-range": "^>=0.7 || ^>=0.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "time",
            "version-range": "^>=1.9 || ^>=1.11 || ^>=1.12",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": "^>=0.5 || ^>=0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers-base",
            "version-range": "^>=0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monad-control",
            "version-range": "^>=1.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": "^>=2.2 || ^>=2.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "unliftio-core",
            "version-range": "^>=0.2",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "^>=4.14 || ^>=4.16 || ^>=4.17",
        "library": [
          {}
        ]
      },
      {
        "package-name": "exceptions",
        "version-range": "^>=0.10",
        "library": [
          {}
        ]
      },
      {
        "package-name": "general-allocate",
        "version-range": "^>=0.2 && >=0.2.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "primitive",
        "version-range": "^>=0.7 || ^>=0.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "time",
        "version-range": "^>=1.9 || ^>=1.11 || ^>=1.12",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": "^>=0.5 || ^>=0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers-base",
        "version-range": "^>=0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monad-control",
        "version-range": "^>=1.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": "^>=2.2 || ^>=2.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "unliftio-core",
        "version-range": "^>=0.2",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
