name:          LambdaHack
version:       0.2.10.5
synopsis:      A roguelike game engine in early and active development
description:   This is an alpha release of LambdaHack,
               a game engine library for roguelike games
               of arbitrary theme, size and complexity,
               packaged together with a small example dungeon crawler.
               When completed, the engine will let you specify content
               to be procedurally generated, define the AI behaviour
               on top of the generic content-independent rules
               and compile a ready-to-play game binary, using either
               the supplied or a custom-made main loop.
               Several frontends are available (GTK is the default)
               and many other generic engine components are easily overridden,
               but the fundamental source of flexibility lies
               in the strict and type-safe separation of code and content
               and of clients (human and AI-controlled) and server.
               .
               This is a minor release, primarily intended to fix
               broken builds on hackage and travis. Changes since 0.2.10
               are mostly unrelated to gameplay: overhauled dungeon generation
               code and the use of the external library assert-failure
               for expressing assertions and error messages.
               Upcoming features: new and improved frontends, improved AI
               (pathfinding, autoexplore, better ranged combat), dynamic
               light sources, explosions, player action undo/redo, completely
               redesigned UI. Long term goals are focused on procedural
               content generation and include in-game content creation,
               auto-balancing and persistent content modification
               based on player behaviour.
               .
               A larger game that depends on the LambdaHack library
               is Allure of the Stars, available from
               <http://hackage.haskell.org/package/Allure>.
               .
               Note: All modules in this library are kept visible,
               to let games override and reuse them.
               OTOH, to reflect that some modules are implementation details
               relative to others, the source code adheres to the following
               convention. If a module has the same name as a directory,
               the module is the exclusive interface to the directory.
               No references to the modules in the directory are allowed
               except from the interface module. This policy is only binding
               inside the library --- users are free to do whatever they
               please, since the library authors are in no position to guess
               their particular needs.
homepage:      http://github.com/kosmikus/LambdaHack
bug-reports:   http://github.com/kosmikus/LambdaHack/issues
license:       BSD3
license-file:  LICENSE
tested-with:   GHC == 7.4.2, GHC == 7.6.3, GHC == 7.7
data-files:    config.rules.default, config.ui.default, scores
extra-source-files: LICENSE, CREDITS, changelog, PLAYING.md, README.md,
                    Makefile, MainMenu.ascii, .travis.yml
author:        Andres Loeh, Mikolaj Konarski
maintainer:    Mikolaj Konarski <mikolaj.konarski@funktory.com>
category:      Game Engine, Game
build-type:    Simple
cabal-version: >= 1.10

source-repository head
  type:               git
  location:           git://github.com/kosmikus/LambdaHack.git

flag gtk
  description:        enable the gtk frontend
  default:            False

flag vty
  description:        enable the vty frontend
  default:            False

flag curses
  description:        enable the curses frontend
  default:            False

library
  exposed-modules:    Game.LambdaHack.Client,
                      Game.LambdaHack.Client.Action,
                      Game.LambdaHack.Client.Action.ActionClass,
                      Game.LambdaHack.Client.Action.ActionType,
                      Game.LambdaHack.Client.AtomicSemCli,
                      Game.LambdaHack.Client.Binding,
                      Game.LambdaHack.Client.ClientSem,
                      Game.LambdaHack.Client.Config,
                      Game.LambdaHack.Client.Draw,
                      Game.LambdaHack.Client.HumanCmd,
                      Game.LambdaHack.Client.HumanGlobal,
                      Game.LambdaHack.Client.HumanLocal,
                      Game.LambdaHack.Client.HumanSem,
                      Game.LambdaHack.Client.LoopAction,
                      Game.LambdaHack.Client.RunAction,
                      Game.LambdaHack.Client.State,
                      Game.LambdaHack.Client.Strategy,
                      Game.LambdaHack.Client.StrategyAction,
                      Game.LambdaHack.Common.Ability,
                      Game.LambdaHack.Common.Action,
                      Game.LambdaHack.Common.Actor,
                      Game.LambdaHack.Common.ActorState,
                      Game.LambdaHack.Common.Animation,
                      Game.LambdaHack.Common.AtomicCmd,
                      Game.LambdaHack.Common.AtomicPos,
                      Game.LambdaHack.Common.AtomicSem,
                      Game.LambdaHack.Common.ClientCmd,
                      Game.LambdaHack.Common.Color,
                      Game.LambdaHack.Common.ConfigIO,
                      Game.LambdaHack.Common.ContentDef,
                      Game.LambdaHack.Common.Effect,
                      Game.LambdaHack.Common.Faction,
                      Game.LambdaHack.Common.Feature,
                      Game.LambdaHack.Common.Flavour,
                      Game.LambdaHack.Common.HighScore,
                      Game.LambdaHack.Common.Item,
                      Game.LambdaHack.Common.Key,
                      Game.LambdaHack.Common.Kind,
                      Game.LambdaHack.Common.Level,
                      Game.LambdaHack.Common.Misc,
                      Game.LambdaHack.Common.Msg,
                      Game.LambdaHack.Common.Perception,
                      Game.LambdaHack.Common.Point,
                      Game.LambdaHack.Common.PointXY,
                      Game.LambdaHack.Common.Random,
                      Game.LambdaHack.Common.Save,
                      Game.LambdaHack.Common.ServerCmd,
                      Game.LambdaHack.Common.State,
                      Game.LambdaHack.Common.Tile,
                      Game.LambdaHack.Common.Time,
                      Game.LambdaHack.Common.Vector,
                      Game.LambdaHack.Common.VectorXY,
                      Game.LambdaHack.Content.ActorKind,
                      Game.LambdaHack.Content.CaveKind,
                      Game.LambdaHack.Content.FactionKind,
                      Game.LambdaHack.Content.ItemKind,
                      Game.LambdaHack.Content.ModeKind,
                      Game.LambdaHack.Content.PlaceKind,
                      Game.LambdaHack.Content.RuleKind,
                      Game.LambdaHack.Content.TileKind,
                      Game.LambdaHack.Frontend,
                      Game.LambdaHack.Frontend.Chosen,
                      Game.LambdaHack.Frontend.Std,
                      Game.LambdaHack.Server,
                      Game.LambdaHack.Server.Action,
                      Game.LambdaHack.Server.Action.ActionClass,
                      Game.LambdaHack.Server.Action.ActionType,
                      Game.LambdaHack.Server.AtomicSemSer,
                      Game.LambdaHack.Server.Config,
                      Game.LambdaHack.Server.DungeonGen,
                      Game.LambdaHack.Server.DungeonGen.Area
                      Game.LambdaHack.Server.DungeonGen.AreaRnd,
                      Game.LambdaHack.Server.DungeonGen.Cave,
                      Game.LambdaHack.Server.DungeonGen.Place,
                      Game.LambdaHack.Server.EffectSem,
                      Game.LambdaHack.Server.Fov,
                      Game.LambdaHack.Server.Fov.Common,
                      Game.LambdaHack.Server.Fov.Digital,
                      Game.LambdaHack.Server.Fov.Permissive,
                      Game.LambdaHack.Server.Fov.Shadow,
                      Game.LambdaHack.Server.LoopAction,
                      Game.LambdaHack.Server.ServerSem,
                      Game.LambdaHack.Server.StartAction,
                      Game.LambdaHack.Server.State,
                      Game.LambdaHack.Utils.File,
                      Game.LambdaHack.Utils.Frequency,
                      Game.LambdaHack.Utils.LQueue,
                      Game.LambdaHack.Utils.Thread
  other-modules:      Paths_LambdaHack
  build-depends:      ConfigFile >= 1.1.1   && < 2,
                      array      >= 0.3.0.3 && < 1,
                      assert-failure >= 0.1 && < 1,
                      base       >= 4       && < 5,
                      binary     >= 0.7     && < 1,
                      bytestring >= 0.9.2   && < 1,
                      containers >= 0.5     && < 1,
                      deepseq    >= 1.3     && < 2,
                      directory  >= 1.1.0.1 && < 2,
                      enummapset-th >= 0.6.0.0 && < 1,
                      filepath   >= 1.2.0.1 && < 2,
                      ghc-prim   >= 0.2,
                      hashable   >= 1.2     && < 2,
                      keys       >= 3       && < 4,
                      miniutter  >= 0.4.1   && < 2,
                      mtl        >= 2.0.1   && < 3,
                      old-time   >= 1.0.0.7 && < 2,
                      pretty-show >= 1.6    && < 1.6.2,
                      random     >= 1.0.1   && < 2,
                      stm        >= 2.4     && < 3,
                      text       >= 0.11.2.3 && < 2,
                      transformers >= 0.3   && < 1,
                      unordered-containers >= 0.2.3 && < 1,
                      zlib       >= 0.5.3.1 && < 1

  default-language:   Haskell2010
  default-extensions: MonoLocalBinds, ScopedTypeVariables, OverloadedStrings
                      BangPatterns, RecordWildCards, NamedFieldPuns
  other-extensions:   CPP, TemplateHaskell, MultiParamTypeClasses, RankNTypes,
                      TypeFamilies, FlexibleContexts, FlexibleInstances,
                      DeriveFunctor, FunctionalDependencies,
                      GeneralizedNewtypeDeriving, TupleSections,
                      DeriveFoldable, DeriveTraversable
--, DeriveGeneric
  ghc-options:        -Wall -fwarn-orphans -fwarn-tabs -fwarn-incomplete-uni-patterns -fwarn-incomplete-record-updates -fwarn-monomorphism-restriction -fwarn-unrecognised-pragmas
  ghc-options:        -fno-warn-auto-orphans -fno-warn-implicit-prelude
  ghc-options:        -fno-ignore-asserts -funbox-strict-fields
  ghc-prof-options:   -fprof-auto-calls

  if flag(gtk) {
    other-modules:    Game.LambdaHack.Frontend.Gtk
    build-depends:    gtk >= 0.12.1 && < 0.13
    cpp-options:      -DGTK
  } else { if flag(vty) {
    other-modules:    Game.LambdaHack.Frontend.Vty
    build-depends:    vty >= 4.7.0.6
    cpp-options:      -DVTY
  } else { if flag(curses) {
    other-modules:    Game.LambdaHack.Frontend.Curses
    build-depends:    hscurses >= 1.4.1 && < 2
    cpp-options:      -DCURSES
  } else {
    other-modules:    Game.LambdaHack.Frontend.Gtk
    build-depends:    gtk >= 0.12.1 && < 0.13
  } } }

executable LambdaHack
  hs-source-dirs:     LambdaHack
  main-is:            Main.hs
  other-modules:      Content.ActorKind,
                      Content.CaveKind,
                      Content.FactionKind,
                      Content.ItemKind,
                      Content.ModeKind,
                      Content.PlaceKind,
                      Content.RuleKind,
                      Content.TileKind,
                      Paths_LambdaHack
  build-depends:      LambdaHack,
                      template-haskell >= 2.6 && < 3,

                      ConfigFile >= 1.1.1   && < 2,
                      array      >= 0.3.0.3 && < 1,
                      assert-failure >= 0.1 && < 1,
                      base       >= 4       && < 5,
                      binary     >= 0.7     && < 1,
                      bytestring >= 0.9.2   && < 1,
                      containers >= 0.5     && < 1,
                      deepseq    >= 1.3     && < 2,
                      directory  >= 1.1.0.1 && < 2,
                      enummapset-th >= 0.6.0.0 && < 1,
                      filepath   >= 1.2.0.1 && < 2,
                      ghc-prim   >= 0.2,
                      hashable   >= 1.2     && < 2,
                      keys       >= 3       && < 4,
                      miniutter  >= 0.4.1   && < 2,
                      mtl        >= 2.0.1   && < 3,
                      old-time   >= 1.0.0.7 && < 2,
                      random     >= 1.0.1   && < 2,
                      stm        >= 2.4     && < 3,
                      text       >= 0.11.2.3 && < 2,
                      transformers >= 0.3   && < 1,
                      unordered-containers >= 0.2.3 && < 1,
                      zlib       >= 0.5.3.1 && < 1

  default-language:   Haskell2010
  default-extensions: MonoLocalBinds, ScopedTypeVariables, OverloadedStrings
                      BangPatterns, RecordWildCards, NamedFieldPuns
  other-extensions:   TemplateHaskell
  ghc-options:        -Wall -fwarn-orphans -fwarn-tabs -fwarn-incomplete-uni-patterns -fwarn-incomplete-record-updates -fwarn-monomorphism-restriction -fwarn-unrecognised-pragmas
  ghc-options:        -fno-warn-auto-orphans -fno-warn-implicit-prelude
  ghc-options:        -fno-ignore-asserts -funbox-strict-fields
  ghc-options:        -threaded -with-rtsopts=-C0.005
-- ghc-options:       -with-rtsopts=-N  -- eats all cores
