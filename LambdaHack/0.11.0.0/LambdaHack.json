{
  "description": {
    "spec-version": {
      "Left": [
        2,
        4
      ]
    },
    "package": {
      "name": "LambdaHack",
      "version": [
        0,
        11,
        0,
        0
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "BSD_3_Clause"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "COPYLEFT"
    ],
    "copyright": "",
    "maintainer": "Mikolaj Konarski <mikolaj.konarski@funktory.com>",
    "author": "Andres Loeh, Mikolaj Konarski and others",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==8.2.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.4.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.6.5"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.8.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.10.7"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.0.1"
      }
    ],
    "homepage": "https://lambdahack.github.io",
    "pkg-url": "",
    "bug-reports": "http://github.com/LambdaHack/LambdaHack/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/LambdaHack/LambdaHack.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "A game engine library for tactical squad ASCII roguelike dungeon crawlers",
    "description": "LambdaHack is a Haskell game engine library for ASCII roguelike\ngames of arbitrary theme, size and complexity, with optional\ntactical squad combat. It's packaged together with a sample\ndungeon crawler in a quirky fantasy setting. The sample game can be\ntried out in the browser at <http://lambdahack.github.io>.\n\nPlease see the changelog file for recent improvements\nand the issue tracker for short-term plans. Long term goals\ninclude multiplayer tactical squad combat, in-game content\ncreation, auto-balancing and persistent content modification\nbased on player behaviour. Contributions are welcome.\n\nOther games known to use the LambdaHack library:\n\n* Allure of the Stars, a near-future Sci-Fi game,\n<http://hackage.haskell.org/package/Allure>\n\nNote: All modules in this library are kept visible,\nto let games override and reuse them.\nOTOH, to reflect that some modules are implementation details\nrelative to others, the source code adheres to the following\nconvention. If a module has the same name as a directory,\nthe module is the exclusive interface to the directory.\nNo references to the modules in the directory are allowed\nexcept from the interface module. This policy is only binding\nwhen developing the library --- library users are free\nto access any modules, since the library authors are in\nno position to guess their particular needs.\n\nThis is a workaround .cabal file, flattened to eliminate\ninternal libraries until generating haddocks for them\nis fixed. The original .cabal file is in .cabal.bkp file.",
    "category": "Game Engine, Game",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "GameDefinition/config.ui.default",
      "GameDefinition/PLAYING.md",
      "GameDefinition/fonts/16x16xw.woff",
      "GameDefinition/fonts/16x16xw.bdf",
      "GameDefinition/fonts/16x16x.fnt",
      "GameDefinition/fonts/8x8xb.fnt",
      "GameDefinition/fonts/8x8x.fnt",
      "GameDefinition/fonts/BinarySansProLH-Regular.ttf.woff",
      "GameDefinition/fonts/BinarySansProLH-Semibold.ttf.woff",
      "GameDefinition/fonts/BinaryCodeProLH-Bold.ttf.woff",
      "GameDefinition/fonts/DejaVuLGCSans.ttf.woff",
      "GameDefinition/fonts/DejaVuLGCSans-Bold.ttf.woff",
      "GameDefinition/fonts/Hack-Bold.ttf.woff"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": [
      "GameDefinition/InGameHelp.txt",
      "README.md",
      "CHANGELOG.md",
      "LICENSE",
      "COPYLEFT",
      "CREDITS",
      "cabal.project",
      "Makefile"
    ]
  },
  "package-flags": [
    {
      "name": "with_expensive_assertions",
      "description": "turn on expensive assertions of well-tested code",
      "default": false,
      "manual": true
    },
    {
      "name": "with_costly_optimizations",
      "description": "turn on costly (mostly GHC heap size) optimizations (that give 15-25% speedup)",
      "default": true,
      "manual": true
    },
    {
      "name": "release",
      "description": "prepare for a release (expose internal functions and types, etc.)",
      "default": true,
      "manual": true
    },
    {
      "name": "supportnodejs",
      "description": "compile so that the JS blob works in terminal with NodeJS",
      "default": true,
      "manual": true
    },
    {
      "name": "jsaddle",
      "description": "switch to the JSaddle frontend (may be bit-rotted)",
      "default": false,
      "manual": true
    }
  ],
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Game",
          "LambdaHack",
          "Core",
          "Dice"
        ],
        [
          "Game",
          "LambdaHack",
          "Core",
          "Frequency"
        ],
        [
          "Game",
          "LambdaHack",
          "Core",
          "Prelude"
        ],
        [
          "Game",
          "LambdaHack",
          "Core",
          "Random"
        ],
        [
          "Game",
          "LambdaHack",
          "Definition",
          "Ability"
        ],
        [
          "Game",
          "LambdaHack",
          "Definition",
          "Color"
        ],
        [
          "Game",
          "LambdaHack",
          "Definition",
          "ContentData"
        ],
        [
          "Game",
          "LambdaHack",
          "Definition",
          "Defs"
        ],
        [
          "Game",
          "LambdaHack",
          "Definition",
          "DefsInternal"
        ],
        [
          "Game",
          "LambdaHack",
          "Definition",
          "Flavour"
        ],
        [
          "Game",
          "LambdaHack",
          "Content",
          "CaveKind"
        ],
        [
          "Game",
          "LambdaHack",
          "Content",
          "FactionKind"
        ],
        [
          "Game",
          "LambdaHack",
          "Content",
          "ItemKind"
        ],
        [
          "Game",
          "LambdaHack",
          "Content",
          "ModeKind"
        ],
        [
          "Game",
          "LambdaHack",
          "Content",
          "PlaceKind"
        ],
        [
          "Game",
          "LambdaHack",
          "Content",
          "RuleKind"
        ],
        [
          "Game",
          "LambdaHack",
          "Content",
          "TileKind"
        ],
        [
          "Game",
          "LambdaHack",
          "Atomic"
        ],
        [
          "Game",
          "LambdaHack",
          "Atomic",
          "CmdAtomic"
        ],
        [
          "Game",
          "LambdaHack",
          "Atomic",
          "HandleAtomicWrite"
        ],
        [
          "Game",
          "LambdaHack",
          "Atomic",
          "MonadStateWrite"
        ],
        [
          "Game",
          "LambdaHack",
          "Atomic",
          "PosAtomicRead"
        ],
        [
          "Game",
          "LambdaHack",
          "Client"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "AI"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "AI",
          "ConditionM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "AI",
          "PickActionM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "AI",
          "PickActorM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "AI",
          "PickTargetM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "AI",
          "Strategy"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "Bfs"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "BfsM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "CommonM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "HandleAtomicM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "HandleResponseM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "LoopM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "MonadClient"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "Preferences"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "Request"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "Response"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "State"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "ActorUI"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Animation"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Content",
          "Input"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Content",
          "Screen"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "ContentClientUI"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "DrawM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "EffectDescription"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Frame"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "FrameM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Frontend"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Frontend",
          "Common"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Frontend",
          "Teletype"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "HandleHelperM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "HandleHumanGlobalM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "HandleHumanLocalM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "HandleHumanM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "HumanCmd"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "InventoryM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "ItemDescription"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Key"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "KeyBindings"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "MonadClientUI"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Msg"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "MsgM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Overlay"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "PointUI"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "RunM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "SessionUI"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Slideshow"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "SlideshowM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "UIOptions"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "UIOptionsParse"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Watch"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Watch",
          "WatchCommonM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Watch",
          "WatchQuitM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Watch",
          "WatchSfxAtomicM"
        ],
        [
          "Game",
          "LambdaHack",
          "Client",
          "UI",
          "Watch",
          "WatchUpdAtomicM"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Analytics"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Area"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Actor"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "ActorState"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "ClientOptions"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Faction"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "File"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "HighScore"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Item"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "ItemAspect"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Kind"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Level"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Misc"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "MonadStateRead"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Perception"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "PointArray"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Point"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "ReqFailure"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "RingBuffer"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Save"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "State"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Thread"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Tile"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Time"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Types"
        ],
        [
          "Game",
          "LambdaHack",
          "Common",
          "Vector"
        ],
        [
          "Game",
          "LambdaHack",
          "Server"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "BroadcastAtomic"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "Commandline"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "CommonM"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "DebugM"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "DungeonGen"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "DungeonGen",
          "AreaRnd"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "DungeonGen",
          "Cave"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "DungeonGen",
          "Place"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "Fov"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "FovDigital"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "HandleAtomicM"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "HandleEffectM"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "HandleRequestM"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "ItemRev"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "ItemM"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "LoopM"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "MonadServer"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "PeriodicM"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "ProtocolM"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "ServerOptions"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "StartM"
        ],
        [
          "Game",
          "LambdaHack",
          "Server",
          "State"
        ],
        [
          "Content",
          "CaveKind"
        ],
        [
          "Content",
          "FactionKind"
        ],
        [
          "Content",
          "ItemKind"
        ],
        [
          "Content",
          "ItemKindEmbed"
        ],
        [
          "Content",
          "ItemKindActor"
        ],
        [
          "Content",
          "ItemKindOrgan"
        ],
        [
          "Content",
          "ItemKindBlast"
        ],
        [
          "Content",
          "ItemKindTemporary"
        ],
        [
          "Content",
          "ModeKind"
        ],
        [
          "Content",
          "PlaceKind"
        ],
        [
          "Content",
          "RuleKind"
        ],
        [
          "Content",
          "TileKind"
        ],
        [
          "TieKnot"
        ],
        [
          "Client",
          "UI",
          "Content",
          "Input"
        ],
        [
          "Client",
          "UI",
          "Content",
          "Screen"
        ],
        [
          "Implementation",
          "MonadClientImplementation"
        ],
        [
          "Implementation",
          "MonadServerImplementation"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "definition-src",
          "engine-src",
          "GameDefinition/game-src",
          "GameDefinition"
        ],
        "otherModules": [
          [
            "Paths_LambdaHack"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [
          [
            "Paths_LambdaHack"
          ]
        ],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "MonoLocalBinds"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "OverloadedStrings"
          },
          {
            "enable-extension": "BangPatterns"
          },
          {
            "enable-extension": "RecordWildCards"
          },
          {
            "enable-extension": "NamedFieldPuns"
          },
          {
            "enable-extension": "MultiWayIf"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "InstanceSigs"
          },
          {
            "enable-extension": "PatternSynonyms"
          },
          {
            "enable-extension": "StrictData"
          },
          {
            "enable-extension": "CPP"
          },
          {
            "enable-extension": "TypeApplications"
          }
        ],
        "otherExtensions": [
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "TupleSections"
          },
          {
            "enable-extension": "DeriveFoldable"
          },
          {
            "enable-extension": "DeriveTraversable"
          },
          {
            "enable-extension": "ExistentialQuantification"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "KindSignatures"
          },
          {
            "enable-extension": "DeriveGeneric"
          },
          {
            "enable-extension": "DeriveLift"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-Wcompat",
            "-Worphans",
            "-Wincomplete-uni-patterns",
            "-Wincomplete-record-updates",
            "-Wimplicit-prelude",
            "-Wmissing-home-modules",
            "-Widentities",
            "-Wredundant-constraints",
            "-Wmissing-export-lists",
            "-Wpartial-fields",
            "-Wunused-packages",
            "-Winvalid-haddock",
            "-fno-ignore-asserts"
          ],
          [
            "-DUSE_JSFILE"
          ]
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "assert-failure",
            "version-range": ">=0.1.2 && <0.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "async",
            "version-range": ">=2.2.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": ">=4.10 && <99",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base-compat",
            "version-range": ">=0.10.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "binary",
            "version-range": ">=0.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": ">=0.9.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.5.3.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": ">=1.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "directory",
            "version-range": ">=1.1.0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "enummapset",
            "version-range": ">=0.5.2.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "file-embed",
            "version-range": ">=0.0.11",
            "library": [
              {}
            ]
          },
          {
            "package-name": "filepath",
            "version-range": ">=1.2.0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "hashable",
            "version-range": ">=1.1.2.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "hsini",
            "version-range": ">=0.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "witch",
            "version-range": ">=0.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "keys",
            "version-range": ">=3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "miniutter",
            "version-range": ">=0.5.0.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "open-browser",
            "version-range": ">=0.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "optparse-applicative",
            "version-range": ">=0.13",
            "library": [
              {}
            ]
          },
          {
            "package-name": "pretty-show",
            "version-range": ">=1.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "primitive",
            "version-range": ">=0.6.1.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "QuickCheck",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "splitmix",
            "version-range": ">=0.0.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "stm",
            "version-range": ">=2.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "time",
            "version-range": ">=1.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=0.11.2.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "unordered-containers",
            "version-range": ">=0.2.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "vector",
            "version-range": ">=0.11",
            "library": [
              {}
            ]
          },
          {
            "package-name": "vector-binary-instances",
            "version-range": ">=0.2.3.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "th-lift-instances",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ghc-compact",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "assert-failure",
        "version-range": ">=0.1.2 && <0.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "async",
        "version-range": ">=2.2.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": ">=4.10 && <99",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base-compat",
        "version-range": ">=0.10.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "binary",
        "version-range": ">=0.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": ">=0.9.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.5.3.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": ">=1.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "directory",
        "version-range": ">=1.1.0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "enummapset",
        "version-range": ">=0.5.2.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "file-embed",
        "version-range": ">=0.0.11",
        "library": [
          {}
        ]
      },
      {
        "package-name": "filepath",
        "version-range": ">=1.2.0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "hashable",
        "version-range": ">=1.1.2.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "hsini",
        "version-range": ">=0.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "witch",
        "version-range": ">=0.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "keys",
        "version-range": ">=3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "miniutter",
        "version-range": ">=0.5.0.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "open-browser",
        "version-range": ">=0.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "optparse-applicative",
        "version-range": ">=0.13",
        "library": [
          {}
        ]
      },
      {
        "package-name": "pretty-show",
        "version-range": ">=1.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "primitive",
        "version-range": ">=0.6.1.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "QuickCheck",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "splitmix",
        "version-range": ">=0.0.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "stm",
        "version-range": ">=2.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "time",
        "version-range": ">=1.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=0.11.2.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "unordered-containers",
        "version-range": ">=0.2.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "vector",
        "version-range": ">=0.11",
        "library": [
          {}
        ]
      },
      {
        "package-name": "vector-binary-instances",
        "version-range": ">=0.2.3.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "th-lift-instances",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ghc-compact",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "variable": {
            "flag": "with_costly_optimizations"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [
                  "-fexpose-all-unfoldings",
                  "-fspecialise-aggressively",
                  "-fsimpl-tick-factor=200"
                ],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "variable": {
            "flag": "with_expensive_assertions"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [
                "-DWITH_EXPENSIVE_ASSERTIONS"
              ],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "variable": {
            "flag": "release"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [
                "-DEXPOSE_INTERNAL"
              ],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "cond_not": {
            "variable": {
              "flag": "supportnodejs"
            }
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                [
                  "-DREMOVE_TELETYPE"
                ]
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "cond_or_1": {
            "variable": {
              "compiler": "GHCJS",
              "version": "-any"
            }
          },
          "cond_or_2": {
            "variable": {
              "flag": "jsaddle"
            }
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [
              [
                "Game",
                "LambdaHack",
                "Client",
                "UI",
                "Frontend",
                "Dom"
              ]
            ],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [
                "-DUSE_BROWSER"
              ],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [
                {
                  "package-name": "ghcjs-dom",
                  "version-range": ">=0.9.1.1",
                  "library": [
                    {}
                  ]
                }
              ],
              "mixins": []
            }
          },
          "condTreeConstraints": [
            {
              "package-name": "ghcjs-dom",
              "version-range": ">=0.9.1.1",
              "library": [
                {}
              ]
            }
          ],
          "condTreeComponents": []
        },
        "condBranchIfFalse": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [
              [
                "Game",
                "LambdaHack",
                "Client",
                "UI",
                "Frontend",
                "Sdl"
              ],
              [
                "Game",
                "LambdaHack",
                "Client",
                "UI",
                "Frontend",
                "ANSI"
              ]
            ],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [
                {
                  "package-name": "sdl2",
                  "version-range": ">=2",
                  "library": [
                    {}
                  ]
                },
                {
                  "package-name": "sdl2-ttf",
                  "version-range": ">=2",
                  "library": [
                    {}
                  ]
                },
                {
                  "package-name": "ansi-terminal",
                  "version-range": ">=0.10",
                  "library": [
                    {}
                  ]
                }
              ],
              "mixins": []
            }
          },
          "condTreeConstraints": [
            {
              "package-name": "sdl2",
              "version-range": ">=2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "sdl2-ttf",
              "version-range": ">=2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "ansi-terminal",
              "version-range": ">=0.10",
              "library": [
                {}
              ]
            }
          ],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "variable": {
            "compiler": "GHCJS",
            "version": "-any"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [
                [
                  "Game",
                  "LambdaHack",
                  "Common",
                  "JSFile"
                ]
              ],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [
                {
                  "package-name": "ghcjs-base",
                  "version-range": "-any",
                  "library": [
                    {}
                  ]
                }
              ],
              "mixins": []
            }
          },
          "condTreeConstraints": [
            {
              "package-name": "ghcjs-base",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "condTreeComponents": []
        },
        "condBranchIfFalse": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [
                [
                  "Game",
                  "LambdaHack",
                  "Common",
                  "HSFile"
                ]
              ],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [
                {
                  "package-name": "zlib",
                  "version-range": ">=0.5.3.1",
                  "library": [
                    {}
                  ]
                }
              ],
              "mixins": []
            }
          },
          "condTreeConstraints": [
            {
              "package-name": "zlib",
              "version-range": ">=0.5.3.1",
              "library": [
                {}
              ]
            }
          ],
          "condTreeComponents": []
        }
      }
    ]
  },
  "executables": {
    "LambdaHack": {
      "condTreeData": {
        "name": "LambdaHack",
        "module-path": "GameDefinition/Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "MonoLocalBinds"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "OverloadedStrings"
            },
            {
              "enable-extension": "BangPatterns"
            },
            {
              "enable-extension": "RecordWildCards"
            },
            {
              "enable-extension": "NamedFieldPuns"
            },
            {
              "enable-extension": "MultiWayIf"
            },
            {
              "enable-extension": "LambdaCase"
            },
            {
              "enable-extension": "DefaultSignatures"
            },
            {
              "enable-extension": "InstanceSigs"
            },
            {
              "enable-extension": "PatternSynonyms"
            },
            {
              "enable-extension": "StrictData"
            },
            {
              "enable-extension": "CPP"
            },
            {
              "enable-extension": "TypeApplications"
            }
          ],
          "otherExtensions": [
            {
              "enable-extension": "TemplateHaskell"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "RankNTypes"
            },
            {
              "enable-extension": "TypeFamilies"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "DeriveFunctor"
            },
            {
              "enable-extension": "FunctionalDependencies"
            },
            {
              "enable-extension": "GeneralizedNewtypeDeriving"
            },
            {
              "enable-extension": "TupleSections"
            },
            {
              "enable-extension": "DeriveFoldable"
            },
            {
              "enable-extension": "DeriveTraversable"
            },
            {
              "enable-extension": "ExistentialQuantification"
            },
            {
              "enable-extension": "GADTs"
            },
            {
              "enable-extension": "StandaloneDeriving"
            },
            {
              "enable-extension": "DataKinds"
            },
            {
              "enable-extension": "KindSignatures"
            },
            {
              "enable-extension": "DeriveGeneric"
            },
            {
              "enable-extension": "DeriveLift"
            }
          ],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-Wcompat",
              "-Worphans",
              "-Wincomplete-uni-patterns",
              "-Wincomplete-record-updates",
              "-Wimplicit-prelude",
              "-Wmissing-home-modules",
              "-Widentities",
              "-Wredundant-constraints",
              "-Wmissing-export-lists",
              "-Wpartial-fields",
              "-Wunused-packages",
              "-Winvalid-haddock",
              "-fno-ignore-asserts",
              "-rtsopts",
              "-with-rtsopts=-A99m -I5"
            ],
            [
              "-DUSE_JSFILE",
              "-DGHCJS_GC_INTERVAL=10000",
              "-DGHCJS_BUSY_YIELD=50",
              "-dedupe"
            ]
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "LambdaHack",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "async",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "filepath",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "optparse-applicative",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "LambdaHack",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "async",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "filepath",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "optparse-applicative",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "variable": {
              "flag": "with_costly_optimizations"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "LambdaHack",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [
                    "-fexpose-all-unfoldings",
                    "-fspecialise-aggressively",
                    "-fsimpl-tick-factor=200"
                  ],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        },
        {
          "condBranchCondition": {
            "variable": {
              "flag": "with_expensive_assertions"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "LambdaHack",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [
                  "-DWITH_EXPENSIVE_ASSERTIONS"
                ],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        },
        {
          "condBranchCondition": {
            "variable": {
              "flag": "release"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "LambdaHack",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [
                  "-DEXPOSE_INTERNAL"
                ],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        },
        {
          "condBranchCondition": {
            "cond_not": {
              "variable": {
                "flag": "supportnodejs"
              }
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "LambdaHack",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  [
                    "-DREMOVE_TELETYPE"
                  ]
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        },
        {
          "condBranchCondition": {
            "cond_not": {
              "variable": {
                "flag": "supportnodejs"
              }
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "LambdaHack",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  [
                    "-DGHCJS_BROWSER"
                  ]
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    }
  },
  "test-suites": {
    "test": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Spec.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [
            [
              "ActorStateUnitTests"
            ],
            [
              "CommonMUnitTests"
            ],
            [
              "HandleHelperMUnitTests"
            ],
            [
              "HandleHumanLocalMUnitTests"
            ],
            [
              "InventoryMUnitTests"
            ],
            [
              "ItemDescriptionUnitTests"
            ],
            [
              "ItemKindUnitTests"
            ],
            [
              "ItemRevUnitTests"
            ],
            [
              "LevelUnitTests"
            ],
            [
              "MonadClientUIUnitTests"
            ],
            [
              "ReqFailureUnitTests"
            ],
            [
              "SessionUIMock"
            ],
            [
              "SessionUIUnitTests"
            ],
            [
              "UnitTestHelpers"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "MonoLocalBinds"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "OverloadedStrings"
            },
            {
              "enable-extension": "BangPatterns"
            },
            {
              "enable-extension": "RecordWildCards"
            },
            {
              "enable-extension": "NamedFieldPuns"
            },
            {
              "enable-extension": "MultiWayIf"
            },
            {
              "enable-extension": "LambdaCase"
            },
            {
              "enable-extension": "DefaultSignatures"
            },
            {
              "enable-extension": "InstanceSigs"
            },
            {
              "enable-extension": "PatternSynonyms"
            },
            {
              "enable-extension": "StrictData"
            },
            {
              "enable-extension": "CPP"
            },
            {
              "enable-extension": "TypeApplications"
            }
          ],
          "otherExtensions": [
            {
              "enable-extension": "TemplateHaskell"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "RankNTypes"
            },
            {
              "enable-extension": "TypeFamilies"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "DeriveFunctor"
            },
            {
              "enable-extension": "FunctionalDependencies"
            },
            {
              "enable-extension": "GeneralizedNewtypeDeriving"
            },
            {
              "enable-extension": "TupleSections"
            },
            {
              "enable-extension": "DeriveFoldable"
            },
            {
              "enable-extension": "DeriveTraversable"
            },
            {
              "enable-extension": "ExistentialQuantification"
            },
            {
              "enable-extension": "GADTs"
            },
            {
              "enable-extension": "StandaloneDeriving"
            },
            {
              "enable-extension": "DataKinds"
            },
            {
              "enable-extension": "KindSignatures"
            },
            {
              "enable-extension": "DeriveGeneric"
            },
            {
              "enable-extension": "DeriveLift"
            }
          ],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-Wcompat",
              "-Worphans",
              "-Wincomplete-uni-patterns",
              "-Wincomplete-record-updates",
              "-Wimplicit-prelude",
              "-Wmissing-home-modules",
              "-Widentities",
              "-Wredundant-constraints",
              "-Wmissing-export-lists",
              "-Wpartial-fields",
              "-Wunused-packages",
              "-Winvalid-haddock",
              "-fno-ignore-asserts",
              "-rtsopts",
              "-with-rtsopts=-A99m -I5"
            ],
            [
              "-DUSE_JSFILE",
              "-DGHCJS_GC_INTERVAL=10000",
              "-DGHCJS_BUSY_YIELD=50",
              "-dedupe"
            ]
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "LambdaHack",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "enummapset",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "optparse-applicative",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "splitmix",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": ">=1.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-quickcheck",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-hunit",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "vector",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "LambdaHack",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "enummapset",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "optparse-applicative",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "splitmix",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": ">=1.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-quickcheck",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-hunit",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "vector",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "variable": {
              "flag": "with_costly_optimizations"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "",
              "interface": {
                "type": {
                  "name": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [
                    "-fexpose-all-unfoldings",
                    "-fspecialise-aggressively",
                    "-fsimpl-tick-factor=200"
                  ],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        },
        {
          "condBranchCondition": {
            "variable": {
              "flag": "with_expensive_assertions"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "",
              "interface": {
                "type": {
                  "name": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [
                  "-DWITH_EXPENSIVE_ASSERTIONS"
                ],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        },
        {
          "condBranchCondition": {
            "variable": {
              "flag": "release"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "",
              "interface": {
                "type": {
                  "name": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [
                  "-DEXPOSE_INTERNAL"
                ],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        },
        {
          "condBranchCondition": {
            "cond_not": {
              "variable": {
                "flag": "supportnodejs"
              }
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "",
              "interface": {
                "type": {
                  "name": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  [
                    "-DREMOVE_TELETYPE"
                  ]
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        },
        {
          "condBranchCondition": {
            "cond_not": {
              "variable": {
                "flag": "supportnodejs"
              }
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "",
              "interface": {
                "type": {
                  "name": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  [
                    "-DGHCJS_BROWSER"
                  ]
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    }
  }
}
