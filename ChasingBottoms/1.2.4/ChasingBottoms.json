{
  "description": {
    "spec-version": {
      "Right": ">=1.2 && <2"
    },
    "package": {
      "name": "ChasingBottoms",
      "version": [
        1,
        2,
        4
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "LICENCE"
    ],
    "copyright": "Copyright (c) Nils Anders Danielsson 2004-2008.",
    "maintainer": "http://www.cs.nott.ac.uk/~nad/contact.html",
    "author": "Nils Anders Danielsson",
    "stability": "experimental",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==6.8.2"
      }
    ],
    "homepage": "http://www.cs.nott.ac.uk/~nad/software/#Chasing Bottoms",
    "pkg-url": "http://www.cs.nott.ac.uk/~nad/software/ChasingBottoms/ChasingBottoms.tgz",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "For testing partial and infinite values.",
    "description": "Do you ever feel the need to test code involving bottoms (e.g. calls to\nthe @error@ function), or code involving infinite values? Then this\nlibrary could be useful for you.\n\nIt is usually easy to get a grip on bottoms by showing a value and\nwaiting to see how much gets printed before the first exception is\nencountered. However, that quickly gets tiresome and is hard to automate\nusing e.g. QuickCheck\n(<http://www.cs.chalmers.se/~rjmh/QuickCheck/>). With this library you\ncan do the tests as simply as the following examples show.\n\nTesting explicitly for bottoms:\n\n[@> isBottom (head [\\])@] @True@\n\n[@> isBottom bottom@] @True@\n\n[@> isBottom (\\\\_ -> bottom)@] @False@\n\n[@> isBottom (bottom, bottom)@] @False@\n\nComparing finite, partial values:\n\n[@> ((bottom, 3) :: (Bool, Int)) ==! (bottom, 2+5-4)@] @True@\n\n[@> ((bottom, bottom) :: (Bool, Int)) <! (bottom, 8)@] @True@\n\nShowing partial and infinite values (@\\\\\\/!@ is join and @\\/\\\\!@ is meet):\n\n[@> approxShow 4 $ (True, bottom) \\\\\\/! (bottom, \\'b\\')@] @\\\"Just (True, \\'b\\')\\\"@\n\n[@> approxShow 4 $ (True, bottom) \\/\\\\! (bottom, \\'b\\')@] @\\\"(_|_, _|_)\\\"@\n\n[@> approxShow 4 $ ([1..\\] :: [Int\\])@] @\\\"[1, 2, 3, _\\\"@\n\n[@> approxShow 4 $ (cycle [bottom\\] :: [Bool\\])@] @\\\"[_|_, _|_, _|_, _\\\"@\n\nApproximately comparing infinite, partial values:\n\n[@> approx 100 [2,4..\\] ==! approx 100 (filter even [1..\\] :: [Int\\])@] @True@\n\n[@> approx 100 [2,4..\\] \\/=! approx 100 (filter even [bottom..\\] :: [Int\\])@] @True@\n\nThe code above relies on the fact that @bottom@, just as @error\n\\\"...\\\"@, @undefined@ and pattern match failures, yield\nexceptions. Sometimes we are dealing with properly non-terminating\ncomputations, such as the following example, and then it can be nice to\nbe able to apply a time-out:\n\n[@> timeOut' 1 (reverse [1..5\\]) >>= print@] @Value [5,4,3,2,1]@\n\n[@> timeOut' 1 (reverse [1..\\]) >>= print@] @NonTermination@\n\nThe time-out functionality can be used to treat \\\"slow\\\" computations as\nbottoms:\n\n[@> let tweak = Tweak &#x7b; approxDepth = Just 5, timeOutLimit = Just 2 &#x7d;@]\n\n[@> semanticEq tweak (reverse [1..\\], [1..\\]) (bottom :: [Int\\], [1..\\] :: [Int\\])@] @True@\n\n[@> let tweak = noTweak &#x7b; timeOutLimit = Just 2 &#x7d;@]\n\n[@> semanticJoin tweak (reverse [1..\\], True) ([\\] :: [Int\\], bottom)@] @Just ([],True)@\n\nThis can of course be dangerous:\n\n[@> let tweak = noTweak &#x7b; timeOutLimit = Just 0 &#x7d;@]\n\n[@> semanticEq tweak (reverse [1..100000000\\]) (bottom :: [Integer\\])@] @True@\n\nTimeouts can also be applied to @IO@ computations:\n\n[@> let primes = unfoldr (\\\\(x:xs) -> Just (x, filter ((\\/= 0) . (\\`mod\\` x)) xs)) [2..\\]@]\n\n[@> timeOutMicro 100 (print $ filter ((== 1) . (\\`mod\\` 83)) primes) >>= print@] @[167,499NonTermination@\n\n[@> timeOutMicro 100 (print $ take 4 $ filter ((== 1) . (\\`mod\\` 83)) primes) >>= print@] @[167,499,997NonTermination@\n\n[@> timeOutMicro 100 (print $ take 4 $ filter ((== 1) . (\\`mod\\` 83)) primes) >>= print@] @[167,499,997,1163]@\n\n[@ @] @Value ()@\n\nAll the type annotations above are required.\n\nFor the underlying theory and a larger example involving use of\nQuickCheck, see the article \\\"Chasing Bottoms, A Case Study in Program\nVerification in the Presence of Partial and Infinite Values\\\"\n(<http://www.cs.nott.ac.uk/~nad/publications/danielsson-jansson-mpc2004.html>).\n\nThe code has been tested under GHC 6.8. Most parts can probably be\nported to other Haskell compilers, but that would require some work.\nThe @TimeOut@ functions require preemptive scheduling, and most of the\nrest requires @Data.Generics@; @isBottom@ only requires exceptions,\nthough.",
    "category": "Testing",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "package-flags": [
    {
      "name": "small_base",
      "description": "Choose the new smaller, split-up base package.",
      "default": true,
      "manual": false
    }
  ],
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Test",
          "ChasingBottoms"
        ],
        [
          "Test",
          "ChasingBottoms",
          "Approx"
        ],
        [
          "Test",
          "ChasingBottoms",
          "ApproxShow"
        ],
        [
          "Test",
          "ChasingBottoms",
          "ContinuousFunctions"
        ],
        [
          "Test",
          "ChasingBottoms",
          "IsBottom"
        ],
        [
          "Test",
          "ChasingBottoms",
          "Nat"
        ],
        [
          "Test",
          "ChasingBottoms",
          "SemanticOrd"
        ],
        [
          "Test",
          "ChasingBottoms",
          "TimeOut"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [
          [
            "Test",
            "ChasingBottoms",
            "IsType"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "QuickCheck",
            "version-range": ">=1.1 && <2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=1.1 && <2",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "QuickCheck",
        "version-range": ">=1.1 && <2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=1.1 && <2",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "variable": {
            "flag": "small_base"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [
                {
                  "package-name": "base",
                  "version-range": ">=3 && <4",
                  "library": [
                    {}
                  ]
                },
                {
                  "package-name": "containers",
                  "version-range": ">=0.1 && <1",
                  "library": [
                    {}
                  ]
                },
                {
                  "package-name": "random",
                  "version-range": ">=1 && <2",
                  "library": [
                    {}
                  ]
                }
              ],
              "mixins": []
            }
          },
          "condTreeConstraints": [
            {
              "package-name": "base",
              "version-range": ">=3 && <4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.1 && <1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "random",
              "version-range": ">=1 && <2",
              "library": [
                {}
              ]
            }
          ],
          "condTreeComponents": []
        },
        "condBranchIfFalse": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [
                {
                  "package-name": "base",
                  "version-range": ">=2 && <3",
                  "library": [
                    {}
                  ]
                }
              ],
              "mixins": []
            }
          },
          "condTreeConstraints": [
            {
              "package-name": "base",
              "version-range": ">=2 && <3",
              "library": [
                {}
              ]
            }
          ],
          "condTreeComponents": []
        }
      }
    ]
  }
}
