name:                rl-satton
version:             0.1.2.3
author:              Sergey Mironov
maintainer:          grrwlf@gmail.com
category:            Machine Learning
license:             BSD3
license-file:        LICENSE
build-type:          Simple
cabal-version:       >=1.10
copyright:           Copyright (c) 2016, Sergey Mironov
homepage:            https://github.com/grwlf/rl
synopsis:            Collection of Reinforcement Learning algorithms
description:
  rl-satton provides implementation of algorithms, described in the
  'Reinforcement Learing: An Introduction' book by Richard S. Satton and Andrew
  G. Barto. In particular, TD(0), TD(lambda), Q-learing are implemented.
  Code readability was placed above performance.

  Usage examples are provided in the ./examples folder.

library
  default-language: Haskell2010
  hs-source-dirs:   src
  exposed-modules:
    RL.DP
    RL.MC
    RL.TD
    RL.TDl
    RL.Imports
    RL.Types
    RL.Utils
    Graphics.TinyPlot
    Control.Monad.Rnd

  other-modules:
    Control.Break_RL
    Text.Heredoc_RL

  default-extensions:
    LambdaCase,
    NondecreasingIndentation,
    Rank2Types,
    ViewPatterns,
    ScopedTypeVariables,
    FlexibleInstances,
    FlexibleContexts,
    DataKinds,
    RecordWildCards,
    MultiParamTypeClasses,
    FunctionalDependencies,
    TemplateHaskell,
    QuasiQuotes,
    KindSignatures,
    TupleSections,
    DeriveGeneric

  build-depends:
    base >=4.8 && <5,
    containers,
    mtl,
    MonadRandom,
    transformers,
    monad-loops,
    lens,
    random,
    process,
    filepath,
    mersenne-random-pure64,
    stm,
    pretty-show,
    time,
    directory,
    text,
    hashable,
    unordered-containers,
    parsec,
    template-haskell

executable example
  default-language: Haskell2010
  hs-source-dirs:   examples
  main-is:          Main.hs
  build-depends:    base >=4.8 && <5,
                    rl-satton,
                    containers,
                    unordered-containers,
                    mtl

  default-extensions:
    LambdaCase,
    NondecreasingIndentation,
    Rank2Types,
    ViewPatterns,
    ScopedTypeVariables,
    FlexibleInstances,
    FlexibleContexts,
    DataKinds,
    RecordWildCards,
    MultiParamTypeClasses,
    FunctionalDependencies,
    TemplateHaskell,
    QuasiQuotes,
    KindSignatures,
    TupleSections,
    DeriveGeneric


