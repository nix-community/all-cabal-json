name:                tak
version:             0.1.0.0
synopsis:            A library encoding the rules of Tak, and a playtak.com client.
description:
    Tak is a new abstract strategy game, devised by James Earnest (of Cheapass
    Games), and Patrick Rothfuss, author of The Wise Man's Fear, where the game of
    Tak was first mentioned.

    This is a library which encodes the rules of Tak, provides a client for the
    popular playtak.com server, and contributes an AI tak bot for the same server.

    This package provides 3 top level modules:

    Tak encodes the rules of Tak, as a game tree, containing all possible moves.
    This tree is extremely large, so be careful not to strictly evaluate it!

    PlayTak provides functions for maintaining a connection to playtak.com, receiving
    messages, and sending commands. This could be used to implement a
    fully-fledged game client, or a playtak.com bot.

    PlayTakBot is a framework to make it easy to build a playtak.com bot. It will
    maintain a connection, seek games, and create a game tree. The bot implementor
    just needs to provide functions to evaluate a game state, and choose the next
    play from each game state.

homepage:            http://bitbucket.org/sffubs/tak
license:             BSD2
license-file:        LICENSE
author:              Henry Bucklow
maintainer:          henry@elsie.org.uk
-- copyright:           
category:            Game
build-type:          Simple
cabal-version:       >=1.8

library
  hs-source-dirs: src
  exposed-modules: Tak, PlayTak, PlayTakBot
  other-modules: Tak.ApplyPlay, Tak.Init, Tak.ParsePTN, Tak.PossiblePlays,
    Tak.ShowPTN, Tak.Tree, Tak.Types, Tak.Win
    PlayTak.Commands, PlayTak.Parser, PlayTak.Types
  ghc-options: -Wall -O2
  build-depends: base < 5, matrix, network, safe, parsec, hslogger, bytestring, random-shuffle, hashable
  
test-suite tests
  hs-source-dirs: src
  ghc-options: -Wall
  type: exitcode-stdio-1.0
  main-is: tests.hs
  build-depends: base < 5, matrix, network, safe, parsec, hslogger, bytestring, random-shuffle, hashable, HUnit
