name : fltkhs
version : 0.3.0.1
synopsis : FLTK bindings
description:
    Low level bindings for the FLTK GUI toolkit.
license : MIT
license-file : LICENSE
author : Aditya Siram
maintainer: aditya.siram@gmail.com
homepage: http://github.com/deech/fltkhs
-- bug-reports:
-- copyright:
category: UI,Graphics
build-type: Custom
cabal-version: >=1.20
source-repository head
  type: git
  location: http://github.com/deech/fltkhs
library
  exposed-modules:
                   Graphics.UI.FLTK.LowLevel.FLTKHS
                   Graphics.UI.FLTK.LowLevel.Ask
                   Graphics.UI.FLTK.LowLevel.GlWindow
                   Graphics.UI.FLTK.LowLevel.SingleWindow
                   Graphics.UI.FLTK.LowLevel.Window
                   Graphics.UI.FLTK.LowLevel.DoubleWindow
                   Graphics.UI.FLTK.LowLevel.OverlayWindow
                   Graphics.UI.FLTK.LowLevel.Button
                   Graphics.UI.FLTK.LowLevel.LightButton
                   Graphics.UI.FLTK.LowLevel.RadioLightButton
                   Graphics.UI.FLTK.LowLevel.CheckButton
                   Graphics.UI.FLTK.LowLevel.ReturnButton
                   Graphics.UI.FLTK.LowLevel.RoundButton
                   Graphics.UI.FLTK.LowLevel.RepeatButton
                   Graphics.UI.FLTK.LowLevel.ToggleButton
                   Graphics.UI.FLTK.LowLevel.Fl_Enumerations
                   Graphics.UI.FLTK.LowLevel.Fl_Types
                   Graphics.UI.FLTK.LowLevel.Dispatch
                   Graphics.UI.FLTK.LowLevel.Hierarchy
                   Graphics.UI.FLTK.LowLevel.Group
                   Graphics.UI.FLTK.LowLevel.Widget
                   Graphics.UI.FLTK.LowLevel.Box
                   Graphics.UI.FLTK.LowLevel.Clock
                   Graphics.UI.FLTK.LowLevel.Valuator
                   Graphics.UI.FLTK.LowLevel.Slider
                   Graphics.UI.FLTK.LowLevel.HorSlider
                   Graphics.UI.FLTK.LowLevel.FillSlider
                   Graphics.UI.FLTK.LowLevel.HorFillSlider
                   Graphics.UI.FLTK.LowLevel.HorNiceSlider
                   Graphics.UI.FLTK.LowLevel.HorValueSlider
                   Graphics.UI.FLTK.LowLevel.NiceSlider
                   Graphics.UI.FLTK.LowLevel.MenuItem
                   Graphics.UI.FLTK.LowLevel.MenuPrim
                   Graphics.UI.FLTK.LowLevel.Browser
                   Graphics.UI.FLTK.LowLevel.SelectBrowser
                   Graphics.UI.FLTK.LowLevel.SysMenuBar
                   Graphics.UI.FLTK.LowLevel.Choice
                   Graphics.UI.FLTK.LowLevel.MenuButton
                   Graphics.UI.FLTK.LowLevel.Image
                   Graphics.UI.FLTK.LowLevel.Bitmap
                   Graphics.UI.FLTK.LowLevel.Pixmap
                   Graphics.UI.FLTK.LowLevel.Draw
                   Graphics.UI.FLTK.LowLevel.CopySurface
                   Graphics.UI.FLTK.LowLevel.ImageSurface
                   Graphics.UI.FLTK.LowLevel.Adjuster
                   Graphics.UI.FLTK.LowLevel.Dial
                   Graphics.UI.FLTK.LowLevel.FillDial
                   Graphics.UI.FLTK.LowLevel.LineDial
                   Graphics.UI.FLTK.LowLevel.Roller
                   Graphics.UI.FLTK.LowLevel.Counter
                   Graphics.UI.FLTK.LowLevel.SimpleCounter
                   Graphics.UI.FLTK.LowLevel.Scrollbar
                   Graphics.UI.FLTK.LowLevel.Scrolled
                   Graphics.UI.FLTK.LowLevel.ValueSlider
                   Graphics.UI.FLTK.LowLevel.ValueInput
                   Graphics.UI.FLTK.LowLevel.ValueOutput
                   Graphics.UI.FLTK.LowLevel.Timer
                   Graphics.UI.FLTK.LowLevel.Progress
                   Graphics.UI.FLTK.LowLevel.Positioner
                   Graphics.UI.FLTK.LowLevel.Input
                   Graphics.UI.FLTK.LowLevel.Output
                   Graphics.UI.FLTK.LowLevel.IntInput
                   Graphics.UI.FLTK.LowLevel.Wizard
                   Graphics.UI.FLTK.LowLevel.Table
                   Graphics.UI.FLTK.LowLevel.TableRow
                   Graphics.UI.FLTK.LowLevel.TreePrefs
                   Graphics.UI.FLTK.LowLevel.TreeItem
                   Graphics.UI.FLTK.LowLevel.Tree
                   Graphics.UI.FLTK.LowLevel.FL
                   Graphics.UI.FLTK.LowLevel.Gl
                   Graphics.UI.FLTK.LowLevel.TextSelection
                   Graphics.UI.FLTK.LowLevel.TextBuffer
                   Graphics.UI.FLTK.LowLevel.TextDisplay
                   Graphics.UI.FLTK.LowLevel.TextEditor
                   Graphics.UI.FLTK.LowLevel.NativeFileChooser
                   Graphics.UI.FLTK.LowLevel.Utils
                   Graphics.UI.FLTK.LowLevel.Tile
                   Graphics.UI.FLTK.LowLevel.Pack
                   Graphics.UI.FLTK.LowLevel.Tabs
                   Graphics.UI.FLTK.LowLevel.Spinner
                   Graphics.UI.FLTK.LowLevel.ColorChooser
  build-depends:
                base == 4.*,
                bytestring
  build-tools: c2hs
  hs-source-dirs: src
  other-modules: C2HS
  include-dirs: ./c-src, ./
  default-extensions: GADTs
  default-language: Haskell2010
  ghc-options: -Wall -fcontext-stack=300
  if impl(ghc >= 7.10.2)
     cpp-options: -DCALLSTACK_AVAILABLE
  if impl(ghc >= 7.10)
     cpp-options: -DOVERLAPPING_INSTANCES_DEPRECATED

Executable fltkhs-fluidtohs
  Main-Is: Main.hs
  Hs-Source-Dirs: src/Fluid
  Build-Depends:
    base == 4.*,
    filepath,
    fltkhs,
    parsec >= 3.1.6,
    mtl
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Flag FastCompile
   Description: Turn off optimizations for faster compilation
   Manual: True
   Default: True

Executable fltkhs-pack
  Main-Is: pack.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    directory,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-tile
  Main-Is: tile.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    directory,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-nativefilechooser-simple-app
  Main-Is: nativefilechooser-simple-app.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    directory,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-table-as-container
  Main-Is: table-as-container.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-texteditor-simple
  Main-Is: texteditor-simple.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-textdisplay-with-colors
  Main-Is: textdisplay-with-colors.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-doublebuffer
  Main-Is: doublebuffer.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-make-tree
  Main-Is: make-tree.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-tree-simple
  Main-Is: tree-simple.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-table-spreadsheet-with-keyboard-nav
  Main-Is: table-spreadsheet-with-keyboard-nav.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-test_call
  Main-Is: TestCall.hs
  Hs-Source-Dirs: src/TestPrograms
  Build-Depends:
    base == 4.*,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-buttons
  Main-Is: Buttons.hs
  Hs-Source-Dirs: src/TestPrograms
  Build-Depends:
    base == 4.*,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-table-simple
  Main-Is: table-simple.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-table-sort
  Main-Is: table-sort.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs,
    process
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-arc
  Main-Is: arc.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
    base == 4.*,
    fltkhs
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-bitmap
  Main-Is: bitmap.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
     base == 4.*,
     fltkhs,bytestring
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-boxtype
  Main-Is: boxtype.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
     base == 4.*,
     fltkhs,bytestring
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-browser
  Main-Is: browser.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
     base == 4.*,
     fltkhs,
     bytestring
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"

Executable fltkhs-clock
  Main-Is: clock.hs
  Hs-Source-Dirs: src/Examples
  Build-Depends:
     base == 4.*,
     fltkhs,
     bytestring
  default-language: Haskell2010
  ghc-Options: -Wall -threaded -fcontext-stack=300
  if impl(ghc >= 7.10) && flag(FastCompile)
     ghc-Options: -fno-specialise -fmax-simplifier-iterations=0 -fsimplifier-phases=0
  if !os(darwin)
    ghc-Options: -pgml g++ "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"
