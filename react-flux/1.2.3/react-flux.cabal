name:                react-flux
version:             1.2.3
synopsis:            A binding to React based on the Flux application architecture for GHCJS
category:            Web
homepage:            https://bitbucket.org/wuzzeb/react-flux
license:             BSD3
license-file:        LICENSE
author:              John Lenz <wuzzeb@gmail.com>
maintainer:          John Lenz <wuzzeb@gmail.com>
build-type:          Simple
description:         See the README below.
cabal-version:       >=1.10

extra-source-files:
    ChangeLog.md,
    README.md,
    Makefile,
    example/README.md,
    example/css/*.css,
    example/css/bg.png,
    example/todo/*.hs,
    example/todo/*.html,
    example/todo/run-in-node.js,
    example/routing/*.hs,
    example/routing/*.html,
    example/purecss-side-menu/*.hs,
    example/purecss-side-menu/*.html,
    test/client/*.html,
    test/client/msgs/*.json,
    test/client/msgs/*.xml,
    test/spec/react-flux-spec.cabal,
    test/spec/stack.yaml,
    test/spec/*.hs

source-repository head
    type: mercurial
    location: https://bitbucket.org/wuzzeb/react-flux

Flag example
    Description: Build the TODO example application
    Default: False

Flag test-client
    Description: Build the test client application
    Default: False

library
  hs-source-dirs:      src
  ghc-options: -Wall
  default-language: Haskell2010
  js-sources: jsbits/views.js
              jsbits/store.js
              jsbits/export.js
              jsbits/callback.js
              jsbits/ajax.js
              jsbits/native.js

  exposed-modules: React.Flux
                   React.Flux.DOM
                   React.Flux.PropertiesAndEvents
                   React.Flux.Combinators
                   React.Flux.Lifecycle
                   React.Flux.Ajax
                   React.Flux.Internal
                   React.Flux.Addons.React
                   React.Flux.Addons.Bootstrap
                   React.Flux.Addons.Intl

  other-modules: React.Flux.Views
                 React.Flux.Store
                 React.Flux.Export

  default-extensions: CPP
                      EmptyDataDecls
                      ExistentialQuantification
                      FlexibleContexts
                      FlexibleInstances
                      FunctionalDependencies
                      GeneralizedNewtypeDeriving
                      MultiParamTypeClasses
                      DeriveGeneric
                      OverloadedStrings
                      ScopedTypeVariables
                      TypeFamilies

  build-depends: base >=4.8 && < 5
               , deepseq
               , mtl >= 2.1
               , aeson >= 0.8
               , text >= 1.2
               , time >= 1.5
               , unordered-containers
               , bytestring
               , template-haskell >= 2.10

  if impl(ghcjs)
      build-depends: ghcjs-base

executable todo
   if !flag(example)
        Buildable: False
   ghc-options: -Wall
   cpp-options: -DGHCJS_BROWSER

   default-language: Haskell2010
   hs-source-dirs: example/todo
   main-is: Main.hs
   build-depends: base
                , react-flux
                , deepseq
                , text
   if impl(ghcjs)
      build-depends: ghcjs-base

executable todo-node
   if !flag(example)
        Buildable: False
   ghc-options: -Wall

   default-language: Haskell2010
   hs-source-dirs: example/todo
   main-is: NodeMain.hs
   build-depends: base
                , react-flux
                , deepseq
                , text
   if impl(ghcjs)
      build-depends: ghcjs-base

executable purecss-side-menu
   if !flag(example)
        Buildable: False
   ghc-options: -Wall
   cpp-options: -DGHCJS_BROWSER

   default-language: Haskell2010
   hs-source-dirs: example/purecss-side-menu
   main-is: Main.hs
   build-depends: base
                , react-flux
                , deepseq
   if impl(ghcjs)
      build-depends: ghcjs-base

executable test-client
   if !flag(test-client)
        Buildable: False
   ghc-options: -Wall
   --cpp-options: -DGHCJS_BROWSER

   default-language: Haskell2010
   hs-source-dirs: test/client
   main-is: TestClient.hs
   build-depends: base
                , react-flux
                , time
                , text
                , deepseq
                , aeson
   if impl(ghcjs)
      build-depends: ghcjs-base

executable route-example
   if !flag(example)
        Buildable: False
   ghc-options: -Wall
   cpp-options: -DGHCJS_BROWSER

   default-extensions: CPP
   default-language: Haskell2010
   hs-source-dirs: example/routing
   main-is: Main.hs
   if flag(example)
           build-depends: base
                        , react-flux
                        , time
                        , aeson
                        , text
                        , web-routes
                        , transformers
                        , bytestring
                        , deepseq
   if impl(ghcjs)
      build-depends: ghcjs-base
