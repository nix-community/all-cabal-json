{
  "description": {
    "spec-version": {
      "Left": [
        2,
        4
      ]
    },
    "package": {
      "name": "typelet",
      "version": [
        0,
        1,
        1,
        0
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "BSD_3_Clause"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [],
    "copyright": "Well-Typed LLP, Juspay Technologies Pvt Ltd",
    "maintainer": "edsko@well-typed.com",
    "author": "Edsko de Vries",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==8.8.4 || ==8.10.7 || ==9.0.2 || ==9.2.2"
      }
    ],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "https://github.com/well-typed/typelet/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/well-typed/typelet",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Plugin to faciliate type-level let",
    "description": "For a certain class of programs, type-level let is essential\nin order to be able to write these programs in such a way\nthat they do not result in ghc core that is quadratic in\nsize. Type-level let is not explicitly supported in ghc,\nbut we can encode it. The @typelet@ library provides a\ntype-checker plugin that makes the encoding more convenient\nto use as well as more effective.",
    "category": "Plugin",
    "custom-fields": [],
    "build-type-raw": "Custom",
    "custom-setup": {
      "setup-depends": [
        {
          "package-name": "base",
          "version-range": ">=4 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "cabal-doctest",
          "version-range": ">=1 && <1.1",
          "library": [
            {}
          ]
        }
      ],
      "__defaultSetupDepends": false
    },
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "CHANGELOG.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "package-flags": [
    {
      "name": "build-doctest-examples",
      "description": "Build doctest-examples-typelet (for testing only)",
      "default": false,
      "manual": false
    },
    {
      "name": "include-size-tests",
      "description": "Include size tests in the test suite",
      "default": true,
      "manual": false
    }
  ],
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "TypeLet"
        ],
        [
          "TypeLet",
          "UserAPI"
        ],
        [
          "TypeLet",
          "Plugin"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "TypeLet",
            "Plugin",
            "Constraints"
          ],
          [
            "TypeLet",
            "Plugin",
            "GhcTcPluginAPI"
          ],
          [
            "TypeLet",
            "Plugin",
            "NameResolution"
          ],
          [
            "TypeLet",
            "Plugin",
            "Substitution"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "KindSignatures"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "PolyKinds"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "RecordWildCards"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "TupleSections"
          }
        ],
        "otherExtensions": [
          {
            "enable-extension": "CPP"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.13 && <4.17",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ghc-tcplugin-api",
            "version-range": ">=0.7 && <0.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ghc",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.13 && <4.17",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ghc-tcplugin-api",
        "version-range": ">=0.7 && <0.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ghc",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "executables": {
    "doctest-examples-typelet": {
      "condTreeData": {
        "name": "doctest-examples-typelet",
        "module-path": "DoctestExamplesTypeLet.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "doctest-examples"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "FlexibleContexts"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wwarn"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "typelet",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "typelet",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "cond_not": {
              "variable": {
                "flag": "build-doctest-examples"
              }
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "doctest-examples-typelet",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": false,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    }
  },
  "test-suites": {
    "doctest-typelet": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "DoctestTypeLet.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "doctest"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [
            [
              "x-doctest-components",
              "exe:doctest-examples-typelet"
            ]
          ],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "doctest",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "typelet",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "doctest",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "typelet",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "cond_not": {
              "variable": {
                "flag": "build-doctest-examples"
              }
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "",
              "interface": {
                "type": {
                  "name": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": false,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    },
    "test-typelet": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "TestTypeLet.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [
            [
              "Test",
              "Infra"
            ],
            [
              "Test",
              "Sanity"
            ],
            [
              "Test",
              "WithoutPlugin"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "DataKinds"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "GADTs"
            },
            {
              "enable-extension": "KindSignatures"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "PolyKinds"
            },
            {
              "enable-extension": "RankNTypes"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "StandaloneDeriving"
            },
            {
              "enable-extension": "TypeApplications"
            },
            {
              "enable-extension": "TypeFamilies"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "UndecidableInstances"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "typelet",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-hunit",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-quickcheck",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "typelet",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-hunit",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-quickcheck",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "variable": {
              "flag": "include-size-tests"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "",
              "interface": {
                "type": {
                  "name": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Baseline",
                    "Baseline010"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Baseline",
                    "Baseline020"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Baseline",
                    "Baseline030"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Baseline",
                    "Baseline040"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Baseline",
                    "Baseline050"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Baseline",
                    "Baseline060"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Baseline",
                    "Baseline070"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Baseline",
                    "Baseline080"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Baseline",
                    "Baseline090"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Baseline",
                    "Baseline100"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Index",
                    "Ix010"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Index",
                    "Ix020"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Index",
                    "Ix030"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Index",
                    "Ix040"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Index",
                    "Ix050"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Index",
                    "Ix060"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Index",
                    "Ix070"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Index",
                    "Ix080"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Index",
                    "Ix090"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Index",
                    "Ix100"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Let",
                    "Let010"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Let",
                    "Let020"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Let",
                    "Let030"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Let",
                    "Let040"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Let",
                    "Let050"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Let",
                    "Let060"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Let",
                    "Let070"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Let",
                    "Let080"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Let",
                    "Let090"
                  ],
                  [
                    "Test",
                    "Size",
                    "Ap",
                    "Let",
                    "Let100"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Baseline",
                    "Baseline010"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Baseline",
                    "Baseline020"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Baseline",
                    "Baseline030"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Baseline",
                    "Baseline040"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Baseline",
                    "Baseline050"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Baseline",
                    "Baseline060"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Baseline",
                    "Baseline070"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Baseline",
                    "Baseline080"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Baseline",
                    "Baseline090"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Baseline",
                    "Baseline100"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Index",
                    "Ix010"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Index",
                    "Ix020"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Index",
                    "Ix030"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Index",
                    "Ix040"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Index",
                    "Ix050"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Index",
                    "Ix060"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Index",
                    "Ix070"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Index",
                    "Ix080"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Index",
                    "Ix090"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "Index",
                    "Ix100"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAs",
                    "LetAs010"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAs",
                    "LetAs020"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAs",
                    "LetAs030"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAs",
                    "LetAs040"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAs",
                    "LetAs050"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAs",
                    "LetAs060"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAs",
                    "LetAs070"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAs",
                    "LetAs080"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAs",
                    "LetAs090"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAs",
                    "LetAs100"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAsCPS",
                    "LetAsCPS010"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAsCPS",
                    "LetAsCPS020"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAsCPS",
                    "LetAsCPS030"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAsCPS",
                    "LetAsCPS040"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAsCPS",
                    "LetAsCPS050"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAsCPS",
                    "LetAsCPS060"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAsCPS",
                    "LetAsCPS070"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAsCPS",
                    "LetAsCPS080"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAsCPS",
                    "LetAsCPS090"
                  ],
                  [
                    "Test",
                    "Size",
                    "HList",
                    "LetAsCPS",
                    "LetAsCPS100"
                  ]
                ],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    }
  }
}
