{
  "description": {
    "spec-version": {
      "Left": [
        2,
        4
      ]
    },
    "package": {
      "name": "MiniAgda",
      "version": [
        0,
        2022,
        3,
        11
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "MIT"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Andreas Abel <andreas.abel@cse.gu.se>",
    "author": "Andreas Abel and Karl Mehltretter",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==9.2.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.0.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.10.7"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.8.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.6.5"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.4.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.2.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.0.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.10.3"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.8.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.6.3"
      }
    ],
    "homepage": "http://www.cse.chalmers.se/~abela/miniagda/",
    "pkg-url": "",
    "bug-reports": "https://github.com/andreasabel/miniagda/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/andreasabel/miniagda",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "A toy dependently typed programming language with type-based termination.",
    "description": "MiniAgda is a tiny dependently-typed programming language in the style\nof Agda. It serves as a laboratory to test potential additions to the\nlanguage and type system of Agda. MiniAgda's termination checker is a\nfusion of sized types and size-change termination and supports\ncoinduction. Equality incorporates eta-expansion at record and\nsingleton types. Function arguments can be declared as static; such\narguments are discarded during equality checking and compilation.\nRecent features include bounded size quantification and destructor\npatterns for a more general handling of coinduction.",
    "category": "Dependent types",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [
      "test/fail/Makefile",
      "test/succeed/Makefile",
      "test/**/*.ma",
      "test/*.goldplate",
      "test/**/*.golden",
      "test/**/*.err",
      "lib/*.ma"
    ],
    "data-dir": ".",
    "extra-source-files": [
      "CHANGELOG",
      "README.md",
      "Makefile",
      "src/Makefile"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "executables": {
    "miniagda": {
      "condTreeData": {
        "name": "miniagda",
        "module-path": "Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [
            {
              "package-name": "happy",
              "executable-component-name": "happy",
              "version-range": ">=1.15 && <2"
            },
            {
              "package-name": "alex",
              "executable-component-name": "alex",
              "version-range": ">=3.0 && <4"
            }
          ],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "src"
          ],
          "otherModules": [
            [
              "Abstract"
            ],
            [
              "Collection"
            ],
            [
              "Concrete"
            ],
            [
              "Eval"
            ],
            [
              "Extract"
            ],
            [
              "HsSyntax"
            ],
            [
              "Lexer"
            ],
            [
              "Parser"
            ],
            [
              "Polarity"
            ],
            [
              "PrettyTCM"
            ],
            [
              "ScopeChecker"
            ],
            [
              "Semiring"
            ],
            [
              "SparseMatrix"
            ],
            [
              "TCM"
            ],
            [
              "Termination"
            ],
            [
              "ToHaskell"
            ],
            [
              "Tokens"
            ],
            [
              "TraceError"
            ],
            [
              "TreeShapedOrder"
            ],
            [
              "TypeChecker"
            ],
            [
              "Util"
            ],
            [
              "Value"
            ],
            [
              "Warshall"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell98",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "CPP"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "TypeSynonymInstances"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "GeneralizedNewtypeDeriving"
            },
            {
              "disable-extension": "MonomorphismRestriction"
            },
            {
              "enable-extension": "PatternGuards"
            },
            {
              "enable-extension": "TupleSections"
            },
            {
              "enable-extension": "NamedFieldPuns"
            },
            {
              "enable-extension": "LambdaCase"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "array",
              "version-range": ">=0.3 && <0.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.6 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.3 && <0.7",
              "library": [
                {}
              ]
            },
            {
              "package-name": "haskell-src-exts",
              "version-range": ">=1.21 && <1.22",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": ">=2.2.2 && <2.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "pretty",
              "version-range": ">=1.0 && <1.2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "array",
          "version-range": ">=0.3 && <0.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.6 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.3 && <0.7",
          "library": [
            {}
          ]
        },
        {
          "package-name": "haskell-src-exts",
          "version-range": ">=1.21 && <1.22",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": ">=2.2.2 && <2.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "pretty",
          "version-range": ">=1.0 && <1.2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "variable": {
              "compiler": "GHC",
              "version": ">=8.0"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "miniagda",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [
                    "-Wcompat"
                  ],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        },
        {
          "condBranchCondition": {
            "variable": {
              "compiler": "GHC",
              "version": ">=9.2"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "miniagda",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [
                    "-Wno-incomplete-uni-patterns"
                  ],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    }
  },
  "test-suites": {
    "test": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "GoldplateTests.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [
            {
              "package-name": "goldplate",
              "executable-component-name": "goldplate",
              "version-range": ">=0.2"
            },
            {
              "package-name": "MiniAgda",
              "executable-component-name": "miniagda",
              "version-range": "-any"
            }
          ],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-threaded"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4.11",
              "library": [
                {}
              ]
            },
            {
              "package-name": "process",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4.11",
          "library": [
            {}
          ]
        },
        {
          "package-name": "process",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
