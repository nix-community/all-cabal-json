{
  "description": {
    "spec-version": {
      "Left": [
        2,
        0
      ]
    },
    "package": {
      "name": "servant-serf",
      "version": [
        0,
        3,
        1,
        4
      ]
    },
    "license": {
      "Right": "MIT"
    },
    "license-files": [
      "LICENSE.markdown"
    ],
    "copyright": "",
    "maintainer": "ACI Learning",
    "author": "",
    "stability": "",
    "tested-with": [],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/acilearning/servant-serf",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Automatically generate Servant API modules.",
    "description": "= servant-serf\n\nservant-serf is a preprocessor for GHC that automatically generates Servant\nAPI modules. It is similar to the @hspec-discover@ package.\n\n== Example input\n\n> {-# OPTIONS_GHC -F -pgmF servant-serf #-}\n\n== Example output\n\n> {-# LINE 1 \"Example.hs\" #-}\n> {-# OPTIONS_GHC -w #-}\n>\n> module Example where\n>\n> import qualified Servant\n>\n> import qualified Example.One\n> import qualified Example.Two\n>\n> type API\n>   = Example.One.API\n>   Servant.:<|> Example.Two.API\n>\n> server\n>   = Example.One.server\n>   Servant.:<|> Example.Two.server\n\n== Options\n\nTo pass options into servant-serf, use @-optF@. For example:\n\n> {-# OPTIONS_GHC -F -pgmF servant-serf -optF --depth=shallow #-}\n\n- @--module-name=STRING@: Sets the name to use for the generated module. By\ndefault this is determined from the source file path. For example @src/X.hs@\nwould use the module name @X@.\n\n- @--depth=deep|shallow@: Controls whether to search through only one\ndierctory (@shallow@) or recursively (@deep@). Defaults to @deep@.\n\n- @--api-name=STRING@: Sets the name to use for the API type. Defaults to\n@API@. Note that the same name is used for both referenced API types and the\ngenerated API type.\n\n- @--server-name=STRING@: Sets the name to use for the server value. Defaults\nto @server@. Note that the same name is used for both referenced server\nvalues and the generated server value.\n\n== Notes\n\n- The input module is completely ignored.\n\n- Modules are sorted by name. There is no way to customize how they are\nsorted.\n\n- All modules below the current module are included. There is no way to\ncustomize which modules are included or excluded.\n\n- The generated server value does not have a type signature. It should have\ntype @Servant.ServerT API m@ for some @m@, but that @m@ can change and is\neasily inferred by GHC.",
    "category": "Web",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "CHANGELOG.markdown",
      "README.markdown"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "package-flags": [
    {
      "name": "pedantic",
      "description": "Enables @-Werror@, which turns warnings into errors.",
      "default": false,
      "manual": true
    }
  ],
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "ServantSerf"
        ],
        [
          "ServantSerf",
          "Directory"
        ],
        [
          "ServantSerf",
          "Exception",
          "ExtraArgument"
        ],
        [
          "ServantSerf",
          "Exception",
          "InvalidDepth"
        ],
        [
          "ServantSerf",
          "Exception",
          "InvalidModuleName"
        ],
        [
          "ServantSerf",
          "Exception",
          "InvalidOption"
        ],
        [
          "ServantSerf",
          "Exception",
          "MissingArgument"
        ],
        [
          "ServantSerf",
          "Exception",
          "UnknownOption"
        ],
        [
          "ServantSerf",
          "Main"
        ],
        [
          "ServantSerf",
          "Module"
        ],
        [
          "ServantSerf",
          "Type",
          "Config"
        ],
        [
          "ServantSerf",
          "Type",
          "Context"
        ],
        [
          "ServantSerf",
          "Type",
          "Depth"
        ],
        [
          "ServantSerf",
          "Type",
          "Flag"
        ],
        [
          "ServantSerf",
          "Type",
          "ModuleName"
        ],
        [
          "ServantSerf",
          "Version"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "source/library"
        ],
        "otherModules": [
          [
            "Paths_servant_serf"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [
          [
            "Paths_servant_serf"
          ]
        ],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Weverything",
            "-Wno-all-missed-specialisations",
            "-Wno-implicit-prelude",
            "-Wno-missing-deriving-strategies",
            "-Wno-missing-export-lists",
            "-Wno-missing-exported-signatures",
            "-Wno-missing-safe-haskell-mode",
            "-Wno-prepositive-qualified-module",
            "-Wno-safe",
            "-Wno-unsafe"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.15.0 && <4.19",
            "library": [
              {}
            ]
          },
          {
            "package-name": "Cabal-syntax",
            "version-range": ">=3.6.0 && <3.11",
            "library": [
              {}
            ]
          },
          {
            "package-name": "directory",
            "version-range": ">=1.3.6 && <1.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "exceptions",
            "version-range": ">=0.10.4 && <0.11",
            "library": [
              {}
            ]
          },
          {
            "package-name": "filepath",
            "version-range": ">=1.4.2 && <1.5",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.15.0 && <4.19",
        "library": [
          {}
        ]
      },
      {
        "package-name": "Cabal-syntax",
        "version-range": ">=3.6.0 && <3.11",
        "library": [
          {}
        ]
      },
      {
        "package-name": "directory",
        "version-range": ">=1.3.6 && <1.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "exceptions",
        "version-range": ">=0.10.4 && <0.11",
        "library": [
          {}
        ]
      },
      {
        "package-name": "filepath",
        "version-range": ">=1.4.2 && <1.5",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "variable": {
            "compiler": "GHC",
            "version": ">=9.2"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [
                  "-Wno-missing-kind-signatures"
                ],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "variable": {
            "flag": "pedantic"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [
                  "-Werror"
                ],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      }
    ]
  },
  "executables": {
    "servant-serf": {
      "condTreeData": {
        "name": "servant-serf",
        "module-path": "Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "source/executable"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-rtsopts",
              "-threaded"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "servant-serf",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "servant-serf",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
