name:             wumpus-core
version:          0.12.0
x-revision: 1
license:          BSD3
license-file:     LICENSE
copyright:        Stephen Tetley <stephen.tetley@gmail.com>
maintainer:       Stephen Tetley <stephen.tetley@gmail.com>
homepage:         http://code.google.com/p/copperbox/
category:         Graphics
synopsis:         Pure Haskell PostScript and SVG generation. 
description:
  Wumpus - (W)riter (M)onad (P)ost (S)cript. 
  .
  Wumpus is a library for generating 2D vector pictures, its 
  salient feature is portability due to no FFI dependencies. 
  It can generate PostScript (EPS) files and SVG files. The 
  generated PostScript code is quite efficient (no unnecessary 
  stack operations) and plain [1].
  .
  Pictures in Wumpus are made from /paths/ and text /labels/. 
  Paths themselves are made from points. The usual affine 
  transformations (rotations, scaling, translations) can be
  applied to all geometric objects. Unlike PostScript there 
  is no notion of a current point, Wumpus builds pictures in a
  coordinate-free style. There is a set of combinators for 
  composing pictures (more-or-less similar to the usual pretty
  printing combinators).
  .
  THE DRAWBACKS...
  .
  For actually drawing pictures, diagrams, etc. Wumpus is very 
  low level. I am working on a complementary package 
  @wumpus-extra@ with higher-level stuff (polygons, arrows etc.)
  but it is far too unstable for Hackage. Preview releases can be
  found at http://code.google.com/p/copperbox/ though.
  .
  Wumpus-core should be fairly stable from now on, except for
  the fact that more modules are exposed than strictly necessary
  this is so their Haddock docs are available. Client\'s should 
  only import the @Wumpus.Core@ module. There may be some name 
  changes etc. that will change interfaces, but Wumpus has 
  been carefully implemented. Some of the design decisions are
  not sophisticated (e.g. how attributes like colour are handled, 
  and the bounding boxes of text labels are calculated), so
  Wumpus might be limited compared to other systems but its 
  design permits a simple implementation - which is a priority. 
  Text encoding is the exception, the current implementation 
  appears reasonable for Latin 1 but I\'m not sure about other 
  character sets, and I might have to revise it significantly.
  .
  /There is no documentation/ - the graphics model used by 
  Wumpus is different to PostScript or SVG, and Wumpus really 
  needs a manual. Unfortunately there isn\'t one yet, and I will 
  be focusing on @wumpus-extra@ for the foreseeable future so a
  manual won\'t be written soon. If you want FFI-free vector
  graphics and Wumpus seems to otherwise fit the task, please 
  email me and I will try to help.
  .
  \[1\] Because the output is simple, straight-line PostScript 
  code it is possible to use GraphicsMagick or similar tools to 
  convert Wumpus'\s EPS files to many other formats (bitmaps). 
 
build-type:         Simple
stability:          highly unstable
cabal-version:      >= 1.2

extra-source-files:
  demo/LabelPic.hs,
  demo/Picture.hs


library
  hs-source-dirs:     src
  build-depends:      base < 5, containers, old-time,
                      wl-pprint, vector-space, 
                      monadLib, xml, dlist, algebra < 0.1, 
                      data-aviary > 0.1.0
                        
  exposed-modules:
    Wumpus.Core,
    Wumpus.Core.AffineTrans,
    Wumpus.Core.BoundingBox,
    Wumpus.Core.Colour,
    Wumpus.Core.FontSize,
    Wumpus.Core.Geometry,
    Wumpus.Core.GraphicsState,
    Wumpus.Core.OutputPostScript,
    Wumpus.Core.OutputSVG,
    Wumpus.Core.Picture,
    Wumpus.Core.PictureInternal,
    Wumpus.Core.PictureLanguage,
    Wumpus.Core.PostScript,
    Wumpus.Core.SVG,
    Wumpus.Core.TextEncoding,
    Wumpus.Core.TextLatin1,
    Wumpus.Core.Utils
  other-modules:
    
  extensions:
    

  ghc-options:
  
  includes: 
  

  
  
