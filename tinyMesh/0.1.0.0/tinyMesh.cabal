-- Initial tinymesh.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                tinyMesh
version:             0.1.0.0
synopsis:            TinyMesh - communicating with auto-meshing sensor network
description:         TinyMesh are modules build on CC11xx TI MCU transceivers
                     that allow for automatic meshing, and remote sensor reading.
                     .
                     Whole sensor network may be orchestrated by a single *gateway*
                     machine that is best connected to internet in order
                     to submit the data to the cloud.
                     .
                     This library is aimed to allow programming such a gateway machine
                     in Haskell, so that it may be Raspberry Pi, or a similar networked
                     ARM device.
                     .
                     Current functionality of the module is limited to querying
                     all the nodes within the mesh.
homepage:            http://github.com/mgajda/tinyMesh
license:             BSD2
license-file:        LICENSE
author:              Michal J. Gajda
maintainer:          mjgajda@gmail.com
stability:           alpha
-- copyright:           
category:            Network
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10
tested-with:         GHC==7.8.3

source-repository head
  type:     git
  location: https://github.com/mgajda/tinyMesh.git

library
  exposed-modules:     Packet.Parse, TinyMesh
  -- Packet.GenericParse,
  -- other-modules:       
  other-extensions:    OverloadedStrings, TypeOperators, DefaultSignatures, FlexibleContexts
  build-depends:       base       >=4.7  && <4.8,
                       bytestring >=0.10 && <0.11,
                       attoparsec >=0.12 && <0.13,
                       hex        >=0.1  && <0.2,
                       serialport >=0.4  && <0.5,
                       unix       >=2.7  && <2.8
  -- hs-source-dirs:      
  default-language:    Haskell2010
