name:                workflow-extra
version:             0.0.1
synopsis:            Utilities (e.g. Googling the clipboard contents) for the `workflow` pacakge
description:         
 .
 Over functions to defined your own custom workflows, which should be shareable across platforms. (for example, the usage of "M-c" ("meta") over "A-c" ("alt") or "C-c" ("control") is encouraged).
 .
 documention at "Workflow.Derived".
 . 
 see the source of "Workflow.Derived.Main" for an example.
 .
 Combine with one of the platform-specific packages (@workflow-osx@, @workflow-windows@, @workflow-x11@, etc) with "Workflow.Derived.Repl" to verify that the bindings behave correctly on your system.
 .
 transitive dependencies:
 .
 <<images/workflow-extra.png>>

homepage:            http://github.com/sboosali/workflow-extra#readme
license:             BSD3
license-file:        LICENSE
author:              Spiros Boosalis
maintainer:          samboosalis@gmail.com
copyright:           2016 Spiros Boosalis
category:            TODO
build-type:          Simple
cabal-version:       >=1.10

-- PVP
-- https://wiki.haskell.org/Package_versioning_policy
-- "A.B is known as the major version number, and C the minor version number."

extra-source-files:
  README.md
  .gitignore
  .travis.yml
  HLint.hs
  stack.yaml
  images/*.png

-- data-files:
--  data/

source-repository head
  type:     git
  location: https://github.com/sboosali/workflow-extra


library
 hs-source-dirs:      sources
 default-language:    Haskell2010
 ghc-options:
  -Wall
  -fwarn-incomplete-uni-patterns
  -fwarn-incomplete-record-updates
  -fwarn-identities
  -fno-warn-unticked-promoted-constructors
 default-extensions: AutoDeriveTypeable DeriveDataTypeable DeriveGeneric
                     DeriveFunctor DeriveFoldable DeriveTraversable
                     LambdaCase EmptyCase TypeOperators PostfixOperators
                     ViewPatterns BangPatterns KindSignatures
                     NamedFieldPuns RecordWildCards TupleSections
                     MultiWayIf DoAndIfThenElse EmptyDataDecls
                     MultiParamTypeClasses FlexibleContexts FlexibleInstances
                     TypeFamilies FunctionalDependencies
                     ScopedTypeVariables StandaloneDeriving

 exposed-modules:
  Workflow.Derived
  Workflow.Derived.Repl

-- other-modules:
  Workflow.Derived.Extra
  Workflow.Derived.Main

 build-depends:
    base >=4.7 && <5

  , workflow-types

  -- ,
  , transformers
  -- , mtl
  -- , containers
  , bytestring
  -- , stm
  -- , template-haskell

  -- ,
  , http-types
  -- , deepseq
  -- , hashable
  -- , semigroups
  -- , lens
  , exceptions
  , free
  -- , bifunctors
  -- , profunctors
  -- , either
  -- , pipes
  -- , formatting
  -- , servant
  , Earley
  -- , split
  -- , interpolatedstring-perl6
  -- , wl-pprint-text
  -- , text
  -- , aeson
  -- , hashable
  -- , unordered-containers
  -- , async
  -- , parallel


-- $ stack build && stack exec -- example-workflow-extra 
executable example-workflow-extra
 hs-source-dirs:      executables
 main-is:             Main.hs

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
    base
  , workflow-extra


-- $ stack test doctest
test-suite doctest
 hs-source-dirs:      tests
 main-is:             DocTest.hs
 type:                exitcode-stdio-1.0

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
    base
  , workflow-extra
  , doctest


-- $ stack test unittest
test-suite unittest
 hs-source-dirs:      tests
 main-is:             UnitTest.hs
 type:                exitcode-stdio-1.0

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 other-modules:
  Workflow.Test

 build-depends:
    base
  , workflow-extra
  , hspec 
  , QuickCheck 
  -- , tasty
  -- , tasty-quickcheck


-- $ stack bench
benchmark command
 hs-source-dirs:      benchmarks
 main-is:             Bench.hs
 type:                exitcode-stdio-1.0

 default-language: Haskell2010
 ghc-options:      -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
    base
  , workflow-extra
  , criterion
  , deepseq
