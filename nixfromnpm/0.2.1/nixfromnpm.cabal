name:                nixfromnpm
version:             0.2.1
synopsis:            Generate nix expressions from npm packages.
description:
  Given an npm package name and one or more npm repositories, will dump out a
  collection of nix files, one each for the initial package and all of its
  dependencies. Will generate a top-level 'default.nix' which returns a set
  containing all of these expressions. Subsequent invocations of the program
  using the same target directory will result in re-use of the existing files,
  to avoid unnecessary duplication.
license:             MIT
author:              Allen Nelson
maintainer:          anelson@narrativescience.com
build-type:          Simple
cabal-version:       >=1.10
bug-reports:         https://github.com/adnelson/nixfromnpm/issues

source-repository head
  type:     git
  location: git://github.com/adnelson/nixfromnpm.git

library
  exposed-modules:     NixFromNpm
  other-modules:       NixFromNpm.Common
                     , NixFromNpm.ConvertToNix
                     , NixFromNpm.NpmLookup
                     , NixFromNpm.NpmTypes
                     , NixFromNpm.NpmVersion
                     , NixFromNpm.Options
                     , NixFromNpm.SemVer
                     , NixFromNpm.Parsers.Common
                     , NixFromNpm.Parsers.NpmVersion
                     , NixFromNpm.Parsers.SemVer
  build-depends:       base >=4.8 && <4.9
                     , classy-prelude
                     , text
                     , mtl
                     , bytestring
                     , unordered-containers
                     , containers
                     , parsec
                     , aeson
                     , data-default
                     , shelly
                     , MissingH
                     , error-list
                     , text-render
                     , system-filepath
                     , filepath
                     , network-uri
                     , directory
                     , hnix
                     , optparse-applicative
  hs-source-dirs:      src
  default-language:    Haskell2010



executable nixfromnpm
  main-is:             Main.hs
  -- other-modules:
  other-extensions:    NoImplicitPrelude, OverloadedStrings
  build-depends:       base >=4.8 && <4.9
                     , classy-prelude
                     , text
                     , mtl
                     , bytestring
                     , unordered-containers
                     , containers
                     , parsec
                     , aeson
                     , data-default
                     , shelly
                     , MissingH
                     , error-list
                     , text-render
                     , system-filepath
                     , filepath
                     , network-uri
                     , directory
                     , hnix
                     , nixfromnpm
                     , optparse-applicative
  -- extra-libraries:     curl
  hs-source-dirs:      src
  default-language:    Haskell2010

Test-Suite spec
  Type:                exitcode-stdio-1.0
  Default-Language:    Haskell2010
  Hs-Source-Dirs:      src
                     , test
  Main-Is:             Spec.hs
  Build-Depends:       base >=4.8 && <4.9
                     , classy-prelude
                     , mtl
                     , text
                     , bytestring
                     , unordered-containers
                     , containers
                     , parsec
                     , io-streams
                     , http-client-streams
                     , aeson
                     , data-default
                     , shelly
                     , MissingH
                     , github
                     , hspec
                     , hspec-expectations
                     , error-list
                     , text-render
                     , system-filepath
                     , filepath
                     , network-uri
                     , directory
                     , hnix
                     , optparse-applicative
