{
  "description": {
    "spec-version": {
      "Right": ">=1.6"
    },
    "package": {
      "name": "sbv",
      "version": [
        1,
        3
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Levent Erkok, 2010-2012",
    "maintainer": "Levent Erkok (erkokl@gmail.com)",
    "author": "Levent Erkok",
    "stability": "Experimental",
    "tested-with": [],
    "homepage": "http://github.com/LeventErkok/sbv",
    "pkg-url": "",
    "bug-reports": "http://github.com/LeventErkok/sbv/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/LeventErkok/sbv.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Symbolic bit vectors: Bit-precise verification and automatic C-code generation.",
    "description": "Express properties about bit-precise Haskell programs and automatically prove\nthem using SMT solvers. Automatically generate C programs from Haskell functions.\nThe SBV library adds support for symbolic bit vectors, allowing formal models of\nbit-precise programs to be created.\n\n>   $ ghci -XScopedTypeVariables\n>   Prelude> :m Data.SBV\n>   Prelude Data.SBV> prove $ \\(x::SWord8) -> x `shiftL` 2 .== 4*x\n>   Q.E.D.\n>   Prelude Data.SBV> prove $ forAll [\"x\"] $ \\(x::SWord8) -> x `shiftL` 2 .== x\n>   Falsifiable. Counter-example:\n>     x = 128 :: SWord8\n\nThe library introduces the following types and concepts:\n\n* 'SBool': Symbolic Booleans (bits)\n\n* 'SWord8', 'SWord16', 'SWord32', 'SWord64': Symbolic Words (unsigned)\n\n* 'SInt8',  'SInt16',  'SInt32',  'SInt64': Symbolic Ints (signed)\n\n* 'SInteger': Symbolic unbounded integers (signed)\n\n* 'SArray', 'SFunArray': Flat arrays of symbolic values\n\n* 'STree': Full binary trees of symbolic values (for fast symbolic access)\n\n* Symbolic polynomials over GF(2^n), and polynomial arithmetic\n\n* Uninterpreted constants and functions over symbolic values, with user\ndefined SMT-Lib axioms\n\nFunctions built out of these types can be:\n\n* proven correct via an external SMT solver (the 'prove' function)\n\n* checked for satisfiability (the 'sat', and 'allSat' functions)\n\n* used in synthesis (the 'sat' function with existential variables)\n\n* optimized with respect to cost functions (the 'optimize', 'maximize', and 'minimize' functions)\n\n* quick-checked\n\n* used in concrete test case generation (the 'genTest' function), rendered as values in various\nlanguages, including Haskell and C.\n\nPredicates can have both existential and universal variables. Use of\nalternating quantifiers provides considerable expressive power.\nFurthermore, existential variables allow synthesis via model generation.\n\nThe SBV library can also compile Haskell functions that manipulate symbolic\nvalues directly to C, rendering them as straight-line C programs.\n\nIn addition to the library, the installation will create the\nexecutable @SBVUnitTests@. You should run it once the installation is complete,\nto make sure the unit tests are run and all is well.\n\nSBV is hosted at GitHub: <http://github.com/LeventErkok/sbv>. Comments,\nbug reports, and patches are always welcome.\n\nThe following people reported bugs, provided comments/feedback, or contributed to the\ndevelopment of SBV in various ways: Ian Blumenfeld, Ian Calvert, Iavor Diatchki,\nTom Hawkins, Lee Pike, Austin Seipp, Don Stewart, Josef Svenningsson, and Nis Wegmann.\n\nRelease notes can be seen at: <http://github.com/LeventErkok/sbv/blob/master/RELEASENOTES>.",
    "category": "Formal Methods, Theorem Provers, Bit vectors, Symbolic Computation, Math, SMT",
    "custom-fields": [
      [
        "x-revision",
        "1"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [
      "SBVUnitTest/GoldFiles/*.gold"
    ],
    "data-dir": ".",
    "extra-source-files": [
      "INSTALL",
      "README",
      "COPYRIGHT",
      "RELEASENOTES"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "SBV"
        ],
        [
          "Data",
          "SBV",
          "Internals"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "BitPrecise",
          "BitTricks"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "BitPrecise",
          "Legato"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "BitPrecise",
          "PrefixSum"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "CodeGeneration",
          "AddSub"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "CodeGeneration",
          "CRC_USB5"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "CodeGeneration",
          "Fibonacci"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "CodeGeneration",
          "GCD"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "CodeGeneration",
          "PopulationCount"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "CodeGeneration",
          "Uninterpreted"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Crypto",
          "AES"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Crypto",
          "RC4"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Existentials",
          "CRCPolynomial"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Polynomials",
          "Polynomials"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Puzzles",
          "Coins"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Puzzles",
          "Counts"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Puzzles",
          "DogCatMouse"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Puzzles",
          "Euler185"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Puzzles",
          "MagicSquare"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Puzzles",
          "NQueens"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Puzzles",
          "Sudoku"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Puzzles",
          "U2Bridge"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Uninterpreted",
          "AUF"
        ],
        [
          "Data",
          "SBV",
          "Examples",
          "Uninterpreted",
          "Function"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [
          [
            "Data",
            "SBV",
            "BitVectors",
            "Data"
          ],
          [
            "Data",
            "SBV",
            "BitVectors",
            "Model"
          ],
          [
            "Data",
            "SBV",
            "BitVectors",
            "PrettyNum"
          ],
          [
            "Data",
            "SBV",
            "BitVectors",
            "SignCast"
          ],
          [
            "Data",
            "SBV",
            "BitVectors",
            "Splittable"
          ],
          [
            "Data",
            "SBV",
            "BitVectors",
            "STree"
          ],
          [
            "Data",
            "SBV",
            "Compilers",
            "C"
          ],
          [
            "Data",
            "SBV",
            "Compilers",
            "CodeGen"
          ],
          [
            "Data",
            "SBV",
            "SMT",
            "SMT"
          ],
          [
            "Data",
            "SBV",
            "SMT",
            "SMTLib"
          ],
          [
            "Data",
            "SBV",
            "SMT",
            "SMTLib1"
          ],
          [
            "Data",
            "SBV",
            "SMT",
            "SMTLib2"
          ],
          [
            "Data",
            "SBV",
            "Provers",
            "Prover"
          ],
          [
            "Data",
            "SBV",
            "Provers",
            "SExpr"
          ],
          [
            "Data",
            "SBV",
            "Provers",
            "Yices"
          ],
          [
            "Data",
            "SBV",
            "Provers",
            "Z3"
          ],
          [
            "Data",
            "SBV",
            "Tools",
            "ExpectedValue"
          ],
          [
            "Data",
            "SBV",
            "Tools",
            "GenTest"
          ],
          [
            "Data",
            "SBV",
            "Tools",
            "Optimize"
          ],
          [
            "Data",
            "SBV",
            "Tools",
            "Polynomial"
          ],
          [
            "Data",
            "SBV",
            "Utils",
            "Boolean"
          ],
          [
            "Data",
            "SBV",
            "Utils",
            "TDiff"
          ],
          [
            "Data",
            "SBV",
            "Utils",
            "Lib"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "array",
            "version-range": ">=0.3.0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": ">=3 && <4.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.3.0.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": ">=1.1.0.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "directory",
            "version-range": ">=1.0.1.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "filepath",
            "version-range": ">=1.1.0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.0.1.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "old-time",
            "version-range": ">=1.0.0.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "pretty",
            "version-range": ">=1.0.1.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "process",
            "version-range": ">=1.0.1.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "QuickCheck",
            "version-range": ">=2.4.0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "random",
            "version-range": ">=1.0.1.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "strict-concurrency",
            "version-range": ">=0.2.4.1",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "array",
        "version-range": ">=0.3.0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": ">=3 && <4.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.3.0.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": ">=1.1.0.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "directory",
        "version-range": ">=1.0.1.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "filepath",
        "version-range": ">=1.1.0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.0.1.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "old-time",
        "version-range": ">=1.0.0.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "pretty",
        "version-range": ">=1.0.1.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "process",
        "version-range": ">=1.0.1.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "QuickCheck",
        "version-range": ">=2.4.0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "random",
        "version-range": ">=1.0.1.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "strict-concurrency",
        "version-range": ">=0.2.4.1",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "executables": {
    "SBVUnitTests": {
      "condTreeData": {
        "name": "SBVUnitTests",
        "module-path": "SBVUnitTest.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "SBVUnitTest",
            "."
          ],
          "otherModules": [
            [
              "SBVUnitTestBuildTime"
            ],
            [
              "SBVTest"
            ],
            [
              "Examples",
              "Arrays",
              "Memory"
            ],
            [
              "Examples",
              "Basics",
              "BasicTests"
            ],
            [
              "Examples",
              "Basics",
              "Higher"
            ],
            [
              "Examples",
              "Basics",
              "Index"
            ],
            [
              "Examples",
              "Basics",
              "ProofTests"
            ],
            [
              "Examples",
              "Basics",
              "QRem"
            ],
            [
              "Examples",
              "CRC",
              "CCITT"
            ],
            [
              "Examples",
              "CRC",
              "CCITT_Unidir"
            ],
            [
              "Examples",
              "CRC",
              "GenPoly"
            ],
            [
              "Examples",
              "CRC",
              "Parity"
            ],
            [
              "Examples",
              "CRC",
              "USB5"
            ],
            [
              "Examples",
              "Puzzles",
              "PowerSet"
            ],
            [
              "Examples",
              "Puzzles",
              "Temperature"
            ],
            [
              "Examples",
              "Uninterpreted",
              "Uninterpreted"
            ],
            [
              "TestSuite",
              "Arrays",
              "Memory"
            ],
            [
              "TestSuite",
              "Basics",
              "Arithmetic"
            ],
            [
              "TestSuite",
              "Basics",
              "BasicTests"
            ],
            [
              "TestSuite",
              "Basics",
              "Higher"
            ],
            [
              "TestSuite",
              "Basics",
              "Index"
            ],
            [
              "TestSuite",
              "Basics",
              "ProofTests"
            ],
            [
              "TestSuite",
              "Basics",
              "QRem"
            ],
            [
              "TestSuite",
              "BitPrecise",
              "BitTricks"
            ],
            [
              "TestSuite",
              "BitPrecise",
              "Legato"
            ],
            [
              "TestSuite",
              "BitPrecise",
              "PrefixSum"
            ],
            [
              "TestSuite",
              "CodeGeneration",
              "AddSub"
            ],
            [
              "TestSuite",
              "CodeGeneration",
              "CgTests"
            ],
            [
              "TestSuite",
              "CodeGeneration",
              "CRC_USB5"
            ],
            [
              "TestSuite",
              "CodeGeneration",
              "Fibonacci"
            ],
            [
              "TestSuite",
              "CodeGeneration",
              "GCD"
            ],
            [
              "TestSuite",
              "CodeGeneration",
              "PopulationCount"
            ],
            [
              "TestSuite",
              "CodeGeneration",
              "Uninterpreted"
            ],
            [
              "TestSuite",
              "Crypto",
              "AES"
            ],
            [
              "TestSuite",
              "Crypto",
              "RC4"
            ],
            [
              "TestSuite",
              "Existentials",
              "CRCPolynomial"
            ],
            [
              "TestSuite",
              "CRC",
              "CCITT"
            ],
            [
              "TestSuite",
              "CRC",
              "CCITT_Unidir"
            ],
            [
              "TestSuite",
              "CRC",
              "GenPoly"
            ],
            [
              "TestSuite",
              "CRC",
              "Parity"
            ],
            [
              "TestSuite",
              "CRC",
              "USB5"
            ],
            [
              "TestSuite",
              "Puzzles",
              "Coins"
            ],
            [
              "TestSuite",
              "Polynomials",
              "Polynomials"
            ],
            [
              "TestSuite",
              "Puzzles",
              "Counts"
            ],
            [
              "TestSuite",
              "Puzzles",
              "DogCatMouse"
            ],
            [
              "TestSuite",
              "Puzzles",
              "Euler185"
            ],
            [
              "TestSuite",
              "Puzzles",
              "MagicSquare"
            ],
            [
              "TestSuite",
              "Puzzles",
              "NQueens"
            ],
            [
              "TestSuite",
              "Puzzles",
              "PowerSet"
            ],
            [
              "TestSuite",
              "Puzzles",
              "Sudoku"
            ],
            [
              "TestSuite",
              "Puzzles",
              "U2Bridge"
            ],
            [
              "TestSuite",
              "Puzzles",
              "Temperature"
            ],
            [
              "TestSuite",
              "Uninterpreted",
              "AUF"
            ],
            [
              "TestSuite",
              "Uninterpreted",
              "Function"
            ],
            [
              "TestSuite",
              "Uninterpreted",
              "Uninterpreted"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=3 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "directory",
              "version-range": ">=1.0.1.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "HUnit",
              "version-range": ">=1.2.4.2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "filepath",
              "version-range": ">=1.1.0.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "process",
              "version-range": ">=1.0.1.3",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=3 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "directory",
          "version-range": ">=1.0.1.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "HUnit",
          "version-range": ">=1.2.4.2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "filepath",
          "version-range": ">=1.1.0.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "process",
          "version-range": ">=1.0.1.3",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
