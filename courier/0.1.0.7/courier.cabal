-- Initial courier.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                courier
version:             0.1.0.7
synopsis:           A message-passing library for simplifying network applications
description:         Inspired by Erlang's simple message-passing facilities, courier provides roughly similar 
                     capabilities. Applications simply create one or more endpoints, 
                     bind each to a transport using a given name, then can freely 
                     send / receive messages to other endpoints just by referencing the name each endpoint 
                     bound to its transport.
                     .
                     Note that while the simplicity is inspired by Erlang, the actual semantics of a receive 
                     operation are not: receive just returns the next message delivered to an endpoint by a 
                     transport. There is no attempt to perform pattern-matching on a range of alternatives, 
                     and thus enabling out-of-order receipt. Consequently, all messages delivered to an endpoint 
                     will always be received in the order delivered. In this sense, endpoints are more akin to 
                     channels in Go but without the strict typing.
                     
extra-source-files:  changes.md
homepage:          http://github.com/hargettp/courier
license:             MIT
license-file:        LICENSE
author:              Phil Hargett
maintainer:          phil@haphazardhouse.net
copyright:           Copyright (c) 2013 Phil Hargett

category:            Network,Distributed Computing,Message-Oriented
build-type:          Simple
cabal-version:       >=1.8

source-repository head
  type:     git
  location: https://github.com/hargettp/courier.git

library
  hs-source-dirs: src

  exposed-modules:
                  Network.Endpoints
                  Network.Transport
                  Network.Transport.Memory
                  Network.Transport.TCP
                  Network.Transport.UDP

  ghc-options: -Wall
  other-modules:
                  Network.Transport.Sockets
                  Network.Transport.Internal
  build-depends:       base >=4 && <5,
                       async,
                       bytestring,
                       cereal,
                       containers,
                       hslogger,
                       network,
                       network-simple,
                       stm,
                       text

Test-Suite test-courier
    type: exitcode-stdio-1.0
    hs-source-dirs: tests
    main-is: Tests.hs
    build-depends: 

        -- base modules
        base, 
        -- testing support
        HUnit, 
        test-framework,
        test-framework-hunit,
        -- Cabal,
        -- 3rd party modules
        cereal,
        directory,
        hslogger,
        network-simple,
        -- this project's modules
        courier

    ghc-options: -Wall -threaded
