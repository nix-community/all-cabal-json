name:                ministg
version:             0.2
cabal-version:       >= 1.6
synopsis:            an interpreter for an operational semantics for the STG machine. 
description:         ministg is an interpreter for a simple high-level operational semantics for the STG machine. The
                     semantics is taken from the research paper "Making a fast curry: push/enter vs. eval/apply
                     for higher-order languages", by Simon Marlow and Simon Peyton Jones. It provides the option
                     to trace the execution of the interpreter, rendering each step in a HTML file. This is useful
                     for understanding the behaviour of the STG machine, and also useful for experimenting with 
                     changes to the machine. It also supports an experimental call stack tracing facility.
category:            Language
license:             BSD3
license-file:        LICENSE
copyright:           (c) 2009 Bernard James Pope
author:              Bernard James Pope 
maintainer:          bjpop@csse.unimelb.edu.au
homepage:            http://www.haskell.org/haskellwiki/Ministg 
build-type:          Simple
stability:           experimental
tested-with:         GHC==6.10.4
extra-source-files:  README.txt test/*.stg 

Executable ministg 
  main-is:         Main.hs
  hs-source-dirs:  src
  build-depends:   base >= 3 && < 5, monads-tf, transformers, containers, parsec >= 3, pretty, haskell98, xhtml, directory, filepath
  other-modules:
      Ministg.AST
      Ministg.Lexer
      Ministg.Parser
      Ministg.Utils
      Ministg.Eval
      Ministg.Arity
      Ministg.Pretty
      Ministg.State
      Ministg.TraceEval
      Ministg.CallStack
      Ministg.Options
      Ministg.GC
      Ministg.Annotate
