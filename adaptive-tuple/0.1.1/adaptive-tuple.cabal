name:		adaptive-tuple
version:        0.1.1
synopsis:       Self-optimizing tuple types
description:
  Self optimizing tuple types.
  .
  Adaptive tuples are tuple types in which the number of elements is
  determined at run-time.  These structures are designed to combine
  the space-efficiency of tuples with the size flexibility of lists.
  .
  Adaptive tuples provide lazy and strict, unpacked data structures 
  for all tuple sizes from 0 to 20 elements.  Adaptive tuples of more than
  20 elements are allowed, however they are stored in an ordinary list.

category:       Data
author:		John W. Lato, jwlato@gmail.com
maintainer:	John W. Lato, jwlato@gmail.com
license:	BSD3
license-file:	LICENSE
homepage:       http://inmachina.net/~jwlato/haskell/
tested-with:    GHC == 6.12.1, GHC == 6.10.4
stability:	experimental
cabal-version:  >= 1.6

build-type:     Simple
extra-source-files:
  LICENSE

flag splitBase
  description: Use the new split-up base package.

library
 hs-source-dirs:
   src

 if flag(splitBase)
   build-depends:
     base >= 3 && < 5
 else
   build-depends:
     base < 3

 build-depends:
   type-level >= 0.2 && < 0.3
   ,template-haskell >= 2.0 && < 3

 exposed-modules:
   Data.AdaptiveTuple
   Data.AdaptiveTuple.Reps.Strict
   Data.AdaptiveTuple.Reps.Lazy
 other-modules:
   Data.AdaptiveTuple.AdaptiveTuple
   Data.AdaptiveTuple.TH

 ghc-options: -Wall
 if impl(ghc >= 6.8)
   ghc-options: -fwarn-tabs

source-repository head
  type:     darcs
  location: http://tanimoto.us/~jwlato/haskell/AdaptiveTuple
