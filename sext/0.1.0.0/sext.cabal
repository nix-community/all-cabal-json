name:                sext
version:             0.1.0.0
synopsis:            Lists, Texts and ByteStrings with type-encoded length
homepage:            http://github.com/dzhus/sext/

description:         Sext (/s/tatic t/ext/) provides type-level safety for
                     basic operations on string-like types (finite
                     lists of elements). Use it when you need static
                     guarantee on lengths of strings produced in your
                     code.

license:             BSD3
license-file:        LICENSE
author:              Dmitry Dzhus
maintainer:          dima@dzhus.org
category:            Data, Text, Type System
stability:           Experimental

build-type:          Simple
cabal-version:       >=1.10
tested-with:         GHC == 7.8.3

source-repository head
  type:     git
  location: http://github.com/dzhus/sext

flag text
  description: Build interface for Text
  default: True

flag bytestring
  description: Build interface for ByteString
  default: True

library
  exposed-modules:
    Data.Sext,
    Data.Sext.Class,
    Data.Sext.TH

  build-depends:
    base             >=4.7 && <4.8,
    template-haskell

  if flag(bytestring)
    cpp-options: -DWITH_BS
    build-depends:
      bytestring     >=0.10 && <0.11

  if flag(text)
    cpp-options: -DWITH_TEXT
    build-depends:
      text           >=1.1 && <1.2

  ghc-options: -Wall
  hs-source-dirs:      src
  default-language:    Haskell2010
