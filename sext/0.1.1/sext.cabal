name: sext
version: 0.1.1
cabal-version: >=1.10
build-type: Simple
license: BSD3
license-file: LICENSE
maintainer: dima@dzhus.org
stability: Experimental
homepage: http://github.com/dzhus/sext/
synopsis: Lists, Texts and ByteStrings with type-encoded length
description:
    Sext (/s/tatic t/ext/) provides type-level safety for basic operations on string-like types (finite lists of elements). Use it when you need static guarantee on lengths of strings produced in your code.
category: Data, Text, Type System
author: Dmitry Dzhus
tested-with: GHC ==7.10.3 GHC ==8.0.1

source-repository head
    type: git
    location: http://github.com/dzhus/sext

flag bytestring
    description:
        Build interface for ByteString

flag text
    description:
        Build interface for Text

library
    
    if flag(bytestring)
        build-depends:
            bytestring ==0.10.*
        cpp-options: -DWITH_BS
    
    if flag(text)
        build-depends:
            text >=1.1 && <1.3
        cpp-options: -DWITH_TEXT
    exposed-modules:
        Data.Sext
        Data.Sext.Class
        Data.Sext.TH
    build-depends:
        base >=4.7 && <5,
        template-haskell >=2.9 && <2.12
    default-language: Haskell2010
    hs-source-dirs: src
    other-modules:
        Paths_sext
    ghc-options: -Wall

