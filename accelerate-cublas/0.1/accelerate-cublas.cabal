Name:             accelerate-cublas
Version:          0.1
License:          BSD3
License-File:     LICENSE
Author:           Henning Thielemann <haskell@henning-thielemann.de>
Maintainer:       Henning Thielemann <haskell@henning-thielemann.de>
Homepage:         http://hub.darcs.net/thielema/accelerate-cublas/
Category:         Math
Synopsis:         Basic Linear Algebra using native CUBLAS library
Description:
  Basic Linear Algebra using native CUBLAS library.
  Currently only support for the most basic batched matrix operations.
Tested-With:      GHC==7.8.3
Cabal-Version:    >=1.14
Build-Type:       Simple

Flag buildExamples
  description: Build example executables
  default:     False

Source-Repository this
  Tag:         0.1
  Type:        darcs
  Location:    http://hub.darcs.net/thielema/accelerate-cublas/

Source-Repository head
  Type:        darcs
  Location:    http://hub.darcs.net/thielema/accelerate-cublas/

Library
  Build-Depends:
    accelerate-arithmetic >=0.1 && <0.2,
    accelerate-utility >=0.1 && <0.2,
    accelerate-cuda >=0.16 && <0.17,
    accelerate-io >=0.15 && <0.16,
    accelerate >=0.15 && <0.16,
    cublas >=0.2.0.2 && <0.3,
    cuda >=0.5 && <0.8,
    vector >=0.10.11 && <0.12,
    utility-ht >=0.0.8 && <0.1,
    base >=4.5 && <5

  GHC-Options:      -Wall -fwarn-missing-import-lists
  Hs-Source-Dirs:   src
  Default-Language: Haskell98
  Exposed-Modules:
    Data.Array.Accelerate.CUBLAS.Level2.Batched
    Data.Array.Accelerate.CUBLAS.Level3.Batched
  Other-Modules:
    Data.Array.Accelerate.CUBLAS.Level3.Batched.Foreign

Executable accelerate-cublas-demo
  GHC-Options:      -Wall -fwarn-missing-import-lists
  Hs-Source-Dirs:   example
  Default-Language: Haskell98
  Main-Is: Main.hs
  Build-Depends:
    accelerate-cublas,
    accelerate-cuda,
    accelerate-arithmetic,
    accelerate-utility,
    accelerate,
    random >=1.0 && <1.2,
    base

Benchmark newton-inverse
  Type:             exitcode-stdio-1.0
  Main-Is:          NewtonInverse.hs
  Hs-Source-Dirs:   benchmark
  Default-Language: Haskell98
  GHC-Options:      -Wall -threaded
  GHC-Prof-Options: -fprof-auto
  Build-Depends:
    accelerate-cublas,
    accelerate-arithmetic,
    accelerate-utility,
    accelerate-cuda,
    cuda >=0.5 && <0.8,
    accelerate,
    pooled-io >=0.0 && <0.1,
    timeit >=1.0 && <1.1,
    hmatrix >=0.15.2 && <0.16,
    random >=1.0.1 && <1.2,
    utility-ht,
    base
