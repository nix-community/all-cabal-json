Name:                JuicyPixels
Version:             1.3
Synopsis:            Picture loading/serialization (in png, jpeg and bitmap)
Description:
    This library can load and store images in various image formats,
 for now mainly in PNG/Bitmap and Jpeg
 
 Version 1.3 changelog:
    - Fix extractComponent function
    - Adding saving for YA8 functions

homepage:            https://github.com/Twinside/Juicy.Pixels
License:             BSD3
License-file:        LICENSE
Author:              Vincent Berthoux
Maintainer:          vincent.berthoux@gmail.com
Category:            Codec, Graphics
Build-type:          Simple

-- Extra-source-files:  

-- Constraint on the version of Cabal needed to build this package.
Cabal-version:       >= 1.10

Source-Repository head
    Type:      git
    Location:  git://github.com/Twinside/Juicy.Pixels.git

Source-Repository this
    Type:      git
    Location:  git://github.com/Twinside/Juicy.Pixels.git
    Tag:       v1.3

Library
  Default-Language: Haskell2010
  Exposed-modules:  Codec.Picture,
                    Codec.Picture.Bitmap,
                    Codec.Picture.Png,
                    Codec.Picture.Jpg,
                    Codec.Picture.Saving,
                    Codec.Picture.Types

  Ghc-options: -O3 -Wall
  Build-depends: base                >= 4       && < 5,
                 bytestring          >= 0.9     && < 0.10,
                 mtl                 >= 1.1     && < 2.2,
                 cereal              >= 0.3.3.0 && < 0.4,
                 zlib                >= 0.5.3.1,
                 transformers        >= 0.2.2   && < 0.4,
                 vector              >= 0.9     && < 1.0,
                 primitive           >= 0.4     && < 0.5,
                 deepseq             >= 1.1     && < 1.4

  -- Modules not exported by this package.
  Other-modules: Codec.Picture.Jpg.DefaultTable,
                 Codec.Picture.Jpg.FastIdct,
                 Codec.Picture.Jpg.FastDct,
                 Codec.Picture.Jpg.Types,
                 Codec.Picture.Png.Export,
                 Codec.Picture.Png.Type,
                 Codec.Picture.BitWriter
