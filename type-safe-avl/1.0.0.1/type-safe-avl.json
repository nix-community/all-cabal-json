{
  "description": {
    "spec-version": {
      "Left": [
        3,
        0
      ]
    },
    "package": {
      "name": "type-safe-avl",
      "version": [
        1,
        0,
        0,
        1
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "GPL_3_0_only"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Nicolás Rodríguez <marco.nicolas.rodriguez@protonmail.com>",
    "author": "Nicolás Rodríguez <marco.nicolas.rodriguez@protonmail.com>",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/nico-rodriguez/type-safe-avl",
    "pkg-url": "",
    "bug-reports": "https://github.com/nico-rodriguez/type-safe-avl/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/nico-rodriguez/type-safe-avl",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Type safe BST and AVL trees",
    "description": "Several implementations of type-safe binary search trees (BST) and balanced binary search trees (AVL).\n\nThese differ on how the structural invariants are implemented at the type level.\n\nEach of them have their own advantages and disadvantages.\n\nThis library shows different ways of implementing invariants at the type level,\neach of them providing different features, all of them enforced at compile time:\n\n  - Data invariant verification: assert at compile time if any given tree is BST/AVL.\n\n  - Program certification: verify at compile time if the implementation of the operations\n    over BST/AVL trees preserves the order of the keys and the balance in the heights.\n\n  - Type-safe data constructors: implementation of tree constructors that throw an error at compile time\n    if the tree being constructed is not BST/AVL.",
    "category": "Data",
    "custom-fields": [
      [
        "x-revision",
        "1"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README.md",
      "CHANGELOG.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Tree",
          "ITree"
        ],
        [
          "Data",
          "Tree",
          "Node"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Extern"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "FullExtern"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Intern"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Invariants"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Unsafe"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Unsafe",
          "Examples"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Utils"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Intern",
          "Delete"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Intern",
          "Constructors"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Intern",
          "Insert"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Intern",
          "Lookup"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Intern",
          "Examples"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Extern",
          "Delete"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Extern",
          "Constructors"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Extern",
          "Insert"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Extern",
          "InsertProofs"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Extern",
          "Lookup"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Extern",
          "Examples"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "Extern",
          "DeleteProofs"
        ],
        [
          "Data",
          "Tree",
          "BST",
          "FullExtern",
          "Examples"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Extern"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "FullExtern"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Intern"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Invariants"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Unsafe"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Unsafe",
          "Examples"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Intern",
          "Balance"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Intern",
          "Delete"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Intern",
          "Constructors"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Intern",
          "Insert"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Intern",
          "Lookup"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Intern",
          "Examples"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Extern",
          "BalanceProofs"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Extern",
          "Balance"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Extern",
          "Delete"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Extern",
          "Constructors"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Extern",
          "Insert"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Extern",
          "InsertProofs"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Extern",
          "Examples"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "Extern",
          "DeleteProofs"
        ],
        [
          "Data",
          "Tree",
          "AVL",
          "FullExtern",
          "Examples"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "KindSignatures"
          },
          {
            "enable-extension": "Safe"
          },
          {
            "enable-extension": "DerivingStrategies"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "UndecidableInstances"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-fmax-simplifier-iterations=0",
            "-Weverything"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "^>=4.15.0.0",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "^>=4.15.0.0",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
