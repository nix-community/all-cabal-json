{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "graphs",
      "version": [
        0,
        7,
        2
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Copyright (C) 2011-2013 Edward A. Kmett",
    "maintainer": "Edward A. Kmett <ekmett@gmail.com>",
    "author": "Edward A. Kmett",
    "stability": "experimental",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.0.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.2.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.4.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.6.3"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.8.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.10.3"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.0.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.2.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.4.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.6.5"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.8.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.10.7"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.0.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==9.2.2"
      }
    ],
    "homepage": "http://github.com/ekmett/graphs",
    "pkg-url": "",
    "bug-reports": "http://github.com/ekmett/graphs/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/ekmett/graphs.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "A simple monadic graph library",
    "description": "A \\\"not-very-Haskelly\\\" API for calculating traversals of graphs that may be too large to fit into memory.\nThe algorithms included are inspired by the visitor concept of the\n<http://www.boost.org/doc/libs/1_57_0/libs/graph/doc/visitor_concepts.html Boost Graph Library>.\n\nHere is a very simple example of how we might execute a depth-first-search. In this case the visitor simply collects the edges and vertices in the order that the corresponding functions get called. After the necessary imports,\n\n> import Data.Array\n> import Data.Monoid\n> import Data.Graph.AdjacencyList\n> import Data.Graph.Algorithm\n> import Data.Graph.Algorithm.DepthFirstSearch\n\ncreate an adjacency list where the vertices are labeled with integers.\n\n> graph :: Array Int [Int]\n> graph = array (0, 3) [(0, [1,2]), (1, [3]), (2, [3]), (3, [])]\n\n<<http://i.imgur.com/Pod1SH0.png>>\n\nWe need a data structure that instantiates `Monoid` to combine the results of\nour visitor functions.\n\n@\ndata Orderings = Orderings\n&#32;&#32;&#123;&#32;&#32;enterV :: [Int]\n&#32;&#32;,  enterE :: [(Int, Int)]\n&#32;&#32;,  gray   :: [(Int, Int)]\n&#32;&#32;,  exitV  :: [Int]\n&#32;&#32;,  black  :: [(Int, Int)]\n&#32;&#32;&#125;&#32;deriving Show\n\ninstance Monoid Orderings where\n&#32;mempty = Orderings [] [] [] [] []\n&#32;mappend (Orderings a1 a2 a3 a4 a5)(Orderings b1 b2 b3 b4 b5) =\n&#32;&#32;Orderings (a1 ++ b1) (a2 ++ b2) (a3 ++ b3) (a4 ++ b4) (a5 ++ b5)\n@\n\nThe `dfs` function's first argument is of type `GraphSearch` which is\na visitor containing the functions to be run at various times during the search.\nThe second argument is the starting vertex for the search.\n\n@\norderings :: GraphSearch (AdjacencyList Int) Orderings\norderings = GraphSearch\n&#32;&#32;(\\\\v -> return $ mempty &#123;enterV = [v]&#125;)\n&#32;&#32;(\\\\e -> return $ mempty &#123;enterE = [e]&#125;)\n&#32;&#32;(\\\\e -> return $ mempty &#123;gray   = [e]&#125;)\n&#32;&#32;(\\\\v -> return $ mempty &#123;exitV  = [v]&#125;)\n&#32;&#32;(\\\\e -> return $ mempty &#123;black  = [e]&#125;)\n@\n\nFinally `runAdjacencylist` unwraps the function in the `Adjacencylist` newtype and runs\nit on `graph`.\n\n> dfsTest :: Orderings\n> dfsTest = runAdjacencyList (dfs orderings 0) graph\n\nRunning `dfsTest` in ghci will yield:\n\n@\nOrderings &#123;enterV = [0,2,3,1], enterE = [(0,2),(2,3),(0,1)], gray = [], exitV = [3,2,1,0], black = [(1,3)]&#125;\n@",
    "category": "Algorithms, Data Structures, Graphs",
    "custom-fields": [
      [
        "x-revision",
        "1"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "CHANGELOG.markdown",
      "README.markdown"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Graph",
          "AdjacencyList"
        ],
        [
          "Data",
          "Graph",
          "AdjacencyMatrix"
        ],
        [
          "Data",
          "Graph",
          "Algorithm"
        ],
        [
          "Data",
          "Graph",
          "Algorithm",
          "DepthFirstSearch"
        ],
        [
          "Data",
          "Graph",
          "Algorithm",
          "BreadthFirstSearch"
        ],
        [
          "Data",
          "Graph",
          "Class"
        ],
        [
          "Data",
          "Graph",
          "Class",
          "AdjacencyList"
        ],
        [
          "Data",
          "Graph",
          "Class",
          "AdjacencyMatrix"
        ],
        [
          "Data",
          "Graph",
          "Class",
          "EdgeEnumerable"
        ],
        [
          "Data",
          "Graph",
          "Class",
          "Bidirectional"
        ],
        [
          "Data",
          "Graph",
          "Class",
          "VertexEnumerable"
        ],
        [
          "Data",
          "Graph",
          "Dual"
        ],
        [
          "Data",
          "Graph",
          "PropertyMap"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Data",
            "Graph",
            "Internal",
            "Color"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "FlexibleContexts"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-fno-warn-deprecations"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "array",
            "version-range": ">=0.3 && <0.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.2.2 && <0.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers-compat",
            "version-range": ">=0.3 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.3 && <0.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "void",
            "version-range": ">=0.5.5.1 && <1",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "array",
        "version-range": ">=0.3 && <0.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.2.2 && <0.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers-compat",
        "version-range": ">=0.3 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.3 && <0.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "void",
        "version-range": ">=0.5.5.1 && <1",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": [
      {
        "condBranchCondition": {
          "cond_not": {
            "variable": {
              "compiler": "GHC",
              "version": ">=8.0"
            }
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [
                {
                  "package-name": "semigroups",
                  "version-range": ">=0.16 && <1",
                  "library": [
                    {}
                  ]
                }
              ],
              "mixins": []
            }
          },
          "condTreeConstraints": [
            {
              "package-name": "semigroups",
              "version-range": ">=0.16 && <1",
              "library": [
                {}
              ]
            }
          ],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "variable": {
            "compiler": "GHC",
            "version": ">=8"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [
                  "-fno-warn-unused-matches"
                ],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      },
      {
        "condBranchCondition": {
          "variable": {
            "compiler": "GHC",
            "version": ">=8.6"
          }
        },
        "condBranchIfTrue": {
          "condTreeData": {
            "name": {},
            "exposed-modules": [],
            "re-exported-modules": [],
            "signatures": [],
            "exposed": true,
            "visibility": "LibraryVisibilityPublic",
            "build-info": {
              "buildable": true,
              "buildTools": [],
              "buildToolDepends": [],
              "cppOptions": [],
              "asmOptions": [],
              "cmmOptions": [],
              "ccOptions": [],
              "cxxOptions": [],
              "ldOptions": [],
              "pkgconfigDepends": [],
              "frameworks": [],
              "extraFrameworkDirs": [],
              "asmSources": [],
              "cmmSources": [],
              "cSources": [],
              "cxxSources": [],
              "jsSources": [],
              "hsSourceDirs": [],
              "otherModules": [],
              "virtualModules": [],
              "autogenModules": [],
              "defaultLanguage": null,
              "otherLanguages": [],
              "defaultExtensions": [],
              "otherExtensions": [],
              "oldExtensions": [],
              "extraLibs": [],
              "extraGHCiLibs": [],
              "extraBundledLibs": [],
              "extraLibFlavours": [],
              "extraDynLibFlavours": [],
              "extraLibDirs": [],
              "includeDirs": [],
              "includes": [],
              "autogenIncludes": [],
              "installIncludes": [],
              "options": [
                [
                  "-Wno-star-is-type"
                ],
                []
              ],
              "profOptions": [
                [],
                []
              ],
              "sharedOptions": [
                [],
                []
              ],
              "staticOptions": [
                [],
                []
              ],
              "customFieldsBI": [],
              "targetBuildDepends": [],
              "mixins": []
            }
          },
          "condTreeConstraints": [],
          "condTreeComponents": []
        }
      }
    ]
  }
}
