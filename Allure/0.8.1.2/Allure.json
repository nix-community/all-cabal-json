{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "Allure",
      "version": [
        0,
        8,
        1,
        2
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "COPYLEFT"
    ],
    "copyright": "",
    "maintainer": "Mikolaj Konarski <mikolaj.konarski@funktory.com>",
    "author": "Andres Loeh, Mikolaj Konarski and others",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==8.0.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.2.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.4.3"
      }
    ],
    "homepage": "http://allureofthestars.com",
    "pkg-url": "",
    "bug-reports": "http://github.com/AllureOfTheStars/Allure/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/AllureOfTheStars/Allure.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Near-future Sci-Fi roguelike and tactical squad game",
    "description": "Allure of the Stars is a near-future Sci-Fi roguelike\nand tactical squad game. Binaries and the game manual\nare available at the homepage, where you can also\ntry the game out in the browser:\n<http://allureofthestars.com/play>\n(It runs fastest on Chrome. Keyboard commands and savefiles\nare supported only on recent enough versions of browsers.\nMouse should work everywhere.)\n\nNot a single picture in this game. You have to imagine everything\nyourself, like with a book (a grown-up book, without pictures).\nOnce you learn to imagine things, though, you can keep exploring\nand mastering the world and making up stories for a long time.\n\nThe game is written in Haskell using the LambdaHack roguelike\ngame engine <http://hackage.haskell.org/package/LambdaHack>.\nPlease see the changelog file for recent improvements\nand the issue tracker for short-term plans. Long term goals\nare high replayability and auto-balancing through procedural\ncontent generation and persistent content modification\nbased on player behaviour. Contributions are welcome.",
    "category": "Game",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [
      "GameDefinition/config.ui.default",
      "GameDefinition/fonts/16x16x.fon",
      "GameDefinition/fonts/8x8xb.fon",
      "GameDefinition/fonts/8x8x.fon",
      "GameDefinition/fonts/LICENSE.16x16x",
      "GameDefinition/fonts/Fix15Mono-Bold.woff",
      "GameDefinition/fonts/LICENSE.Fix15Mono-Bold",
      "GameDefinition/InGameHelp.txt",
      "README.md",
      "CHANGELOG.md",
      "LICENSE",
      "COPYLEFT",
      "CREDITS"
    ],
    "data-dir": ".",
    "extra-source-files": [
      "GameDefinition/MainMenu.ascii",
      "GameDefinition/PLAYING.md",
      "Makefile"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "executables": {
    "Allure": {
      "condTreeData": {
        "name": "Allure",
        "module-path": "Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "GameDefinition"
          ],
          "otherModules": [
            [
              "Client",
              "UI",
              "Content",
              "KeyKind"
            ],
            [
              "Content",
              "CaveKind"
            ],
            [
              "Content",
              "ItemKind"
            ],
            [
              "Content",
              "ItemKindEmbed"
            ],
            [
              "Content",
              "ItemKindActor"
            ],
            [
              "Content",
              "ItemKindOrgan"
            ],
            [
              "Content",
              "ItemKindBlast"
            ],
            [
              "Content",
              "ItemKindTemporary"
            ],
            [
              "Content",
              "ModeKind"
            ],
            [
              "Content",
              "ModeKindPlayer"
            ],
            [
              "Content",
              "PlaceKind"
            ],
            [
              "Content",
              "RuleKind"
            ],
            [
              "Content",
              "TileKind"
            ],
            [
              "Implementation",
              "MonadClientImplementation"
            ],
            [
              "Implementation",
              "MonadServerImplementation"
            ],
            [
              "Implementation",
              "TieKnot"
            ],
            [
              "Paths_Allure"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "MonoLocalBinds"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "OverloadedStrings"
            },
            {
              "enable-extension": "BangPatterns"
            },
            {
              "enable-extension": "RecordWildCards"
            },
            {
              "enable-extension": "NamedFieldPuns"
            },
            {
              "enable-extension": "MultiWayIf"
            },
            {
              "enable-extension": "LambdaCase"
            },
            {
              "enable-extension": "StrictData"
            },
            {
              "enable-extension": "CPP"
            }
          ],
          "otherExtensions": [
            {
              "enable-extension": "TemplateHaskell"
            }
          ],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-Wcompat",
              "-Worphans",
              "-Wincomplete-uni-patterns",
              "-Wincomplete-record-updates",
              "-Wimplicit-prelude",
              "-Wmissing-home-modules",
              "-Widentities",
              "-Wredundant-constraints",
              "-Wall-missed-specialisations",
              "-fno-ignore-asserts",
              "-fexpose-all-unfoldings",
              "-fspecialise-aggressively",
              "-threaded",
              "-rtsopts",
              "-with-rtsopts=-A99m"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "LambdaHack",
              "version-range": ">=0.8.1.0 && <0.8.2.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": ">=2.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "async",
              "version-range": ">=2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.9 && <99",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.5.3.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "enummapset",
              "version-range": ">=0.5.2.2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "filepath",
              "version-range": ">=1.2.0.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "optparse-applicative",
              "version-range": ">=0.13",
              "library": [
                {}
              ]
            },
            {
              "package-name": "random",
              "version-range": ">=1.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": ">=0.11.2.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.4",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "LambdaHack",
          "version-range": ">=0.8.1.0 && <0.8.2.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": ">=2.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "async",
          "version-range": ">=2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.9 && <99",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.5.3.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "enummapset",
          "version-range": ">=0.5.2.2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "filepath",
          "version-range": ">=1.2.0.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "optparse-applicative",
          "version-range": ">=0.13",
          "library": [
            {}
          ]
        },
        {
          "package-name": "random",
          "version-range": ">=1.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": ">=0.11.2.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.4",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "variable": {
              "compiler": "GHCJS",
              "version": "-any"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "Allure",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [
                  "-DGHCJS_BUSY_YIELD=50",
                  "-DUSE_JSFILE"
                ],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          },
          "condBranchIfFalse": {
            "condTreeData": {
              "name": "Allure",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [
                  {
                    "package-name": "zlib",
                    "version-range": ">=0.5.3.1",
                    "library": [
                      {}
                    ]
                  }
                ],
                "mixins": []
              }
            },
            "condTreeConstraints": [
              {
                "package-name": "zlib",
                "version-range": ">=0.5.3.1",
                "library": [
                  {}
                ]
              }
            ],
            "condTreeComponents": []
          }
        }
      ]
    }
  },
  "test-suites": {
    "test": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "test.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "GameDefinition",
            "test"
          ],
          "otherModules": [
            [
              "Client",
              "UI",
              "Content",
              "KeyKind"
            ],
            [
              "Content",
              "CaveKind"
            ],
            [
              "Content",
              "ItemKind"
            ],
            [
              "Content",
              "ItemKindEmbed"
            ],
            [
              "Content",
              "ItemKindActor"
            ],
            [
              "Content",
              "ItemKindOrgan"
            ],
            [
              "Content",
              "ItemKindBlast"
            ],
            [
              "Content",
              "ItemKindTemporary"
            ],
            [
              "Content",
              "ModeKind"
            ],
            [
              "Content",
              "ModeKindPlayer"
            ],
            [
              "Content",
              "PlaceKind"
            ],
            [
              "Content",
              "RuleKind"
            ],
            [
              "Content",
              "TileKind"
            ],
            [
              "Implementation",
              "MonadClientImplementation"
            ],
            [
              "Implementation",
              "MonadServerImplementation"
            ],
            [
              "Implementation",
              "TieKnot"
            ],
            [
              "Paths_Allure"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "MonoLocalBinds"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "OverloadedStrings"
            },
            {
              "enable-extension": "BangPatterns"
            },
            {
              "enable-extension": "RecordWildCards"
            },
            {
              "enable-extension": "NamedFieldPuns"
            },
            {
              "enable-extension": "MultiWayIf"
            },
            {
              "enable-extension": "LambdaCase"
            },
            {
              "enable-extension": "StrictData"
            },
            {
              "enable-extension": "CPP"
            }
          ],
          "otherExtensions": [
            {
              "enable-extension": "TemplateHaskell"
            }
          ],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-Wcompat",
              "-Worphans",
              "-Wincomplete-uni-patterns",
              "-Wincomplete-record-updates",
              "-Wimplicit-prelude",
              "-Wmissing-home-modules",
              "-Widentities",
              "-Wredundant-constraints",
              "-fno-ignore-asserts",
              "-fexpose-all-unfoldings",
              "-fspecialise-aggressively",
              "-threaded",
              "-rtsopts",
              "-with-rtsopts=-A99m"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "LambdaHack",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": ">=2.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.9 && <99",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.5.3.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "enummapset",
              "version-range": ">=0.5.2.2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "filepath",
              "version-range": ">=1.2.0.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "optparse-applicative",
              "version-range": ">=0.13",
              "library": [
                {}
              ]
            },
            {
              "package-name": "random",
              "version-range": ">=1.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": ">=0.11.2.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.4",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "LambdaHack",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": ">=2.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.9 && <99",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.5.3.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "enummapset",
          "version-range": ">=0.5.2.2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "filepath",
          "version-range": ">=1.2.0.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "optparse-applicative",
          "version-range": ">=0.13",
          "library": [
            {}
          ]
        },
        {
          "package-name": "random",
          "version-range": ">=1.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": ">=0.11.2.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.4",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "variable": {
              "compiler": "GHCJS",
              "version": "-any"
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "",
              "interface": {
                "type": {
                  "name": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [
                  "-DGHCJS_BUSY_YIELD=50"
                ],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          },
          "condBranchIfFalse": {
            "condTreeData": {
              "name": "",
              "interface": {
                "type": {
                  "name": "",
                  "version": []
                }
              },
              "build-info": {
                "buildable": true,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [
                  {
                    "package-name": "zlib",
                    "version-range": ">=0.5.3.1",
                    "library": [
                      {}
                    ]
                  }
                ],
                "mixins": []
              }
            },
            "condTreeConstraints": [
              {
                "package-name": "zlib",
                "version-range": ">=0.5.3.1",
                "library": [
                  {}
                ]
              }
            ],
            "condTreeComponents": []
          }
        }
      ]
    }
  }
}
