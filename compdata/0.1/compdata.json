{
  "description": {
    "spec-version": {
      "Right": ">=1.8.0.6"
    },
    "package": {
      "name": "compdata",
      "version": [
        0,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "paba@diku.dk",
    "author": "Patrick Bahr, Tom Hvitved",
    "stability": "",
    "tested-with": [],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "Compositional Data Types",
    "description": "Based on Wouter Swierstra's Functional Pearl /Data types à la carte/\n(Journal of Functional Programming, 18(4):423-436, 2008),\nthis package provides a framework for defining recursive\ndata types in a compositional manner. The fundamental idea of\ncompositional data types is to separate the signature of a data type\nfrom the fixed point construction that produces its recursive\nstructure. By allowing to compose and decompose signatures,\n/compositional data types/ enable to combine data types in a flexible\nway. The key point of Wouter Swierstra's original work is to define\nfunctions on /compositional data types/ in a compositional manner as\nwell by leveraging Haskell's type class machinery.\n\nBuilding on that foundation, this library provides additional\nextensions and (run-time) optimisations which makes compositional data types\nusable for practical implementations. In particular, it\nprovides an excellent framework for manipulating and analysing\nabstract syntax trees in a type-safe manner. Thus, it is perfectly\nsuited for programming language implementations, especially, in an environment\nconsisting of a family of tightly interwoven /domain-specific languages/.\n\nIn concrete terms, this package provides the following features:\n\n*  Compositional data types in the style of Wouter Swierstra's\nFunctional Pearl /Data types à la carte/.\n\n*  Modular definition of function on compositional data types through\ncatamorphisms and anamorphisms as well as more structured\nrecursion schemes such as primitive recursion  and co-recursion,\nand course-of-value iteration and co-iteration.\n\n*  Support for monadic computations via monadic variants of all\nrecursion schemes.\n\n*  Support of a succinct programming style over compositional data types\nvia generic programming combinators that allow various forms of\ngeneric transformations and generic queries.\n\n*  Generalisation of compositional data types (terms) to\ncompositional data types \\\"with holes\\\" (contexts). This allows\nflexible reuse of a wide variety of catamorphisms (called\n/term homomorphisms/) as well as an efficient composition of them.\n\n*  Operations on signatures, for example, to add and remove\nannotations of abstract syntax trees. This includes combinators to\npropagate annotations fully automatically through certain\nterm homomorphisms.\n\n*  Optimisation of the implementation of recursion schemes. This\nincludes /short-cut fusion/ style optimisation rules which yield a\nperformance boost of up to factor six.\n\n*  Efficient implementation of catamorphisms on non-polynomial\nsignatures that contain function types. This allows to represent\n/higher-order abstract syntax/ with compositional data types.\n\n*  Automatic derivation of instances of all relevant type classes for\nusing compositional data types via /Template Haskell/. This includes\ninstances of 'Prelude.Eq', 'Prelude.Ord' and 'Prelude.Show' that are\nderived via instances for functorial variants of them. Additionally,\nalso /smart constructors/, which allow to easily construct inhabitants\nof compositional data types, are automatically generated.\n\n*  /Mutually recursive data types/. All of the above is also lifted to\nfamilies of mutually recursive data types.\n\nFor examples illustrating the use of compositional data types, consult\n\"Data.Comp\" resp. \"Data.Comp.Multi\" for mutually recursive data types.",
    "category": "Generics",
    "custom-fields": [],
    "build-type-raw": "Custom",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "testsuite/tests/Data_Test.hs",
      "testsuite/tests/Data/Comp_Test.hs",
      "testsuite/tests/Data/Comp/Equality_Test.hs",
      "testsuite/tests/Test/Utils.hs",
      "benchmark/Benchmark.hs",
      "benchmark/DataTypes.hs",
      "benchmark/Functions.hs",
      "benchmark/DataTypes/Comp.hs",
      "benchmark/DataTypes/Transform.hs",
      "benchmark/DataTypes/Standard.hs",
      "benchmark/Multi/DataTypes/Comp.hs",
      "benchmark/Multi/Functions/Comp/Eval.hs",
      "benchmark/Multi/Functions/Comp/Desugar.hs",
      "benchmark/Transformations.hs",
      "benchmark/Functions/Comp.hs",
      "benchmark/Functions/Comp/Eval.hs",
      "benchmark/Functions/Comp/Desugar.hs",
      "benchmark/Functions/Comp/FreeVars.hs",
      "benchmark/Functions/Comp/Inference.hs",
      "benchmark/Functions/Standard/Eval.hs",
      "benchmark/Functions/Standard/Desugar.hs",
      "benchmark/Functions/Standard/FreeVars.hs",
      "benchmark/Functions/Standard/Inference.hs",
      "benchmark/Functions/Standard.hs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "package-flags": [
    {
      "name": "test",
      "description": "Build test executable.",
      "default": false,
      "manual": false
    },
    {
      "name": "benchmark",
      "description": "Build benchmark executable.",
      "default": false,
      "manual": false
    }
  ],
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Comp"
        ],
        [
          "Data",
          "Comp",
          "Product"
        ],
        [
          "Data",
          "Comp",
          "Sum"
        ],
        [
          "Data",
          "Comp",
          "Term"
        ],
        [
          "Data",
          "Comp",
          "Algebra"
        ],
        [
          "Data",
          "Comp",
          "Equality"
        ],
        [
          "Data",
          "Comp",
          "Ordering"
        ],
        [
          "Data",
          "Comp",
          "DeepSeq"
        ],
        [
          "Data",
          "Comp",
          "Generic"
        ],
        [
          "Data",
          "Comp",
          "TermRewriting"
        ],
        [
          "Data",
          "Comp",
          "Automata"
        ],
        [
          "Data",
          "Comp",
          "Arbitrary"
        ],
        [
          "Data",
          "Comp",
          "Show"
        ],
        [
          "Data",
          "Comp",
          "Variables"
        ],
        [
          "Data",
          "Comp",
          "Decompose"
        ],
        [
          "Data",
          "Comp",
          "Unification"
        ],
        [
          "Data",
          "Comp",
          "Derive"
        ],
        [
          "Data",
          "Comp",
          "Matching"
        ],
        [
          "Data",
          "Comp",
          "Multi"
        ],
        [
          "Data",
          "Comp",
          "Multi",
          "Term"
        ],
        [
          "Data",
          "Comp",
          "Multi",
          "Sum"
        ],
        [
          "Data",
          "Comp",
          "Multi",
          "Functor"
        ],
        [
          "Data",
          "Comp",
          "Multi",
          "ExpFunctor"
        ],
        [
          "Data",
          "Comp",
          "Multi",
          "Foldable"
        ],
        [
          "Data",
          "Comp",
          "Multi",
          "Traversable"
        ],
        [
          "Data",
          "Comp",
          "Multi",
          "Algebra"
        ],
        [
          "Data",
          "Comp",
          "Multi",
          "Product"
        ],
        [
          "Data",
          "Comp",
          "Multi",
          "Show"
        ],
        [
          "Data",
          "Comp",
          "Multi",
          "Equality"
        ],
        [
          "Data",
          "Comp",
          "Multi",
          "Variables"
        ],
        [
          "Data",
          "Comp",
          "Multi",
          "Ops"
        ],
        [
          "Data",
          "Comp",
          "Ops"
        ],
        [
          "Data",
          "Comp",
          "ExpFunctor"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Data",
            "Comp",
            "Derive",
            "Utils"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Equality"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Ordering"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Arbitrary"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Show"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "DeepSeq"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "SmartConstructors"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Foldable"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "ExpFunctor"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Traversable"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Multi",
            "Functor"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Multi",
            "Foldable"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Multi",
            "Traversable"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Multi",
            "Equality"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Multi",
            "Show"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Multi",
            "ExpFunctor"
          ],
          [
            "Data",
            "Comp",
            "Derive",
            "Multi",
            "SmartConstructors"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-W"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "QuickCheck",
            "version-range": ">=2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "derive",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "th-expand-syns",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "QuickCheck",
        "version-range": ">=2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "derive",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "th-expand-syns",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "executables": {
    "test": {
      "condTreeData": {
        "name": "test",
        "module-path": "Data_Test.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "src",
            "testsuite/tests"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-fhpc"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "==4.*",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "QuickCheck",
              "version-range": ">=2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "test-framework",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "test-framework-quickcheck2",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "derive",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "th-expand-syns",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "deepseq",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "==4.*",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "QuickCheck",
          "version-range": ">=2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "test-framework",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "test-framework-quickcheck2",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "derive",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "th-expand-syns",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "deepseq",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "cond_not": {
              "variable": {
                "flag": "test"
              }
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "test",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": false,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    },
    "benchmark": {
      "condTreeData": {
        "name": "benchmark",
        "module-path": "Benchmark.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [
            "-DNO_RULES"
          ],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "src",
            "benchmark"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-W",
              "-O2"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "==4.*",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "QuickCheck",
              "version-range": ">=2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "derive",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "deepseq",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "criterion",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "random",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "uniplate",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "th-expand-syns",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "==4.*",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "QuickCheck",
          "version-range": ">=2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "derive",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "deepseq",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "criterion",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "random",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "uniplate",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "th-expand-syns",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": [
        {
          "condBranchCondition": {
            "cond_not": {
              "variable": {
                "flag": "benchmark"
              }
            }
          },
          "condBranchIfTrue": {
            "condTreeData": {
              "name": "benchmark",
              "module-path": "",
              "scope": "public",
              "build-info": {
                "buildable": false,
                "buildTools": [],
                "buildToolDepends": [],
                "cppOptions": [],
                "asmOptions": [],
                "cmmOptions": [],
                "ccOptions": [],
                "cxxOptions": [],
                "ldOptions": [],
                "pkgconfigDepends": [],
                "frameworks": [],
                "extraFrameworkDirs": [],
                "asmSources": [],
                "cmmSources": [],
                "cSources": [],
                "cxxSources": [],
                "jsSources": [],
                "hsSourceDirs": [],
                "otherModules": [],
                "virtualModules": [],
                "autogenModules": [],
                "defaultLanguage": null,
                "otherLanguages": [],
                "defaultExtensions": [],
                "otherExtensions": [],
                "oldExtensions": [],
                "extraLibs": [],
                "extraGHCiLibs": [],
                "extraBundledLibs": [],
                "extraLibFlavours": [],
                "extraDynLibFlavours": [],
                "extraLibDirs": [],
                "includeDirs": [],
                "includes": [],
                "autogenIncludes": [],
                "installIncludes": [],
                "options": [
                  [],
                  []
                ],
                "profOptions": [
                  [],
                  []
                ],
                "sharedOptions": [
                  [],
                  []
                ],
                "staticOptions": [
                  [],
                  []
                ],
                "customFieldsBI": [],
                "targetBuildDepends": [],
                "mixins": []
              }
            },
            "condTreeConstraints": [],
            "condTreeComponents": []
          }
        }
      ]
    }
  }
}
