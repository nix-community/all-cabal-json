-- This Cabal file generated using the Cartel library.
-- Cartel is available at:
-- http://www.github.com/massysett/cartel
--
-- Script name used to generate: genCabal.hs
-- Generated on: 2016-03-04 16:15:31.455268 EST
-- Cartel library version: 0.14.2.8

name: pinchot
version: 0.14.0.0
cabal-version: >= 1.14
license: BSD3
license-file: LICENSE
build-type: Simple
copyright: 2015 Omari Norman
author: Omari Norman
maintainer: omari@smileystation.com
stability: Experimental
homepage: http://www.github.com/massysett/pinchot
bug-reports: http://www.github.com/massysett/pinchot/issues
synopsis: Build parsers and ASTs for context-free grammars
description:
  Pinchot provides a simple language that you use to write a Haskell
  program that describes a context-free grammar.  When run, this program
  creates a value representing the grammar.  Using this value, you can
  automatically generate data types corresponding to the grammar,
  as well as an Earley parser to parse strings in that grammar.
  .
  For more documentation, see the Haddocks for the main Pinchot module.
category: Development
extra-source-files:
  README

Library
  exposed-modules:
    Pinchot
    Pinchot.Examples
    Pinchot.Examples.AllEarleyGrammars
    Pinchot.Examples.AllRulesRecord
    Pinchot.Examples.EarleyProduct
    Pinchot.Examples.Postal
    Pinchot.Examples.PostalAstAllRules
    Pinchot.Examples.PostalAstNoLenses
    Pinchot.Examples.PostalAstRuleTree
    Pinchot.Examples.QualifiedImport
    Pinchot.Internal
    Pinchot.Intervals
  build-depends:
      base >= 4.8.0.0 && < 5
    , containers >= 0.5.6.2
    , transformers >= 0.4.2.0
    , template-haskell >= 2.10
    , Earley >= 0.10.1.0
    , lens >= 4.13
  other-extensions:
    TemplateHaskell
  default-language: Haskell2010
  hs-source-dirs:
    lib

source-repository head
  type: git
  location: https://github.com/massysett/penny.git

Executable print-postal-grammar
  main-is: print-postal-grammar.hs
  if flag(executables)
    buildable: True
    other-modules:
      Pinchot
      Pinchot.Examples
      Pinchot.Examples.AllEarleyGrammars
      Pinchot.Examples.AllRulesRecord
      Pinchot.Examples.EarleyProduct
      Pinchot.Examples.Postal
      Pinchot.Examples.PostalAstAllRules
      Pinchot.Examples.PostalAstNoLenses
      Pinchot.Examples.PostalAstRuleTree
      Pinchot.Examples.QualifiedImport
      Pinchot.Internal
      Pinchot.Intervals
    hs-source-dirs:
      exe
    build-depends:
        base >= 4.8.0.0 && < 5
      , containers >= 0.5.6.2
      , transformers >= 0.4.2.0
      , template-haskell >= 2.10
      , Earley >= 0.10.1.0
      , lens >= 4.13
    other-extensions:
      TemplateHaskell
    default-language: Haskell2010
    hs-source-dirs:
      lib
  else
    buildable: False

Executable postal-parser
  main-is: postal-parser.hs
  if flag(executables)
    buildable: True
    other-modules:
      Pinchot
      Pinchot.Examples
      Pinchot.Examples.AllEarleyGrammars
      Pinchot.Examples.AllRulesRecord
      Pinchot.Examples.EarleyProduct
      Pinchot.Examples.Postal
      Pinchot.Examples.PostalAstAllRules
      Pinchot.Examples.PostalAstNoLenses
      Pinchot.Examples.PostalAstRuleTree
      Pinchot.Examples.QualifiedImport
      Pinchot.Internal
      Pinchot.Intervals
    hs-source-dirs:
      exe
    build-depends:
        pretty-show >= 1.6.9
      , base >= 4.8.0.0 && < 5
      , containers >= 0.5.6.2
      , transformers >= 0.4.2.0
      , template-haskell >= 2.10
      , Earley >= 0.10.1.0
      , lens >= 4.13
    other-extensions:
      TemplateHaskell
    default-language: Haskell2010
    hs-source-dirs:
      lib
  else
    buildable: False

Executable parrot
  main-is: parrot.hs
  if flag(executables)
    buildable: True
    other-modules:
      Pinchot
      Pinchot.Examples
      Pinchot.Examples.AllEarleyGrammars
      Pinchot.Examples.AllRulesRecord
      Pinchot.Examples.EarleyProduct
      Pinchot.Examples.Postal
      Pinchot.Examples.PostalAstAllRules
      Pinchot.Examples.PostalAstNoLenses
      Pinchot.Examples.PostalAstRuleTree
      Pinchot.Examples.QualifiedImport
      Pinchot.Internal
      Pinchot.Intervals
    hs-source-dirs:
      exe
    build-depends:
        base >= 4.8.0.0 && < 5
      , containers >= 0.5.6.2
      , transformers >= 0.4.2.0
      , template-haskell >= 2.10
      , Earley >= 0.10.1.0
      , lens >= 4.13
    other-extensions:
      TemplateHaskell
    default-language: Haskell2010
    hs-source-dirs:
      lib
  else
    buildable: False

Executable parakeet
  main-is: parakeet.hs
  if flag(executables)
    buildable: True
    other-modules:
      Pinchot
      Pinchot.Examples
      Pinchot.Examples.AllEarleyGrammars
      Pinchot.Examples.AllRulesRecord
      Pinchot.Examples.EarleyProduct
      Pinchot.Examples.Postal
      Pinchot.Examples.PostalAstAllRules
      Pinchot.Examples.PostalAstNoLenses
      Pinchot.Examples.PostalAstRuleTree
      Pinchot.Examples.QualifiedImport
      Pinchot.Internal
      Pinchot.Intervals
    hs-source-dirs:
      exe
    build-depends:
        base >= 4.8.0.0 && < 5
      , containers >= 0.5.6.2
      , transformers >= 0.4.2.0
      , template-haskell >= 2.10
      , Earley >= 0.10.1.0
      , lens >= 4.13
    other-extensions:
      TemplateHaskell
    default-language: Haskell2010
    hs-source-dirs:
      lib
  else
    buildable: False

Flag executables
  description: Build executables
  default: False
  manual: True
